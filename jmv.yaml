---
title: Analyses bundled with jamovi
name: jmv
version: 2.3.0
jms: '1.0'
authors:
  - Jonathon Love
  - Damian Dropmann
  - Ravi Selker
  - Victor Moreno
maintainer: Jonathon Love <jon@thon.cc>
date: 2021-011-18
description: >
  This module represents the analyses included with jamovi. It contains many
  common analyses (such as t-tests, ANOVAs, regression, correlation matrices,
  proportion tests, contingency tables, factor analysis, etc).
analyses:
  - title: Descriptives
    name: descriptives
    ns: jmv
    menuGroup: Exploration
    menuTitle: Descriptives
    description: >
      Descriptives are an assortment of summarising statistics, and
      visualizations which allow exploring the shape and distribution of data.
      It is good practice to explore your data with descriptives before
      proceeding to more formal tests.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        takeFromDataIfMissing: true
        permitted:
          - numeric
          - factor
          - id
        description:
          R: a vector of strings naming the variables of interest in `data`
      - name: splitBy
        title: Split by
        type: Variables
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the variables used to split `vars`
      - name: freq
        title: Frequency tables
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide frequency tables (nominal,
            ordinal variables only)
      - name: desc
        title: Descriptives
        type: List
        options:
          - title: Variables across rows
            name: rows
          - title: Variables across columns
            name: columns
        default: columns
        description:
          R: >
            `'rows'` or `'columns'` (default), display the variables across the
            rows or across the columns (default)
      - name: hist
        title: Histogram
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide histograms (continuous
            variables only)
      - name: dens
        title: Density
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide density plots (continuous
            variables only)
      - name: bar
        title: Bar plot
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide bar plots (nominal, ordinal
            variables only)
      - name: barCounts
        title: Counts
        type: Bool
        default: false
        hidden: true
        description:
          R: |
            `TRUE` or `FALSE` (default), add counts to the  bar plots
      - name: box
        title: Box plot
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide box plots (continuous variables
            only)
      - name: violin
        title: Violin
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide violin plots (continuous
            variables only)
      - name: dot
        title: Data
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide dot plots (continuous variables
            only)
      - name: dotType
        title: ''
        type: List
        options:
          - name: jitter
            title: Jittered
          - name: stack
            title: Stacked
        default: jitter
      - name: boxMean
        title: Mean
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), add mean to box plot
      - name: qq
        title: Q-Q plot
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Q-Q plots (continuous variables
            only)
      - name: 'n'
        title: 'N'
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide the sample size
      - name: missing
        title: Missing
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide the number of missing values
      - name: mean
        title: Mean
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide the mean
      - name: median
        title: Median
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide the median
      - name: mode
        title: Mode
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the mode
      - name: sum
        title: Sum
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the sum
      - name: sd
        title: Standard deviation
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide the standard deviation
      - name: variance
        title: Variance
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the variance
      - name: range
        title: Range
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the range
      - name: min
        title: Minimum
        type: Bool
        default: true
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the minimum
      - name: max
        title: Maximum
        type: Bool
        default: true
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the maximum
      - name: se
        title: Standard error
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the standard error
      - name: ci
        title: Confidence Interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            mean
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals
      - name: iqr
        title: IQR
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the interquartile range
      - name: skew
        title: Skewness
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the skewness
      - name: kurt
        title: Kurtosis
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the kurtosis
      - name: sw
        title: Shapiro-Wilk
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Shapiro-Wilk p-value
      - name: pcEqGr
        title: Cut points for
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide quantiles
      - name: pcNEqGr
        title: Cut point values
        type: Integer
        default: 4
        min: 2
        max: 10
        description:
          R: |
            an integer (default: 4) specifying the number of equal groups
      - name: pc
        title: Percentile
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide percentiles
      - name: pcValues
        title: Percentile values
        type: String
        default: '25,50,75'
        description:
          R: |
            a comma-sepated list (default: 25,50,75) specifying the percentiles
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":true,\"permitted\":[\"numeric\",\"factor\",\"id\"],\"description\":{\"R\":\"a vector of strings naming the variables of interest in `data`\"}},{\"name\":\"splitBy\",\"title\":\"Split by\",\"type\":\"Variables\",\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the variables used to split `vars`\"}},{\"name\":\"freq\",\"title\":\"Frequency tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide frequency tables (nominal, ordinal variables only)\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives\",\"type\":\"List\",\"options\":[{\"title\":\"Variables across rows\",\"name\":\"rows\"},{\"title\":\"Variables across columns\",\"name\":\"columns\"}],\"default\":\"columns\",\"description\":{\"R\":\"`'rows'` or `'columns'` (default), display the variables across the rows or across the columns (default)\\n\"}},{\"name\":\"hist\",\"title\":\"Histogram\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide histograms (continuous variables only)\\n\"}},{\"name\":\"dens\",\"title\":\"Density\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide density plots (continuous variables only)\\n\"}},{\"name\":\"bar\",\"title\":\"Bar plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide bar plots (nominal, ordinal variables only)\\n\"}},{\"name\":\"barCounts\",\"title\":\"Counts\",\"type\":\"Bool\",\"default\":false,\"hidden\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), add counts to the  bar plots\\n\"}},{\"name\":\"box\",\"title\":\"Box plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide box plots (continuous variables only)\\n\"}},{\"name\":\"violin\",\"title\":\"Violin\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide violin plots (continuous variables only)\\n\"}},{\"name\":\"dot\",\"title\":\"Data\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide dot plots (continuous variables only)\\n\"}},{\"name\":\"dotType\",\"title\":\"\",\"type\":\"List\",\"options\":[{\"name\":\"jitter\",\"title\":\"Jittered\"},{\"name\":\"stack\",\"title\":\"Stacked\"}],\"default\":\"jitter\"},{\"name\":\"boxMean\",\"title\":\"Mean\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), add mean to box plot\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Q-Q plots (continuous variables only)\\n\"}},{\"name\":\"n\",\"title\":\"N\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the sample size\\n\"}},{\"name\":\"missing\",\"title\":\"Missing\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the number of missing values\\n\"}},{\"name\":\"mean\",\"title\":\"Mean\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the mean\\n\"}},{\"name\":\"median\",\"title\":\"Median\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the median\\n\"}},{\"name\":\"mode\",\"title\":\"Mode\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the mode\\n\"}},{\"name\":\"sum\",\"title\":\"Sum\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the sum\\n\"}},{\"name\":\"sd\",\"title\":\"Standard deviation\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the standard deviation\\n\"}},{\"name\":\"variance\",\"title\":\"Variance\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the variance\\n\"}},{\"name\":\"range\",\"title\":\"Range\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the range\\n\"}},{\"name\":\"min\",\"title\":\"Minimum\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the minimum\\n\"}},{\"name\":\"max\",\"title\":\"Maximum\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the maximum\\n\"}},{\"name\":\"se\",\"title\":\"Standard error\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the standard error\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the mean\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals\\n\"}},{\"name\":\"iqr\",\"title\":\"IQR\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the interquartile range\\n\"}},{\"name\":\"skew\",\"title\":\"Skewness\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the skewness\\n\"}},{\"name\":\"kurt\",\"title\":\"Kurtosis\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the kurtosis\\n\"}},{\"name\":\"sw\",\"title\":\"Shapiro-Wilk\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Shapiro-Wilk p-value\\n\"}},{\"name\":\"pcEqGr\",\"title\":\"Cut points for\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide quantiles\\n\"}},{\"name\":\"pcNEqGr\",\"title\":\"Cut point values\",\"type\":\"Integer\",\"default\":4,\"min\":2,\"max\":10,\"description\":{\"R\":\"an integer (default: 4) specifying the number of equal groups\\n\"}},{\"name\":\"pc\",\"title\":\"Percentile\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide percentiles\\n\"}},{\"name\":\"pcValues\",\"title\":\"Percentile values\",\"type\":\"String\",\"default\":\"25,50,75\",\"description\":{\"R\":\"a comma-sepated list (default: 25,50,75) specifying the percentiles\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Descriptives\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tpermitted: [\"numeric\",\"factor\",\"id\"],\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Variables\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Split by\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"splitBy\",\n\t\t\t\t\t\t\theight: \"small\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tstyle: \"inline\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 2,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\tname: \"desc\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"freq\",\n\t\t\t\t\t\t\tlabel: \"Frequency tables\",\n\t\t\t\t\t\t\ticons: [\"variable-nominal\",\"variable-ordinal\"],\n\t\t\t\t\t\t\ticonPosition: \"right\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Statistics\",\n\t\t\tcollapsed: true,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 2,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Sample Size\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"n\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"missing\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Percentile Values\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"pcEqGr\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Cut points for\",\n\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"pcNEqGr\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"equal groups\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(pcEqGr)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"pc\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Percentiles\",\n\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"pcValues\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.string,\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"large\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(pc)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Central Tendency\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"mean\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"median\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"mode\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sum\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 2,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":1},\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Dispersion\",\n\t\t\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"sd\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Std. deviation\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"variance\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"range\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"min\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"max\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"iqr\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Mean Dispersion\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"se\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Std. error of Mean\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval for Mean\",\n\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":1},\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Distribution\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"skew\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"kurt\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Normality\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sw\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Plots\",\n\t\t\tcollapsed: true,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"small\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Histograms\",\n\t\t\t\t\t\t\t\t\ticonPosition: \"right\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"hist\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dens\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Q-Q Plots\",\n\t\t\t\t\t\t\t\t\ticonPosition: \"right\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"qq\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Q-Q\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Box Plots\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\ticonPosition: \"right\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"box\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"violin\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"dot\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dotType\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(dot)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"boxMean\",\n\t\t\t\t\t\t\t\t\tenable: \"(box || violin || dot)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Bar Plots\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"bar\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Independent Samples T-Test
    name: ttestIS
    ns: jmv
    menuGroup: T-Tests
    menuTitle: Independent Samples T-Test
    description: |-
      The Student's Independent samples t-test (sometimes called a two-samples
      t-test) is used to test the null hypothesis that two groups have the
      same mean. A low p-value suggests that the null hypothesis is not true,
      and therefore the group means are different.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Dependent Variables
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        rejectInf: false
        description:
          ui: >
            the dependent variables -- a separate t-test is performed for each
            dependent variable specified.
          R: >
            the dependent variables (not necessary when using a formula, see the
            examples)
      - name: group
        title: Grouping Variable
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          ui: |
            the variable specifying the groups; must have 2 levels.
          R: >
            the grouping variable with two levels (not necessary when using a
            formula, see the examples)
      - name: students
        title: Student's
        type: Bool
        default: true
        description:
          ui: |
            perform Student's independent samples t-tests.
          R: |
            `TRUE` (default) or `FALSE`, perform Student's t-tests
      - name: bf
        title: Bayes factor
        type: Bool
        default: false
        description:
          ui: |
            provide Bayes factors for the Student's independent samples t-tests.
          R: |
            `TRUE` or `FALSE` (default), provide Bayes factors
      - name: bfPrior
        title: Prior width
        type: Number
        default: 0.707
        min: 0.5
        max: 2
        description:
          ui: >
            the prior width for the Student's t-test's Bayes factors. Requires a
            value between 0.5 and 2.0, default 0.707.
          R: >
            a number between 0.5 and 2 (default 0.707), the prior width to use
            in calculating Bayes factors
      - name: welchs
        title: Welch's
        type: Bool
        default: false
        description:
          ui: |
            perform Welch's tests.
          R: |
            `TRUE` or `FALSE` (default), perform Welch's t-tests
      - name: mann
        title: Mann-Whitney U
        type: Bool
        default: false
        description:
          ui: |
            perform a Mann-Whitney U test.
          R: |
            `TRUE` or `FALSE` (default), perform Mann-Whitney U tests
      - name: hypothesis
        title: Alternative hypothesis
        type: List
        options:
          - name: different
            title: Group 1 ≠ Group 2
          - name: oneGreater
            title: Group 1 > Group 2
          - name: twoGreater
            title: Group 1 < Group 2
        default: different
        description:
          ui: |
            the alternative hypothesis.
          R: >
            `'different'` (default), `'oneGreater'` or `'twoGreater'`, the
            alternative hypothesis; group 1 different to group 2, group 1
            greater than group 2, and group 2 greater than group 1 respectively
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          ui: >
            perform Shapiro-Wilk tests of normality. A low p-value suggests the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality
      - name: qq
        title: Q-Q plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), provide Q-Q plots of residuals
      - name: eqv
        title: Homogeneity test
        type: Bool
        default: false
        description:
          ui: >
            provide Levene's tests for the homogeneity of variances. A low
            p-value suggests the groups have unequal variances.
          R: >
            `TRUE` or `FALSE` (default), perform Levene's tests for homogeneity
            of variances
      - name: meanDiff
        title: Mean difference
        type: Bool
        default: false
        description:
          ui: >
            provide mean differences and standard errors of the mean
            differences.
          R: |
            `TRUE` or `FALSE` (default), provide means and standard errors
      - name: ci
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the mean differences.
          R: |
            `TRUE` or `FALSE` (default), provide confidence intervals
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals
      - name: effectSize
        title: Effect Size
        type: Bool
        default: false
        description:
          ui: |
            provide effect-sizes (Cohen's D).
          R: |
            `TRUE` or `FALSE` (default), provide effect sizes
      - name: ciES
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the effect-sizes
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            effect-sizes
      - name: ciWidthES
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width for the effect-sizes.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals for the effect sizes
      - name: desc
        title: Descriptives Table
        type: Bool
        default: false
        description:
          ui: |
            provide descriptives for each group.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive statistics
      - name: plots
        title: Descriptives Plots
        type: Bool
        default: false
        description:
          ui: |
            provide descriptives plots.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive plots
      - name: miss
        title: Missing values
        type: List
        options:
          - perAnalysis
          - listwise
        default: perAnalysis
        description:
          ui: >
            the missing value exclusion method. `Analysis by analysis` excludes
            missing values from each analysis. `Listwise` excludes a row from
            all analyses if one of its values is missing.
          R: >
            `'perAnalysis'` or `'listwise'`, how to handle missing values;
            `'perAnalysis'` excludes missing values for individual dependent
            variables, `'listwise'` excludes a row from all analyses if one of
            its entries is missing.
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Dependent Variables\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"rejectInf\":false,\"description\":{\"ui\":\"the dependent variables -- a separate t-test is performed for each dependent variable specified.\\n\",\"R\":\"the dependent variables (not necessary when using a formula, see the examples)\\n\"}},{\"name\":\"group\",\"title\":\"Grouping Variable\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"ui\":\"the variable specifying the groups; must have 2 levels.\\n\",\"R\":\"the grouping variable with two levels (not necessary when using a formula, see the examples)\\n\"}},{\"name\":\"students\",\"title\":\"Student's\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"perform Student's independent samples t-tests.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, perform Student's t-tests\\n\"}},{\"name\":\"bf\",\"title\":\"Bayes factor\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Bayes factors for the Student's independent samples t-tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Bayes factors\\n\"}},{\"name\":\"bfPrior\",\"title\":\"Prior width\",\"type\":\"Number\",\"default\":0.707,\"min\":0.5,\"max\":2,\"description\":{\"ui\":\"the prior width for the Student's t-test's Bayes factors. Requires a value between 0.5 and 2.0, default 0.707.\\n\",\"R\":\"a number between 0.5 and 2 (default 0.707), the prior width to use in calculating Bayes factors\\n\"}},{\"name\":\"welchs\",\"title\":\"Welch's\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Welch's tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Welch's t-tests\\n\"}},{\"name\":\"mann\",\"title\":\"Mann-Whitney U\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform a Mann-Whitney U test.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Mann-Whitney U tests\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Alternative hypothesis\",\"type\":\"List\",\"options\":[{\"name\":\"different\",\"title\":\"Group 1 ≠ Group 2\"},{\"name\":\"oneGreater\",\"title\":\"Group 1 > Group 2\"},{\"name\":\"twoGreater\",\"title\":\"Group 1 < Group 2\"}],\"default\":\"different\",\"description\":{\"ui\":\"the alternative hypothesis.\\n\",\"R\":\"`'different'` (default), `'oneGreater'` or `'twoGreater'`, the alternative hypothesis; group 1 different to group 2, group 1 greater than group 2, and group 2 greater than group 1 respectively\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Shapiro-Wilk tests of normality. A low p-value suggests the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Q-Q plots of residuals\\n\"}},{\"name\":\"eqv\",\"title\":\"Homogeneity test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Levene's tests for the homogeneity of variances. A low p-value suggests the groups have unequal variances.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Levene's tests for homogeneity of variances\\n\"}},{\"name\":\"meanDiff\",\"title\":\"Mean difference\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide mean differences and standard errors of the mean differences.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide means and standard errors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the mean differences.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect Size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide effect-sizes (Cohen's D).\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide effect sizes\\n\"}},{\"name\":\"ciES\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the effect-sizes\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the effect-sizes\\n\"}},{\"name\":\"ciWidthES\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width for the effect-sizes.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals for the effect sizes\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives Table\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptives for each group.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive statistics\\n\"}},{\"name\":\"plots\",\"title\":\"Descriptives Plots\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptives plots.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive plots\\n\"}},{\"name\":\"miss\",\"title\":\"Missing values\",\"type\":\"List\",\"options\":[\"perAnalysis\",\"listwise\"],\"default\":\"perAnalysis\",\"description\":{\"ui\":\"the missing value exclusion method. `Analysis by analysis` excludes missing values from each analysis. `Listwise` excludes a row from all analyses if one of its values is missing.\\n\",\"R\":\"`'perAnalysis'` or `'listwise'`, how to handle missing values; `'perAnalysis'` excludes missing values for individual dependent variables, `'listwise'` excludes a row from all analyses if one of its entries is missing.\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Independent Samples T-Test\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\",\"nominal\",\"ordinal\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"group\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Tests\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"students\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bf\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Bayes factor\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"bfPrior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Prior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(bf)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"welchs\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"mann\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_different\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"different\",\n\t\t\t\t\t\t\t\t\tlabel: \"Group 1 ≠ Group 2\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_oneGreater\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"oneGreater\",\n\t\t\t\t\t\t\t\t\tlabel: \"Group 1 > Group 2\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_twoGreater\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"twoGreater\",\n\t\t\t\t\t\t\t\t\tlabel: \"Group 1 < Group 2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Missing values\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_perAnalysis\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"perAnalysis\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases analysis by analysis\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_listwise\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"listwise\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases listwise\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"meanDiff\",\n\t\t\t\t\t\t\t\t\tlabel: \"Mean difference\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff && ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"effectSize\",\n\t\t\t\t\t\t\t\t\tlabel: \"Effect size\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize && ciES)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"desc\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"plots\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives plots\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"eqv\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"norm\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"qq\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Paired Samples T-Test
    name: ttestPS
    ns: jmv
    menuGroup: T-Tests
    menuTitle: Paired Samples T-Test
    description: |-
      The Student's paired samples t-test (sometimes called a
      dependent-samples t-test) is used to test the null hypothesis that the
      difference between pairs of measurements is equal to zero. A low p-value
      suggests that the null hypothesis is not true, and that the
      difference between the measurement pairs is not zero.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: pairs
        title: Paired Variables
        type: Pairs
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          ui: >
            the pairs of measurements -- a separate t-test is performed for each
            pair of measurements.
          R: |
            a list of lists specifying the pairs of measurement in `data`
      - name: students
        title: Student's test
        type: Bool
        default: true
        description:
          ui: |
            perform Student's paired samples t-tests.
          R: |
            `TRUE` (default) or `FALSE`, perform Student's t-tests
      - name: bf
        title: Bayes factor
        type: Bool
        default: false
        description:
          ui: |
            provide Bayes factors for the Student's paired samples t-tests.
          R: |
            `TRUE` or `FALSE` (default), provide Bayes factors
      - name: bfPrior
        title: Prior width
        type: Number
        default: 0.707
        min: 0.5
        max: 2
        description:
          ui: >
            the prior width for the Student's t-test's Bayes factors. Requires a
            value between 0.5 and 2.0, default 0.707.
          R: >
            a number between 0.5 and 2 (default 0.707), the prior width to use
            in calculating Bayes factors
      - name: wilcoxon
        title: Wilcoxon signed rank test
        type: Bool
        default: false
        description:
          ui: |
            perform Wilcoxon signed rank tests.
          R: |
            `TRUE` or `FALSE` (default), perform Wilcoxon signed rank tests
      - name: hypothesis
        title: Alternative hypothesis
        type: List
        options:
          - different
          - oneGreater
          - twoGreater
        default: different
        description:
          ui: |
            the alternative hypothesis.
          R: >
            `'different'` (default), `'oneGreater'` or `'twoGreater'`, the
            alternative hypothesis; measure 1 different to measure 2, measure 1
            greater than measure 2, and measure 2 greater than measure 1
            respectively
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          ui: >
            perform Shapiro-Wilk tests of normality. A low p-value suggests the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-wilk normality tests
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: meanDiff
        title: Mean difference
        type: Bool
        default: false
        description:
          ui: >
            provide mean differences and standard errors of the mean
            differences.
          R: |
            `TRUE` or `FALSE` (default), provide means and standard errors
      - name: ci
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the mean differences.
          R: |
            `TRUE` or `FALSE` (default), provide confidence intervals
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals
      - name: effectSize
        title: Effect Size
        type: Bool
        default: false
        description:
          ui: |
            provide effect-sizes (Cohen's D).
          R: |
            `TRUE` or `FALSE` (default), provide effect sizes
      - name: ciES
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the effect-sizes
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            effect-sizes
      - name: ciWidthES
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width for the effect-sizes.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals for the effect sizes
      - name: desc
        title: Descriptives Table
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide descriptive statistics
      - name: plots
        title: Descriptives Plots
        type: Bool
        default: false
        description:
          ui: |
            provide descriptives for each group of measurements.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive plots
      - name: miss
        title: Missing values
        type: List
        options:
          - perAnalysis
          - listwise
        default: perAnalysis
        description:
          ui: >
            the missing value exclusion method. `Analysis by analysis` excludes
            missing values from each analysis. `Listwise` excludes a row from
            all analyses if one of its values is missing.
          R: >
            `'perAnalysis'` or `'listwise'`, how to handle missing values;
            `'perAnalysis'` excludes missing values for individual dependent
            variables, `'listwise'` excludes a row from all analyses if one of
            its entries is missing
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"pairs\",\"title\":\"Paired Variables\",\"type\":\"Pairs\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the pairs of measurements -- a separate t-test is performed for each pair of measurements.\\n\",\"R\":\"a list of lists specifying the pairs of measurement in `data`\\n\"}},{\"name\":\"students\",\"title\":\"Student's test\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"perform Student's paired samples t-tests.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, perform Student's t-tests\\n\"}},{\"name\":\"bf\",\"title\":\"Bayes factor\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Bayes factors for the Student's paired samples t-tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Bayes factors\\n\"}},{\"name\":\"bfPrior\",\"title\":\"Prior width\",\"type\":\"Number\",\"default\":0.707,\"min\":0.5,\"max\":2,\"description\":{\"ui\":\"the prior width for the Student's t-test's Bayes factors. Requires a value between 0.5 and 2.0, default 0.707.\\n\",\"R\":\"a number between 0.5 and 2 (default 0.707), the prior width to use in calculating Bayes factors\\n\"}},{\"name\":\"wilcoxon\",\"title\":\"Wilcoxon signed rank test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Wilcoxon signed rank tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Wilcoxon signed rank tests\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Alternative hypothesis\",\"type\":\"List\",\"options\":[\"different\",\"oneGreater\",\"twoGreater\"],\"default\":\"different\",\"description\":{\"ui\":\"the alternative hypothesis.\\n\",\"R\":\"`'different'` (default), `'oneGreater'` or `'twoGreater'`, the alternative hypothesis; measure 1 different to measure 2, measure 1 greater than measure 2, and measure 2 greater than measure 1 respectively\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Shapiro-Wilk tests of normality. A low p-value suggests the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-wilk normality tests\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"meanDiff\",\"title\":\"Mean difference\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide mean differences and standard errors of the mean differences.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide means and standard errors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the mean differences.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect Size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide effect-sizes (Cohen's D).\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide effect sizes\\n\"}},{\"name\":\"ciES\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the effect-sizes\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the effect-sizes\\n\"}},{\"name\":\"ciWidthES\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width for the effect-sizes.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals for the effect sizes\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives Table\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide descriptive statistics\\n\"}},{\"name\":\"plots\",\"title\":\"Descriptives Plots\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptives for each group of measurements.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive plots\\n\"}},{\"name\":\"miss\",\"title\":\"Missing values\",\"type\":\"List\",\"options\":[\"perAnalysis\",\"listwise\"],\"default\":\"perAnalysis\",\"description\":{\"ui\":\"the missing value exclusion method. `Analysis by analysis` excludes missing values from each analysis. `Listwise` excludes a row from all analyses if one of its values is missing.\\n\",\"R\":\"`'perAnalysis'` or `'listwise'`, how to handle missing values; `'perAnalysis'` excludes missing values for individual dependent variables, `'listwise'` excludes a row from all analyses if one of its entries is missing\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Paired Samples T-Test\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"pairs\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\t\t\titemDropBehaviour: \"overwrite\",\n\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"i1\",\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"i2\",\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Tests\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"students\",\n\t\t\t\t\t\t\t\t\tlabel: \"Student's\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bf\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Bayes factor\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"bfPrior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Prior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(bf)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"wilcoxon\",\n\t\t\t\t\t\t\t\t\tlabel: \"Wilcoxon rank\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_different\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"different\",\n\t\t\t\t\t\t\t\t\tlabel: \"Measure 1 ≠ Measure 2\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_oneGreater\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"oneGreater\",\n\t\t\t\t\t\t\t\t\tlabel: \"Measure 1 > Measure 2\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_twoGreater\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"twoGreater\",\n\t\t\t\t\t\t\t\t\tlabel: \"Measure 1 < Measure 2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Missing values\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_perAnalysis\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"perAnalysis\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases analysis by analysis\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_listwise\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"listwise\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases listwise\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"meanDiff\",\n\t\t\t\t\t\t\t\t\tlabel: \"Mean difference\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff && ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"effectSize\",\n\t\t\t\t\t\t\t\t\tlabel: \"Effect size\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize && ciES)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"desc\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"plots\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives plots\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"norm\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"qq\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: One Sample T-Test
    name: ttestOneS
    ns: jmv
    menuGroup: T-Tests
    menuTitle: One Sample T-Test
    description: |-
      The Student's One-sample t-test is used to test the null hypothesis that
      the true mean is equal to a particular value (typically zero). A low
      p-value suggests that the null hypothesis is not true, and therefore
      the true mean must be different from the test value.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Dependent Variables
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        rejectInf: false
        description:
          ui: >
            the variables of interest -- a separate t-test is performed for each
            variable specified.
          R: |
            a vector of strings naming the variables of interest in `data`
      - name: students
        title: Student's test
        type: Bool
        default: true
        description:
          ui: |
            perform Student's one-sample t-tests.
          R: |
            `TRUE` (default) or `FALSE`, perform Student's t-tests
      - name: bf
        title: Bayes factor
        type: Bool
        default: false
        description:
          ui: |
            provide Bayes factors for the Student's one-sample t-tests.
          R: |
            `TRUE` or `FALSE` (default), provide Bayes factors
      - name: bfPrior
        title: Prior width
        type: Number
        default: 0.707
        min: 0.5
        max: 2
        description:
          ui: >
            the prior width for the Student's t-test's Bayes factors. Requires a
            value between 0.5 and 2.0, default 0.707.
          R: >
            a number between 0.5 and 2.0 (default 0.707), the prior width to use
            in calculating Bayes factors
      - name: wilcoxon
        title: Wilcoxon signed rank test
        type: Bool
        default: false
        description:
          ui: |
            perform Wilcoxon signed rank tests.
          R: |
            `TRUE` or `FALSE` (default), perform Wilcoxon signed rank tests
      - name: testValue
        title: Test Value
        type: Number
        default: 0
        description:
          ui: the test value to test against (typically zero).
          R: a number specifying the value of the null hypothesis
      - name: hypothesis
        title: Alternative hypothesis
        type: List
        options:
          - dt
          - gt
          - lt
        default: dt
        description:
          ui: |
            the alternative and null hypotheses;

            |              | Alternative (Hₐ)  | Null (H₀)          |
            |--------------|-------------------|--------------------|
            | ≠ Test value | Mean ≠ Test value | Mean = Test value  |
            | > Test value | Mean > Test value | Mean <= Test value |
            | < Test value | Mean < Test value | Mean >= Test value |
          R: >
            `'dt'` (default), `'gt'` or `'lt'`, the alternative hypothesis;
            different to `testValue`, greater than `testValue`, and less than
            `testValue` respectively
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          ui: >
            perform a Shapiro-Wilk test of normality. A low p-value suggests the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-wilk tests of normality
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide a Q-Q plot of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: meanDiff
        title: Mean difference
        type: Bool
        default: false
        description:
          ui: >
            provide mean differences, and standard errors of the mean
            differences, between the mean estimate, and the test value.
          R: |
            `TRUE` or `FALSE` (default), provide means and standard deviations
      - name: ci
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: >
            provide a confidence interval for the difference between the mean
            estimate and the test value.
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            mean difference
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals
      - name: effectSize
        title: Effect size
        type: Bool
        default: false
        description:
          ui: |
            provide effect-sizes (Cohen's d).
          R: |
            `TRUE` or `FALSE` (default), provide Cohen's d effect sizes
      - name: ciES
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the effect-sizes
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            effect-sizes
      - name: ciWidthES
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width for the effect-sizes.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals for the effect sizes
      - name: desc
        title: Descriptives Table
        type: Bool
        default: false
        description:
          ui: |
            provide a table of descriptives for each variable.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive statistics
      - name: plots
        title: Descriptives Plots
        type: Bool
        default: false
        description:
          ui: provide descriptive plots for each variable.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive plots
      - name: miss
        title: Missing values
        type: List
        options:
          - perAnalysis
          - listwise
        default: perAnalysis
        description:
          ui: >
            the missing value exclusion method. `Analysis by analysis` excludes
            missing values from each variable. `Listwise` excludes a row from
            all analyses if one of its values is missing.
          R: >
            `'perAnalysis'` or `'listwise'`, how to handle missing values;
            `'perAnalysis'` excludes missing values for individual dependent
            variables, `'listwise'` excludes a row from all analyses if one of
            its entries is missing.
      - name: mann
        type: Bool
        default: false
        hidden: true
        description: deprecated
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Dependent Variables\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"rejectInf\":false,\"description\":{\"ui\":\"the variables of interest -- a separate t-test is performed for each variable specified.\\n\",\"R\":\"a vector of strings naming the variables of interest in `data`\\n\"}},{\"name\":\"students\",\"title\":\"Student's test\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"perform Student's one-sample t-tests.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, perform Student's t-tests\\n\"}},{\"name\":\"bf\",\"title\":\"Bayes factor\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Bayes factors for the Student's one-sample t-tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Bayes factors\\n\"}},{\"name\":\"bfPrior\",\"title\":\"Prior width\",\"type\":\"Number\",\"default\":0.707,\"min\":0.5,\"max\":2,\"description\":{\"ui\":\"the prior width for the Student's t-test's Bayes factors. Requires a value between 0.5 and 2.0, default 0.707.\\n\",\"R\":\"a number between 0.5 and 2.0 (default 0.707), the prior width to use in calculating Bayes factors\\n\"}},{\"name\":\"wilcoxon\",\"title\":\"Wilcoxon signed rank test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Wilcoxon signed rank tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Wilcoxon signed rank tests\\n\"}},{\"name\":\"testValue\",\"title\":\"Test Value\",\"type\":\"Number\",\"default\":0,\"description\":{\"ui\":\"the test value to test against (typically zero).\",\"R\":\"a number specifying the value of the null hypothesis\"}},{\"name\":\"hypothesis\",\"title\":\"Alternative hypothesis\",\"type\":\"List\",\"options\":[\"dt\",\"gt\",\"lt\"],\"default\":\"dt\",\"description\":{\"ui\":\"the alternative and null hypotheses;\\n\\n|              | Alternative (Hₐ)  | Null (H₀)          |\\n|--------------|-------------------|--------------------|\\n| ≠ Test value | Mean ≠ Test value | Mean = Test value  |\\n| > Test value | Mean > Test value | Mean <= Test value |\\n| < Test value | Mean < Test value | Mean >= Test value |\\n\",\"R\":\"`'dt'` (default), `'gt'` or `'lt'`, the alternative hypothesis; different to `testValue`, greater than `testValue`, and less than `testValue` respectively\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform a Shapiro-Wilk test of normality. A low p-value suggests the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-wilk tests of normality\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a Q-Q plot of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"meanDiff\",\"title\":\"Mean difference\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide mean differences, and standard errors of the mean differences, between the mean estimate, and the test value.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide means and standard deviations\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a confidence interval for the difference between the mean estimate and the test value.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the mean difference\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide effect-sizes (Cohen's d).\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Cohen's d effect sizes\\n\"}},{\"name\":\"ciES\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the effect-sizes\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the effect-sizes\\n\"}},{\"name\":\"ciWidthES\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width for the effect-sizes.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals for the effect sizes\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives Table\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a table of descriptives for each variable.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive statistics\\n\"}},{\"name\":\"plots\",\"title\":\"Descriptives Plots\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptive plots for each variable.\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive plots\\n\"}},{\"name\":\"miss\",\"title\":\"Missing values\",\"type\":\"List\",\"options\":[\"perAnalysis\",\"listwise\"],\"default\":\"perAnalysis\",\"description\":{\"ui\":\"the missing value exclusion method. `Analysis by analysis` excludes missing values from each variable. `Listwise` excludes a row from all analyses if one of its values is missing.\\n\",\"R\":\"`'perAnalysis'` or `'listwise'`, how to handle missing values; `'perAnalysis'` excludes missing values for individual dependent variables, `'listwise'` excludes a row from all analyses if one of its entries is missing.\\n\"}},{\"name\":\"mann\",\"type\":\"Bool\",\"default\":false,\"hidden\":true,\"description\":\"deprecated\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"One Sample T-Test\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Tests\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"students\",\n\t\t\t\t\t\t\t\t\tlabel: \"Student's\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bf\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Bayes factor\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"bfPrior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Prior\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(bf)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"wilcoxon\",\n\t\t\t\t\t\t\t\t\tlabel: \"Wilcoxon rank\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"testValue\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Test value\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_dt\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"dt\",\n\t\t\t\t\t\t\t\t\tlabel: \"≠ Test value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_gt\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"gt\",\n\t\t\t\t\t\t\t\t\tlabel: \"> Test value\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_lt\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"lt\",\n\t\t\t\t\t\t\t\t\tlabel: \"< Test value\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Missing values\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_perAnalysis\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"perAnalysis\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases analysis by analysis\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_listwise\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"listwise\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases listwise\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"meanDiff\",\n\t\t\t\t\t\t\t\t\tlabel: \"Mean difference\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(meanDiff && ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"effectSize\",\n\t\t\t\t\t\t\t\t\tlabel: \"Effect size\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthES\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(effectSize && ciES)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"desc\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"plots\",\n\t\t\t\t\t\t\t\t\tlabel: \"Descriptives plots\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"norm\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"qq\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: One-Way ANOVA
    name: anovaOneW
    ns: jmv
    menuGroup: ANOVA
    menuTitle: One-Way ANOVA
    description: |-
      The Analysis of Variance (ANOVA) is used to explore the relationship
      between a continuous dependent variable, and one or more categorical
      explanatory variables. This 'One-Way ANOVA' is a simplified version of
      the 'normal' ANOVA, allowing only a single explanatory factor, however
      also providing a Welch's ANOVA. The Welch's ANOVA has the advantage that
      it need not assume that the variances of all groups are equal.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: deps
        title: Dependent Variables
        type: Variables
        required: true
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          ui: |
            the dependent variables. For ANOVA, these will be continuous.
          R: |
            a string naming the dependent variables in `data`
      - name: group
        title: Grouping Variable
        type: Variable
        required: true
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          ui: >
            the explanatory or independent variable. For ANOVA this will be
            categorical.
          R: |
            a string naming the grouping or independent variable in `data`
      - name: welchs
        title: Don't assume equal (Welch's)
        type: Bool
        default: true
        description:
          ui: |
            perform Welch's ANOVAs.
          R: >
            `TRUE` (default) or `FALSE`, perform Welch's one-way ANOVA which
            does not assume equal variances
      - name: fishers
        title: Assume equal (Fisher's)
        type: Bool
        default: false
        description:
          ui: |
            perform Fisher's (or what might be call 'normal') ANOVAs.
          R: >
            `TRUE` or `FALSE` (default), perform Fisher's one-way ANOVA which
            assumes equal variances
      - name: miss
        title: Missing values exclusion method
        type: List
        options:
          - perAnalysis
          - listwise
        default: perAnalysis
        description:
          ui: >
            the missing value exclusion method. `Analysis by analysis` excludes
            missing values from each analysis. `Listwise` excludes a row from
            all analyses if one of its values is missing.
          R: >
            `'perAnalysis'` or `'listwise'`, how to handle missing values;
            `'perAnalysis'` excludes missing values for individual dependent
            variables, `'listwise'` excludes a row from all analyses if one of
            its entries is missing.
      - name: desc
        title: Descriptives table
        type: Bool
        default: false
        description:
          ui: |
            provide descriptives for each group.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive statistics
      - name: descPlot
        title: Descriptives plots
        type: Bool
        default: false
        description:
          ui: |
            provide descriptive plots for each group.
          R: |
            `TRUE` or `FALSE` (default), provide descriptive plots
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-Wilk test of normality
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            data is not from a normal distribution.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: eqv
        title: Homogeneity test
        type: Bool
        default: false
        description:
          ui: >
            provide Levene's tests for the homogeneity of variances. A low
            p-value suggests the groups have unequal variances.
          R: >
            `TRUE` or `FALSE` (default), perform Levene's test for homogeneity
            of variances
      - name: phMethod
        title: Post-Hoc Tests
        type: List
        options:
          - none
          - gamesHowell
          - tukey
        default: none
        description:
          ui: |
            provide post-hoc tests.
          R: >
            `'none'`, `'gamesHowell'` or `'tukey'`, which post-hoc tests to
            provide; `'none'` shows no post-hoc tests, `'gamesHowell'` shows
            Games-Howell post-hoc tests where no equivalence of variances is
            assumed, and `'tukey'` shows Tukey post-hoc tests where equivalence
            of variances is assumed
      - name: phMeanDif
        title: Mean difference
        type: Bool
        default: true
        description:
          ui: |
            provide mean differences with the post-hoc tests.
          R: >
            `TRUE` (default) or `FALSE`, provide mean differences for post-hoc
            tests
      - name: phSig
        title: Report significance
        type: Bool
        default: true
        description:
          ui: |
            provide significance levels for the post-hoc tests.
          R: >
            `TRUE` (default) or `FALSE`, provide significance levels for
            post-hoc tests
      - name: phTest
        title: Test results (t and df)
        type: Bool
        default: false
        description:
          ui: >
            provide test results (t-value and degrees of freedom) for post-hoc
            tests.
          R: >
            `TRUE` or `FALSE` (default), provide test results (t-value and
            degrees of freedom) for post-hoc tests
      - name: phFlag
        title: Flag significant comparisons
        type: Bool
        default: false
        description:
          ui: |
            flag significant post-hoc comparisons.
          R: |
            `TRUE` or `FALSE` (default), flag significant post-hoc comparisons
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"deps\",\"title\":\"Dependent Variables\",\"type\":\"Variables\",\"required\":true,\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the dependent variables. For ANOVA, these will be continuous.\\n\",\"R\":\"a string naming the dependent variables in `data`\\n\"}},{\"name\":\"group\",\"title\":\"Grouping Variable\",\"type\":\"Variable\",\"required\":true,\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"ui\":\"the explanatory or independent variable. For ANOVA this will be categorical.\\n\",\"R\":\"a string naming the grouping or independent variable in `data`\\n\"}},{\"name\":\"welchs\",\"title\":\"Don't assume equal (Welch's)\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"perform Welch's ANOVAs.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, perform Welch's one-way ANOVA which does not assume equal variances\\n\"}},{\"name\":\"fishers\",\"title\":\"Assume equal (Fisher's)\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Fisher's (or what might be call 'normal') ANOVAs.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Fisher's one-way ANOVA which assumes equal variances\\n\"}},{\"name\":\"miss\",\"title\":\"Missing values exclusion method\",\"type\":\"List\",\"options\":[\"perAnalysis\",\"listwise\"],\"default\":\"perAnalysis\",\"description\":{\"ui\":\"the missing value exclusion method. `Analysis by analysis` excludes missing values from each analysis. `Listwise` excludes a row from all analyses if one of its values is missing.\\n\",\"R\":\"`'perAnalysis'` or `'listwise'`, how to handle missing values; `'perAnalysis'` excludes missing values for individual dependent variables, `'listwise'` excludes a row from all analyses if one of its entries is missing.\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives table\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptives for each group.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive statistics\\n\"}},{\"name\":\"descPlot\",\"title\":\"Descriptives plots\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide descriptive plots for each group.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide descriptive plots\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-Wilk test of normality\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the data is not from a normal distribution.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"eqv\",\"title\":\"Homogeneity test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Levene's tests for the homogeneity of variances. A low p-value suggests the groups have unequal variances.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Levene's test for homogeneity of variances\\n\"}},{\"name\":\"phMethod\",\"title\":\"Post-Hoc Tests\",\"type\":\"List\",\"options\":[\"none\",\"gamesHowell\",\"tukey\"],\"default\":\"none\",\"description\":{\"ui\":\"provide post-hoc tests.\\n\",\"R\":\"`'none'`, `'gamesHowell'` or `'tukey'`, which post-hoc tests to provide; `'none'` shows no post-hoc tests, `'gamesHowell'` shows Games-Howell post-hoc tests where no equivalence of variances is assumed, and `'tukey'` shows Tukey post-hoc tests where equivalence of variances is assumed\\n\"}},{\"name\":\"phMeanDif\",\"title\":\"Mean difference\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide mean differences with the post-hoc tests.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide mean differences for post-hoc tests\\n\"}},{\"name\":\"phSig\",\"title\":\"Report significance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide significance levels for the post-hoc tests.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide significance levels for post-hoc tests\\n\"}},{\"name\":\"phTest\",\"title\":\"Test results (t and df)\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide test results (t-value and degrees of freedom) for post-hoc tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide test results (t-value and degrees of freedom) for post-hoc tests\\n\"}},{\"name\":\"phFlag\",\"title\":\"Flag significant comparisons\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"flag significant post-hoc comparisons.\\n\",\"R\":\"`TRUE` or `FALSE` (default), flag significant post-hoc comparisons\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"One-Way ANOVA\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Dependent Variables\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"deps\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Grouping Variable\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"group\",\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Variances\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"welchs\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"fishers\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Missing Values\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_perAnalysis\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"perAnalysis\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases analysis by analysis\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_listwise\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"listwise\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases listwise\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"desc\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"descPlot\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"eqv\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"norm\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"qq\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Post-Hoc Tests\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Post-Hoc Test\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phMethod_none\",\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"phMethod\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"none\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"None\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phMethod_gamesHowell\",\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"phMethod\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"gamesHowell\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Games-Howell (unequal variances)\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phMethod_tukey\",\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"phMethod\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"tukey\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Tukey (equal variances)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Statistics\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phMeanDif\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phSig\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phTest\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"phFlag\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: ANOVA
    name: anova
    ns: jmv
    menuGroup: ANOVA
    menuTitle: ANOVA
    description: |-
      The Analysis of Variance (ANOVA) is used to explore the relationship
      between a continuous dependent variable, and one or more categorical
      explanatory variables.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        title: Dependent Variable
        type: Variable
        required: true
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          ui: |
            the dependent variable. For ANOVA, these will be continuous.
          R: >
            the dependent variable from `data`, variable must be numeric (not
            necessary when providing a formula, see examples)
      - name: factors
        title: Fixed Factors
        type: Variables
        required: true
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        default: null
        description:
          ui: >
            the explanatory or independent variables. For ANOVA these will be
            categorical.
          R: >
            the explanatory factors in `data` (not necessary when providing a
            formula, see examples)
      - name: effectSize
        title: Effect Size
        type: NMXList
        options:
          - name: eta
            title: η²
          - name: partEta
            title: partial η²
          - name: omega
            title: ω²
        default: null
        description:
          ui: |
            provide measures of effect size; η², partial η², or ω².
          R: >
            one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial
            η², and ω² effect sizes, respectively
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          ui: |
            perform an overall model test.
          R: |
            `TRUE` or `FALSE` (default); perform an overall model test
      - name: modelTerms
        title: Model Terms
        type: Terms
        default: null
        description:
          ui: >
            the model terms which make up the model. By default a full factorial
            model is created, but here the exact terms making up the model can
            be adjusted.
          R: >
            a formula describing the terms to go into the model (not necessary
            when providing a formula, see examples)
      - name: ss
        title: Sum of squares
        type: List
        options:
          - title: Type 1
            name: '1'
          - title: Type 2
            name: '2'
          - title: Type 3
            name: '3'
        default: '3'
        description:
          ui: |
            the type of sums of squares to use; Type 1, 2, or 3.
          R: |
            `'1'`, `'2'` or `'3'` (default), the sum of squares to use
      - name: homo
        title: Homogeneity test
        type: Bool
        default: false
        description:
          ui: >
            provide Levene's test for homogeneity of variances. A low p-value
            suggests the groups have unequal variances.
          R: |
            `TRUE` or `FALSE` (default), perform homogeneity tests
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          ui: >
            perform Shapiro-Wilk tests of normality. A low p-value suggests the
            residuals are not normally distributed.
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            residuals are not normally distributed.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: contrasts
        title: Contrasts
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: type
              type: List
              options:
                - name: none
                  title: None
                - name: deviation
                  title: Deviation
                - name: simple
                  title: Simple
                - name: difference
                  title: Difference
                - name: helmert
                  title: Helmert
                - name: repeated
                  title: Repeated
                - name: polynomial
                  title: Polynomial
        description:
          ui: |
            the contrasts to use.
          R: >
            a list of lists specifying the factor and type of contrast to use,
            one of `'deviation'`, `'simple'`, `'difference'`, `'helmert'`,
            `'repeated'` or `'polynomial'`
      - name: postHoc
        title: Post Hoc Tests
        type: Terms
        default: null
        description:
          ui: |
            provide post-hoc tests.
          R: >
            a formula containing the terms to perform post-hoc tests on (see the
            examples)
      - name: postHocCorr
        title: Correction
        type: NMXList
        options:
          - name: none
            title: No correction
          - name: tukey
            title: Tukey
          - name: scheffe
            title: Scheffe
          - name: bonf
            title: Bonferroni
          - name: holm
            title: Holm
        default:
          - tukey
        description:
          ui: |
            the post-hoc multiple comparisons corrections to use.
          R: >
            one or more of `'none'`, `'tukey'`, `'scheffe'`, `'bonf'`, or
            `'holm'`; provide no, Tukey, Scheffe, Bonferroni, and Holm Post Hoc
            corrections respectively
      - name: postHocES
        title: Effect size
        type: NMXList
        options:
          - name: d
            title: Cohen's d
        default: []
        description:
          ui: |
            provide a Cohen's d measure of effect size for the post-hoc tests.
          R: >
            a possible value of `'d'`; provide cohen's d measure of effect size
            for the post-hoc tests
      - name: postHocEsCi
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the post-hoc effect sizes.
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            post-hoc effect sizes
      - name: postHocEsCiWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width for the post-hoc effect sizes.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals for the post-hoc effect sizes
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          ui: >
            the terms to provide estimated marginal means for. Here you can
            specify multiple terms.
          R: >
            a formula containing the terms to estimate marginal means for (see
            the examples)
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          ui: |
            provide plots of the estimated marginal means.
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmPlotData
        title: Observed scores
        type: Bool
        default: false
        description:
          ui: |
            plot the data along with the marginal means.
          R: >
            `TRUE` or `FALSE` (default), plot the data on top of the marginal
            means
      - name: emmPlotError
        title: Error bars
        type: List
        options:
          - name: none
            title: None
          - name: ci
            title: Confidence interval
          - name: se
            title: Standard Error
        default: ci
        description:
          ui: |
            the error bars to plot on the marginal means.
          R: >
            `'none'`, `'ci'` (default), or `'se'`. Use no error bars, use
            confidence intervals, or use standard errors on the marginal mean
            plots, respectively
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          ui: |
            provide a table of the estimated marginal means.
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          ui: >
            weigh each cell equally. (Cells are weighed according to the cell
            frequency by default.)
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
      - name: ciWidthEmm
        title: Confidence interval width
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the width for the Confidence intervals.
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: residsOV
        title: Residuals
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n'use strict';\n\nmodule.exports = {\n\n    view_updated: function(ui) {\n        this.calcModelTerms(ui);\n        this.filterModelTerms(ui);\n        this.updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    factors_changed: function(ui) {\n        this.calcModelTerms(ui);\n    },\n\n    modelTerms_changed: function(ui) {\n        this.filterModelTerms(ui);\n    },\n\n    emMeansSupplier_updated: function(ui) {\n        this.calcMarginalMeansSupplier(ui);\n    },\n\n    modelSupplier_updated: function(ui) {\n        let variableList = utils.clone(ui.factors.value(), []);\n        ui.modelSupplier.setValue(utils.valuesToItems(variableList, FormatDef.variable));\n    },\n\n    postHocSupplier_updated: function(ui) {\n        let termsList = utils.clone(ui.modelTerms.value(), []);\n        ui.postHocSupplier.setValue(utils.valuesToItems(termsList, FormatDef.term));\n    },\n\n    emMeansSupplier_changed: function(ui) {\n        let values = utils.itemsToValues(ui.emMeansSupplier.value());\n        utils.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    postHocSupplier_changed: function(ui) {\n        let values = utils.itemsToValues(ui.postHocSupplier.value());\n        utils.checkValue(ui.postHoc, true, values, FormatDef.term);\n    },\n\n    emMeans_listItemsChanged: function(ui) {\n        this.updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    filterModelTerms: function(ui) {\n        var termsList = utils.clone(ui.modelTerms.value(), []);\n\n        //Remove common terms\n        var termsDiff = this.findChanges(\"currentList\", termsList, true, FormatDef.term);\n        var changed = false;\n        if (termsDiff.removed.length > 0 && termsList !== null) {\n            var itemsRemoved = false;\n            for (var i = 0; i < termsDiff.removed.length; i++) {\n                var item = termsDiff.removed[i];\n                for (var j = 0; j < termsList.length; j++) {\n                    if (FormatDef.term.contains(termsList[j], item)) {\n                        termsList.splice(j, 1);\n                        j -= 1;\n                        itemsRemoved = true;\n                    }\n                }\n            }\n\n            if (itemsRemoved)\n                changed = true;\n        }\n        /////////////////////\n\n        //Sort terms\n        if (utils.sortArraysByLength(termsList))\n            changed = true;\n        ////////////\n\n        if (changed)\n            ui.modelTerms.setValue(termsList);\n\n        ui.postHocSupplier.setValue(utils.valuesToItems(termsList, FormatDef.term));\n    },\n\n    calcMarginalMeansSupplier: function(ui) {\n\n        let b1 = utils.clone(ui.factors.value(), []);\n        b1 = utils.valuesToItems(b1, FormatDef.variable);\n\n        if (ui.emMeansSupplier)\n            ui.emMeansSupplier.setValue(b1);\n    },\n\n    updateModelLabels: function(list, blockName) {\n        list.applyToItems(0, (item, index) => {\n            item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1) ));\n        });\n    },\n\n    calcModelTerms: function(ui) {\n        var variableList = utils.clone(ui.factors.value(), []);\n\n        ui.modelSupplier.setValue(utils.valuesToItems(variableList, FormatDef.variable));\n\n        this.calcMarginalMeansSupplier(ui);\n\n        var varsDiff = this.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n        var termsList = utils.clone(ui.modelTerms.value(), []);\n\n        var termsChanged = false;\n        for (var i = 0; i < varsDiff.removed.length; i++) {\n            for (var j = 0; j < termsList.length; j++) {\n                if (FormatDef.term.contains(termsList[j], varsDiff.removed[i])) {\n                    termsList.splice(j, 1);\n                    termsChanged = true;\n                    j -= 1;\n                }\n            }\n        }\n\n        termsList = utils.getCombinations(varsDiff.added, termsList);\n        termsChanged = termsChanged || varsDiff.added.length > 0;\n\n        if (termsChanged)\n            ui.modelTerms.setValue(termsList);\n\n        this.updateContrasts(ui, variableList);\n    },\n\n    updateContrasts: function(ui, variableList) {\n        let value = ui.contrasts.value();\n        var currentList = utils.clone(value, []);\n\n        var list3 = [];\n        for (let i = 0; i < variableList.length; i++) {\n            let found = null;\n            for (let j = 0; j < currentList.length; j++) {\n                if (currentList[j].var === variableList[i]) {\n                    found = currentList[j];\n                    break;\n                }\n            }\n            if (found === null)\n                list3.push({ var: variableList[i], type: \"none\" });\n            else\n                list3.push(found);\n        }\n\n        let oldLength = value === null ? 0 : value.length;\n\n        let changed = oldLength !== list3.length || JSON.stringify(value) !== JSON.stringify(list3);\n\n        if (changed)\n            ui.contrasts.setValue(list3);\n    }\n\n};\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"title\":\"Dependent Variable\",\"type\":\"Variable\",\"required\":true,\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the dependent variable. For ANOVA, these will be continuous.\\n\",\"R\":\"the dependent variable from `data`, variable must be numeric (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"factors\",\"title\":\"Fixed Factors\",\"type\":\"Variables\",\"required\":true,\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"ui\":\"the explanatory or independent variables. For ANOVA these will be categorical.\\n\",\"R\":\"the explanatory factors in `data` (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect Size\",\"type\":\"NMXList\",\"options\":[{\"name\":\"eta\",\"title\":\"η²\"},{\"name\":\"partEta\",\"title\":\"partial η²\"},{\"name\":\"omega\",\"title\":\"ω²\"}],\"default\":null,\"description\":{\"ui\":\"provide measures of effect size; η², partial η², or ω².\\n\",\"R\":\"one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial η², and ω² effect sizes, respectively\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform an overall model test.\\n\",\"R\":\"`TRUE` or `FALSE` (default); perform an overall model test\\n\"}},{\"name\":\"modelTerms\",\"title\":\"Model Terms\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"the model terms which make up the model. By default a full factorial model is created, but here the exact terms making up the model can be adjusted.\\n\",\"R\":\"a formula describing the terms to go into the model (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"ss\",\"title\":\"Sum of squares\",\"type\":\"List\",\"options\":[{\"title\":\"Type 1\",\"name\":\"1\"},{\"title\":\"Type 2\",\"name\":\"2\"},{\"title\":\"Type 3\",\"name\":\"3\"}],\"default\":\"3\",\"description\":{\"ui\":\"the type of sums of squares to use; Type 1, 2, or 3.\\n\",\"R\":\"`'1'`, `'2'` or `'3'` (default), the sum of squares to use\\n\"}},{\"name\":\"homo\",\"title\":\"Homogeneity test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Levene's test for homogeneity of variances. A low p-value suggests the groups have unequal variances.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform homogeneity tests\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Shapiro-Wilk tests of normality. A low p-value suggests the residuals are not normally distributed.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the residuals are not normally distributed.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"contrasts\",\"title\":\"Contrasts\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"type\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"deviation\",\"title\":\"Deviation\"},{\"name\":\"simple\",\"title\":\"Simple\"},{\"name\":\"difference\",\"title\":\"Difference\"},{\"name\":\"helmert\",\"title\":\"Helmert\"},{\"name\":\"repeated\",\"title\":\"Repeated\"},{\"name\":\"polynomial\",\"title\":\"Polynomial\"}]}]},\"description\":{\"ui\":\"the contrasts to use.\\n\",\"R\":\"a list of lists specifying the factor and type of contrast to use, one of `'deviation'`, `'simple'`, `'difference'`, `'helmert'`, `'repeated'` or `'polynomial'`\\n\"}},{\"name\":\"postHoc\",\"title\":\"Post Hoc Tests\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"provide post-hoc tests.\\n\",\"R\":\"a formula containing the terms to perform post-hoc tests on (see the examples)\\n\"}},{\"name\":\"postHocCorr\",\"title\":\"Correction\",\"type\":\"NMXList\",\"options\":[{\"name\":\"none\",\"title\":\"No correction\"},{\"name\":\"tukey\",\"title\":\"Tukey\"},{\"name\":\"scheffe\",\"title\":\"Scheffe\"},{\"name\":\"bonf\",\"title\":\"Bonferroni\"},{\"name\":\"holm\",\"title\":\"Holm\"}],\"default\":[\"tukey\"],\"description\":{\"ui\":\"the post-hoc multiple comparisons corrections to use.\\n\",\"R\":\"one or more of `'none'`, `'tukey'`, `'scheffe'`, `'bonf'`, or `'holm'`; provide no, Tukey, Scheffe, Bonferroni, and Holm Post Hoc corrections respectively\\n\"}},{\"name\":\"postHocES\",\"title\":\"Effect size\",\"type\":\"NMXList\",\"options\":[{\"name\":\"d\",\"title\":\"Cohen's d\"}],\"default\":[],\"description\":{\"ui\":\"provide a Cohen's d measure of effect size for the post-hoc tests.\\n\",\"R\":\"a possible value of `'d'`; provide cohen's d measure of effect size for the post-hoc tests\\n\"}},{\"name\":\"postHocEsCi\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the post-hoc effect sizes.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the post-hoc effect sizes\\n\"}},{\"name\":\"postHocEsCiWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width for the post-hoc effect sizes.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals for the post-hoc effect sizes\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"ui\":\"the terms to provide estimated marginal means for. Here you can specify multiple terms.\\n\",\"R\":\"a formula containing the terms to estimate marginal means for (see the examples)\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide plots of the estimated marginal means.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmPlotData\",\"title\":\"Observed scores\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"plot the data along with the marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), plot the data on top of the marginal means\\n\"}},{\"name\":\"emmPlotError\",\"title\":\"Error bars\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"ci\",\"title\":\"Confidence interval\"},{\"name\":\"se\",\"title\":\"Standard Error\"}],\"default\":\"ci\",\"description\":{\"ui\":\"the error bars to plot on the marginal means.\\n\",\"R\":\"`'none'`, `'ci'` (default), or `'se'`. Use no error bars, use confidence intervals, or use standard errors on the marginal mean plots, respectively\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a table of the estimated marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"weigh each cell equally. (Cells are weighed according to the cell frequency by default.)\\n\",\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence interval width\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the width for the Confidence intervals.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"residsOV\",\"title\":\"Residuals\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    this.handlers = require('./anova')\n\n    View.extend({\n        jus: \"3.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"ANOVA\",\n    jus: \"3.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstyle: \"inline\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Model Fit\",\n\t\t\t\t\tcell: {\"row\":0,\"column\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"modelTest\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Effect Size\",\n\t\t\t\t\tcell: {\"row\":0,\"column\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_eta\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"eta\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_partEta\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"partEta\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_omega\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"omega\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Components\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"modelTerms\",\n\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\titemDropBehaviour: \"emptyspace\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\tname: \"ss\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Assumption Checks\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"homo\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"norm\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"qq\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Contrasts\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"contrasts\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"type\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Post Hoc Tests\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"postHocSupplier\",\n\t\t\t\t\tpersistentItems: false,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"postHoc\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Correction\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_none\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"none\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_tukey\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"tukey\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_scheffe\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"scheffe\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_bonf\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"bonf\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_holm\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"holm\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Effect Size\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocES_d\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"d\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocES\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"postHocEsCi\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(postHocES:d)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"postHocEsCiWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(postHocES:d && postHocEsCi)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./anova').emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./anova').emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Plot\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotError\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotData\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"residsOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./anova\":1}]},{},[2])(2)\n});"
  - title: Repeated Measures ANOVA
    name: anovaRM
    ns: jmv
    menuGroup: ANOVA
    menuTitle: Repeated Measures ANOVA
    description: |-
      The Repeated Measures ANOVA is used to explore the relationship
      between a continuous dependent variable and one or more categorical
      explanatory variables, where one or more of the explanatory variables
      are 'within subjects' (where multiple measurements are from the same
      subject). Additionally, this analysis allows the inclusion of
      covariates, allowing for repeated measures ANCOVAs as well.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: rm
        title: Repeated Measures Factors
        type: Array
        default:
          - label: RM Factor 1
            levels:
              - Level 1
              - Level 2
        template:
          type: Group
          elements:
            - name: label
              type: String
            - name: levels
              type: Array
              template:
                type: String
        description:
          ui: |
            the repeated measures design.
          R: >
            a list of lists, where each list describes the `label` (as a string)
            and the `levels` (as vector of strings) of a particular repeated
            measures factor
      - name: rmCells
        title: Repeated Measures Cells
        type: Array
        default: null
        template:
          type: Group
          elements:
            - name: measure
              type: Variable
            - name: cell
              type: Array
              template:
                type: String
        description:
          ui: |
            the repeated measures measurements.
          R: >
            a list of lists, where each list decribes a repeated measure (as a
            string) from `data` defined as `measure` and the particular
            combination of levels from `rm` that it belongs to (as a vector of
            strings) defined as `cell`
      - name: bs
        title: Between Subject Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        default: null
        description:
          ui: |
            the between subjects factors (optional).
          R: |
            a vector of strings naming the between subjects factors from `data`
      - name: cov
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          ui: |
            the covariates (specifying these makes this an ANCOVA)
          R: >
            a vector of strings naming the covariates from `data`. Variables
            must be numeric
      - name: effectSize
        title: Effect Size
        type: NMXList
        options:
          - name: eta
            title: η²
          - name: partEta
            title: Partial η²
          - name: ges
            title: Generalised η²
          - name: omega
            title: ω²
        default: null
        description:
          ui: |
            provide measures of effect size; η², partial η², or ω².
          R: >
            one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial
            η², and ω² effect sizes, respectively
      - name: depLabel
        title: ''
        type: String
        default: Dependent
        description:
          ui: |
            the label to use for the dependent variable.
          R: >
            a string (default: 'Dependent') describing the label used for the
            dependent variable throughout the analysis
      - name: rmTerms
        title: Model Terms
        type: Terms
        default: null
        description:
          ui: |
            the repeated measures terms of the model.
          R: >
            a list of character vectors describing the repeated measures terms
            to go into the model
      - name: bsTerms
        title: Model Terms
        type: Terms
        default: null
        description:
          ui: |
            the between subjects terms of the model.
          R: >
            a list of character vectors describing the between subjects terms to
            go into the model
      - name: ss
        title: Sum of squares
        type: List
        options:
          - title: Type 2
            name: '2'
          - title: Type 3
            name: '3'
        default: '3'
        description:
          ui: |
            the type of sums of squares to use; Type 2, or 3.
          R: |
            `'2'` or `'3'` (default), the sum of squares to use
      - name: spherTests
        title: Sphericity tests
        type: Bool
        default: false
        description:
          ui: |
            provide sphericity tests.
          R: |
            `TRUE` or `FALSE` (default), perform sphericity tests
      - name: spherCorr
        title: Sphericity corrections
        type: NMXList
        options:
          - name: none
            title: None
          - name: GG
            title: Greenhouse-Geisser
          - name: HF
            title: Huynh-Feldt
        default:
          - none
        description:
          ui: |
            provide p-value corrections for sphericity.
          R: >
            one or more of `'none'` (default), `'GG'`, or ``HF``; use no p-value
            correction, the Greenhouse-Geisser p-value correction, and the
            Huynh-Feldt p-value correction for shericity, respectively
      - name: leveneTest
        title: Homogeneity test
        type: Bool
        default: false
        description:
          ui: >
            provide Levene's test for homogeneity of variances. A low p-value
            suggests the groups have unequal variances.
          R: >
            `TRUE` or `FALSE` (default), test for homogeneity of variances
            (i.e., Levene's test)
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            residuals are not normally distributed.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: contrasts
        hidden: true
        title: Contrasts
        type: Array
        items: (bs)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: String
              content: $key
            - name: type
              type: List
              options:
                - name: none
                  title: None
                - name: deviation
                  title: Deviation
                - name: simple
                  title: Simple
                - name: difference
                  title: Difference
                - name: helmert
                  title: Helmert
                - name: repeated
                  title: Repeated
                - name: polynomial
                  title: Polynomial
        description:
          R: in development
      - name: postHoc
        title: Post Hoc Tests
        type: Array
        template:
          type: Array
          template:
            type: String
        default: null
        description:
          ui: |
            provide post-hoc tests.
          R: >
            a list of character vectors describing the post-hoc tests that need
            to be computed
      - name: postHocCorr
        title: Corrections
        type: NMXList
        options:
          - name: none
            title: No correction
          - name: tukey
            title: Tukey
          - name: scheffe
            title: Scheffe
          - name: bonf
            title: Bonferroni
          - name: holm
            title: Holm
        default:
          - tukey
        description:
          ui: |
            the post-hoc multiple comparisons corrections to use.
          R: >
            one or more of `'none'`, `'tukey'` (default), `'scheffe'`, `'bonf'`,
            or `'holm'`; use no, Tukey, Scheffe, Bonferroni and Holm posthoc
            corrections, respectively
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          ui: >
            the terms to provide estimated marginal means for. Here you can
            specify multiple terms.
          R: >
            a list of lists specifying the variables for which the estimated
            marginal means need to be calculate. Supports up to three variables
            per term.
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          ui: |
            provide plots of the estimated marginal means.
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          ui: |
            provide a table of the estimated marginal means.
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          ui: >
            weigh each cell equally. (Cells are weighed according to the cell
            frequency by default.)
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the width for the Confidence intervals.
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: emmPlotData
        title: Observed scores
        type: Bool
        default: false
        description:
          ui: |
            plot the data along with the marginal means.
          R: >
            `TRUE` or `FALSE` (default), plot the data on top of the marginal
            means
      - name: emmPlotError
        title: Error bars
        type: List
        options:
          - name: none
            title: None
          - name: ci
            title: Confidence interval
          - name: se
            title: Standard error
        default: ci
        description:
          ui: |
            the error bars to plot on the marginal means.
          R: >
            `'none'`, `'ci'` (default), or `'se'`. Use no error bars, use
            confidence intervals, or use standard errors on the marginal mean
            plots, respectively
      - name: groupSumm
        title: Group summary
        type: Bool
        default: false
        description:
          ui: |
            include a summary of the groups
          R: >
            `TRUE` or `FALSE` (default), report a summary of the different
            groups
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\nvar rma_cell = require('./rmacell');\n\nconst events = {\n    update: function(ui) {\n        this._factorCells = null;\n\n        let factor = _('RM Factor {0}').replace('{0}', 1);\n        this.initializeValue(ui.rmTerms, [[factor]]);\n        this.setCustomVariable(factor, \"none\", []);\n\n        updateFactorCells(ui, this);\n        updateModelTerms(ui, this);\n        filterModelRMTerms(ui, this);\n        filterModelTerms(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_rm: function(ui) {\n        updateFactorCells(ui, this);\n        updateRMModelTerms(ui, this);\n    },\n\n    onChange_rmCells: function(ui) {\n        filterCells(ui, this);\n    },\n\n    onChange_bs: function(ui) {\n        updateModelTerms(ui, this);\n    },\n\n    onChange_cov: function(ui) {\n        updateModelTerms(ui, this);\n    },\n\n    onChange_rmTerms: function(ui) {\n        filterModelRMTerms(ui, this);\n    },\n\n    onChange_bsTerms: function(ui) {\n        filterModelTerms(ui, this);\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onUpdate_rmcModelSupplier: function(ui) {\n        let factorList = this.cloneArray(ui.rm.value(), []);\n        for(let i = 0; i < factorList.length; i++)\n            factorList[i] = factorList[i].label;\n        ui.rmcModelSupplier.setValue(this.valuesToItems(factorList, FormatDef.variable));\n    },\n\n    onUpdate_bscModelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.bs.value(), []);\n        let covariatesList = this.cloneArray(ui.cov.value(), []);\n        let combinedList = variableList.concat(covariatesList);\n        ui.bscModelSupplier.setValue(this.valuesToItems(combinedList, FormatDef.variable));\n    },\n\n    onUpdate_postHocSupplier: function(ui) {\n        updatePostHocSupplier(ui, this);\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    onChange_postHocSupplier: function(ui) {\n        let values = this.itemsToValues(ui.postHocSupplier.value());\n        this.checkValue(ui.postHoc, true, values, FormatDef.term);\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    }\n};\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1) ));\n    });\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let b1 = context.cloneArray(ui.bs.value(), []);\n    let b2 = context.itemsToValues(ui.rmcModelSupplier.value());\n\n    b1 = context.valuesToItems(b2.concat(b1), FormatDef.variable);\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(b1);\n};\n\nvar updateFactorCells = function(ui, context) {\n    var value = ui.rm.value();\n    if (value === null)\n        return;\n\n    var data = []\n    var indices = []\n    for (var i = 0; i < value.length; i++) {\n        indices[i] = 0;\n    }\n\n    var end = false;\n    var pos = 0;\n    while (end === false) {\n        var cell = []\n        for (var k = 0; k < indices.length; k++) {\n            cell.push(value[k].levels[indices[k]])\n        }\n        data.push(cell);\n        pos += 1;\n        var zeroCount = 0;\n\n        var r = indices.length - 1;\n        if (r < 0)\n            end = true;\n        while (r >= 0) {\n            indices[r] = (indices[r] + 1) % value[r].levels.length;\n            if (indices[r] === 0)\n                r -= 1;\n            else\n                break;\n\n            if (r === -1)\n                end = true;\n        }\n    }\n\n    context._factorCells = data;\n    filterCells(ui, context);\n};\n\nvar calcRMTerms = function(ui, factorList, context) {\n\n    var diff = context.findChanges(\"factorList\", factorList, true, FormatDef.term);\n\n    var termsList = ui.rmTerms.value();\n    termsList = context.clone(termsList);\n    var termsChanged = false;\n\n    for (var i = 0; i < diff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (FormatDef.term.contains(termsList[j], diff.removed[i])) {\n                termsList.splice(j, 1);\n                termsChanged = true;\n                j -= 1;\n            }\n        }\n    }\n\n    termsList = context.getCombinations(diff.added, termsList);\n    termsChanged = termsChanged || diff.added.length > 0;\n\n    if (termsChanged)\n        ui.rmTerms.setValue(termsList);\n};\n\nvar updateRMModelTerms = function(ui, context, variableList, updateEMMeans) {\n    if (variableList === undefined)\n        variableList = context.cloneArray(ui.bs.value(), []);\n\n    let factorList = context.cloneArray(ui.rm.value(), []);\n\n    let customVariables = [];\n    for(let i = 0; i < factorList.length; i++) {\n        customVariables.push( { name: factorList[i].label, measureType: 'none', dataType: 'none', levels: [] } );\n        factorList[i] = factorList[i].label;\n    }\n    context.setCustomVariables(customVariables);\n\n    var combinedList2 = factorList.concat(variableList);\n\n    ui.rmcModelSupplier.setValue(context.valuesToItems(factorList, FormatDef.variable))\n    //ui.plotsSupplier.setValue(context.valuesToItems(combinedList2, FormatDef.variable));\n\n    calcRMTerms(ui, factorList, context);\n\n    if (updateEMMeans === undefined || updateEMMeans)\n        calcMarginalMeansSupplier(ui, context);\n\n    updateContrasts(ui, combinedList2, context);\n};\n\nvar updateModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.bs.value(), []);\n    var covariatesList = context.cloneArray(ui.cov.value(), []);\n\n    updateRMModelTerms(ui, context, variableList, false);\n\n    var combinedList = variableList.concat(covariatesList);\n    ui.bscModelSupplier.setValue(context.valuesToItems(combinedList, FormatDef.variable));\n\n    calcMarginalMeansSupplier(ui, context);\n\n    var diff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    var diff2 = context.findChanges(\"covariatesList\", covariatesList, true, FormatDef.variable);\n    var combinedDiff = context.findChanges(\"combinedList\", combinedList, true, FormatDef.variable);\n\n    var termsList = context.cloneArray(ui.bsTerms.value(), []);\n    var termsChanged = false;\n    for (var i = 0; i < combinedDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (FormatDef.term.contains(termsList[j], combinedDiff.removed[i])) {\n                termsList.splice(j, 1);\n                termsChanged = true;\n                j -= 1;\n            }\n        }\n    }\n\n    for (var a = 0; a < diff.added.length; a++) {\n        let item = diff.added[a];\n        var listLength = termsList.length;\n        for (var j = 0; j < listLength; j++) {\n            var newTerm = context.clone(termsList[j]);\n            if (containsCovariate(newTerm, covariatesList) === false) {\n                if (context.listContains(newTerm, item, FormatDef.variable) === false) {\n                    newTerm.push(item)\n                    if (context.listContains(termsList, newTerm , FormatDef.term) === false) {\n                        termsList.push(newTerm);\n                        termsChanged = true;\n                    }\n                }\n            }\n        }\n        if (context.listContains(termsList, [item] , FormatDef.term) === false) {\n            termsList.push([item]);\n            termsChanged = true;\n        }\n    }\n\n    for (var a = 0; a < diff2.added.length; a++) {\n        let item = diff2.added[a];\n        if (context.listContains(termsList, [item] , FormatDef.term) === false) {\n            termsList.push([item]);\n            termsChanged = true;\n        }\n    }\n\n    if (termsChanged)\n        ui.bsTerms.setValue(termsList);\n};\n\nvar updatePostHocSupplier = function(ui, context) {\n    var bsTerms = context.cloneArray(ui.bsTerms.value(), []);\n    var rmTerms = context.cloneArray(ui.rmTerms.value(), []);\n    var combinedTermsList = rmTerms.concat(bsTerms);\n\n    for (let i = 0; i < rmTerms.length; i++) {\n        for (let j = 0; j < bsTerms.length; j++)\n            combinedTermsList.push(rmTerms[i].concat(bsTerms[j]))\n    }\n\n    ui.postHocSupplier.setValue(context.valuesToItems(combinedTermsList, FormatDef.term));\n};\n\nvar filterModelTerms = function(ui, context) {\n    var termsList = context.cloneArray(ui.bsTerms.value(), []);\n    var diff = context.findChanges(\"bsTerms\", termsList, true, FormatDef.term);\n\n    var changed = false;\n    if (diff.removed.length > 0) {\n        var itemsRemoved = false;\n        for (var i = 0; i < diff.removed.length; i++) {\n            var item = diff.removed[i];\n            for (var j = 0; j < termsList.length; j++) {\n                if (FormatDef.term.contains(termsList[j], item)) {\n                    termsList.splice(j, 1);\n                    j -= 1;\n                    itemsRemoved = true;\n                }\n            }\n        }\n\n        if (itemsRemoved)\n            changed = true;\n    }\n\n    if (context.sortArraysByLength(termsList))\n        changed = true;\n\n    if (changed)\n        ui.bsTerms.setValue(termsList);\n\n    updatePostHocSupplier(ui, context);\n};\n\nvar filterModelRMTerms = function(ui, context) {\n    var termsList = context.clone(ui.rmTerms.value());\n    var diff = context.findChanges(\"rmTerms\", termsList, true, FormatDef.term);\n\n    var changed = false;\n    if (diff.removed.length > 0) {\n        var itemsRemoved = false;\n        for (var i = 0; i < diff.removed.length; i++) {\n            var item = diff.removed[i];\n            for (var j = 0; j < termsList.length; j++) {\n                if (FormatDef.term.contains(termsList[j], item)) {\n                    termsList.splice(j, 1);\n                    j -= 1;\n                    itemsRemoved = true;\n                }\n            }\n        }\n\n        if (itemsRemoved)\n            changed = true;\n    }\n\n    if (context.sortArraysByLength(termsList))\n        changed = true;\n\n    if (changed)\n        ui.rmTerms.setValue(termsList);\n\n    updatePostHocSupplier(ui, context);\n};\n\nvar containsCovariate = function(value, covariates) {\n    for (var i = 0; i < covariates.length; i++) {\n        if (FormatDef.term.contains(value, covariates[i]))\n            return true;\n    }\n\n    return false;\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.contrasts.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], type: \"none\" });\n        else\n            list3.push(found);\n    }\n\n    ui.contrasts.setValue(list3);\n};\n\nvar filterCells = function(ui, context) {\n    if (context._factorCells === null)\n        return;\n\n    var cells = context.cloneArray(ui.rmCells.value(), []);\n\n    var factorCells = context.clone(context._factorCells);\n\n    var changed = false;\n    for (var j = 0; j < factorCells.length; j++) {\n        if (j < cells.length && cells[j] !== null) {\n            if (rma_cell.isEqual(cells[j].cell, factorCells[j]) === false) {\n                cells[j].cell = factorCells[j];\n                changed = true;\n            }\n        }\n        else {\n            cells[j] = { measure: null, cell: factorCells[j] };\n            changed = true;\n        }\n    }\n\n    if (cells.length > factorCells.length) {\n        cells.splice(factorCells.length, cells.length - factorCells.length);\n        changed = true;\n    }\n\n    if (changed) {\n        ui.rmCells.setValue(cells);\n        ui.rmCells.setPropertyValue(\"maxItemCount\", cells.length);\n    }\n};\n\n\nmodule.exports = events;\n\n},{\"./rmacell\":3}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"rm\",\"title\":\"Repeated Measures Factors\",\"type\":\"Array\",\"default\":[{\"label\":\"RM Factor 1\",\"levels\":[\"Level 1\",\"Level 2\"]}],\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"label\",\"type\":\"String\"},{\"name\":\"levels\",\"type\":\"Array\",\"template\":{\"type\":\"String\"}}]},\"description\":{\"ui\":\"the repeated measures design.\\n\",\"R\":\"a list of lists, where each list describes the `label` (as a string) and the `levels` (as vector of strings) of a particular repeated measures factor\\n\"}},{\"name\":\"rmCells\",\"title\":\"Repeated Measures Cells\",\"type\":\"Array\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"measure\",\"type\":\"Variable\"},{\"name\":\"cell\",\"type\":\"Array\",\"template\":{\"type\":\"String\"}}]},\"description\":{\"ui\":\"the repeated measures measurements.\\n\",\"R\":\"a list of lists, where each list decribes a repeated measure (as a string) from `data` defined as `measure` and the particular combination of levels from `rm` that it belongs to (as a vector of strings) defined as `cell`\\n\"}},{\"name\":\"bs\",\"title\":\"Between Subject Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"ui\":\"the between subjects factors (optional).\\n\",\"R\":\"a vector of strings naming the between subjects factors from `data`\\n\"}},{\"name\":\"cov\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"ui\":\"the covariates (specifying these makes this an ANCOVA)\\n\",\"R\":\"a vector of strings naming the covariates from `data`. Variables must be numeric\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect Size\",\"type\":\"NMXList\",\"options\":[{\"name\":\"eta\",\"title\":\"η²\"},{\"name\":\"partEta\",\"title\":\"Partial η²\"},{\"name\":\"ges\",\"title\":\"Generalised η²\"},{\"name\":\"omega\",\"title\":\"ω²\"}],\"default\":null,\"description\":{\"ui\":\"provide measures of effect size; η², partial η², or ω².\\n\",\"R\":\"one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial η², and ω² effect sizes, respectively\\n\"}},{\"name\":\"depLabel\",\"title\":\"\",\"type\":\"String\",\"default\":\"Dependent\",\"description\":{\"ui\":\"the label to use for the dependent variable.\\n\",\"R\":\"a string (default: 'Dependent') describing the label used for the dependent variable throughout the analysis\\n\"}},{\"name\":\"rmTerms\",\"title\":\"Model Terms\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"the repeated measures terms of the model.\\n\",\"R\":\"a list of character vectors describing the repeated measures terms to go into the model\\n\"}},{\"name\":\"bsTerms\",\"title\":\"Model Terms\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"the between subjects terms of the model.\\n\",\"R\":\"a list of character vectors describing the between subjects terms to go into the model\\n\"}},{\"name\":\"ss\",\"title\":\"Sum of squares\",\"type\":\"List\",\"options\":[{\"title\":\"Type 2\",\"name\":\"2\"},{\"title\":\"Type 3\",\"name\":\"3\"}],\"default\":\"3\",\"description\":{\"ui\":\"the type of sums of squares to use; Type 2, or 3.\\n\",\"R\":\"`'2'` or `'3'` (default), the sum of squares to use\\n\"}},{\"name\":\"spherTests\",\"title\":\"Sphericity tests\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide sphericity tests.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform sphericity tests\\n\"}},{\"name\":\"spherCorr\",\"title\":\"Sphericity corrections\",\"type\":\"NMXList\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"GG\",\"title\":\"Greenhouse-Geisser\"},{\"name\":\"HF\",\"title\":\"Huynh-Feldt\"}],\"default\":[\"none\"],\"description\":{\"ui\":\"provide p-value corrections for sphericity.\\n\",\"R\":\"one or more of `'none'` (default), `'GG'`, or ``HF``; use no p-value correction, the Greenhouse-Geisser p-value correction, and the Huynh-Feldt p-value correction for shericity, respectively\\n\"}},{\"name\":\"leveneTest\",\"title\":\"Homogeneity test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Levene's test for homogeneity of variances. A low p-value suggests the groups have unequal variances.\\n\",\"R\":\"`TRUE` or `FALSE` (default), test for homogeneity of variances (i.e., Levene's test)\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the residuals are not normally distributed.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"contrasts\",\"hidden\":true,\"title\":\"Contrasts\",\"type\":\"Array\",\"items\":\"(bs)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"String\",\"content\":\"$key\"},{\"name\":\"type\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"deviation\",\"title\":\"Deviation\"},{\"name\":\"simple\",\"title\":\"Simple\"},{\"name\":\"difference\",\"title\":\"Difference\"},{\"name\":\"helmert\",\"title\":\"Helmert\"},{\"name\":\"repeated\",\"title\":\"Repeated\"},{\"name\":\"polynomial\",\"title\":\"Polynomial\"}]}]},\"description\":{\"R\":\"in development\"}},{\"name\":\"postHoc\",\"title\":\"Post Hoc Tests\",\"type\":\"Array\",\"template\":{\"type\":\"Array\",\"template\":{\"type\":\"String\"}},\"default\":null,\"description\":{\"ui\":\"provide post-hoc tests.\\n\",\"R\":\"a list of character vectors describing the post-hoc tests that need to be computed\\n\"}},{\"name\":\"postHocCorr\",\"title\":\"Corrections\",\"type\":\"NMXList\",\"options\":[{\"name\":\"none\",\"title\":\"No correction\"},{\"name\":\"tukey\",\"title\":\"Tukey\"},{\"name\":\"scheffe\",\"title\":\"Scheffe\"},{\"name\":\"bonf\",\"title\":\"Bonferroni\"},{\"name\":\"holm\",\"title\":\"Holm\"}],\"default\":[\"tukey\"],\"description\":{\"ui\":\"the post-hoc multiple comparisons corrections to use.\\n\",\"R\":\"one or more of `'none'`, `'tukey'` (default), `'scheffe'`, `'bonf'`, or `'holm'`; use no, Tukey, Scheffe, Bonferroni and Holm posthoc corrections, respectively\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"ui\":\"the terms to provide estimated marginal means for. Here you can specify multiple terms.\\n\",\"R\":\"a list of lists specifying the variables for which the estimated marginal means need to be calculate. Supports up to three variables per term.\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide plots of the estimated marginal means.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a table of the estimated marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"weigh each cell equally. (Cells are weighed according to the cell frequency by default.)\\n\",\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the width for the Confidence intervals.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"emmPlotData\",\"title\":\"Observed scores\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"plot the data along with the marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), plot the data on top of the marginal means\\n\"}},{\"name\":\"emmPlotError\",\"title\":\"Error bars\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"ci\",\"title\":\"Confidence interval\"},{\"name\":\"se\",\"title\":\"Standard error\"}],\"default\":\"ci\",\"description\":{\"ui\":\"the error bars to plot on the marginal means.\\n\",\"R\":\"`'none'`, `'ci'` (default), or `'se'`. Use no error bars, use confidence intervals, or use standard errors on the marginal mean plots, respectively\\n\"}},{\"name\":\"groupSumm\",\"title\":\"Group summary\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"include a summary of the groups\\n\",\"R\":\"`TRUE` or `FALSE` (default), report a summary of the different groups\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./anovarm.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Repeated Measures ANOVA\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.RMAnovaFactorsBox,\n\t\t\t\t\ttypeName: 'RMAnovaFactorsBox',\n\t\t\t\t\tname: \"rm\",\n\t\t\t\t\tlabel: \"Repeated Measures Factors\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_rm }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\tname: \"rmCells\",\n\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_rmCells }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttemplateName: \"rmcell-template\",\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\tvalueKey: [\"measure\"],\n\t\t\t\t\t\t\t\t\t\tghostText: \"drag variable here\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\tformat: require('./rmacell'),\n\t\t\t\t\t\t\t\t\t\tvalueKey: [\"cell\"],\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\thorizontalAlignment: \"right\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"bs\",\n\t\t\t\t\t\t\theight: \"small\",\n\t\t\t\t\t\t\titemDropBehaviour: \"insert\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_bs }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"cov\",\n\t\t\t\t\t\t\theight: \"small\",\n\t\t\t\t\t\t\titemDropBehaviour: \"insert\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_cov }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Effect Size\",\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"effectSize_ges\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"ges\",\n\t\t\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"effectSize_eta\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"eta\",\n\t\t\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"effectSize_partEta\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"partEta\",\n\t\t\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"effectSize_omega\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"omega\",\n\t\t\t\t\t\t\t\t\toptionName: \"effectSize\",\n\t\t\t\t\t\t\t\t\tstage: 3\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Dependent Variable Label\",\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tname: \"depLabel\",\n\t\t\t\t\t\t\t\t\tformat: FormatDef.string,\n\t\t\t\t\t\t\t\t\twidth: \"largest\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"rmcModelSupplier\",\n\t\t\t\t\tlabel: \"Repeated Measures Components\",\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./anovarm.events').onUpdate_rmcModelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"rmTerms\",\n\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\titemDropBehaviour: \"emptyspace\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_rmTerms }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"bscModelSupplier\",\n\t\t\t\t\tlabel: \"Between Subjects Components\",\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./anovarm.events').onUpdate_bscModelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"bsTerms\",\n\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\titemDropBehaviour: \"emptyspace\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_bsTerms }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\tname: \"ss\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Assumption Checks\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\tname: \"spherTests\",\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Sphericity corrections\",\n\t\t\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"spherCorr_none\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"none\",\n\t\t\t\t\t\t\t\t\toptionName: \"spherCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"spherCorr_GG\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"GG\",\n\t\t\t\t\t\t\t\t\toptionName: \"spherCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"spherCorr_HF\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"HF\",\n\t\t\t\t\t\t\t\t\toptionName: \"spherCorr\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"leveneTest\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"qq\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Post Hoc Tests\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"postHocSupplier\",\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tpersistentItems: false,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_postHocSupplier },\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./anovarm.events').onUpdate_postHocSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"postHoc\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Corrections\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_none\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"none\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_tukey\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"tukey\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_scheffe\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"scheffe\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_bonf\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"bonf\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_holm\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"holm\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./anovarm.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./anovarm.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./anovarm.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./anovarm.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Plot\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotError\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotData\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Options\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"groupSumm\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./anovarm.events\":1,\"./rmacell\":3}],3:[function(require,module,exports){\n\n\nvar rma_cell = new Format ({\n\n    name: 'rma_cell',\n\n    default: [],\n\n    toString: function(raw) {\n        var r = raw[0];\n        for (var i = 1; i < raw.length; i++)\n            r = r + \", \" + raw[i];\n        return r;\n    },\n\n    parse: function(value) {\n        throw \"need to implement\";\n        return value;\n    },\n\n    isValid: function(raw) {\n        if (raw === null)\n            return true;\n\n        if (Array.isArray(raw) === false)\n            return false;\n\n        for (var i = 0; i < raw.length; i++) {\n            if (typeof(raw[i]) !== 'string')\n                return false;\n        }\n\n        return true;\n    },\n\n    isEmpty: function(raw) {\n        return raw === null || raw.length === 0;\n    },\n\n    isEqual: function(raw1, raw2) {\n\n        if (raw1.length !== raw2.length)\n            return false;\n\n        for (var i = 0; i < raw1.length; i++) {\n            if (raw1[i] !== raw2[i])\n                return false;\n        }\n\n        return true;\n    }\n});\n\n\nmodule.exports = rma_cell;\n\n},{}]},{},[2])(2)\n});"
  - title: ANCOVA
    name: ancova
    ns: jmv
    menuGroup: ANOVA
    menuTitle: ANCOVA
    description: |
      The Analysis of Covariance (ANCOVA) is used to explore the relationship
      between a continuous dependent variable, one or more categorical
      explanatory variables, and one or more continuous explanatory variables
      (or covariates). It is essentially the same analysis as ANOVA, but
      with the addition of covariates.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        title: Dependent Variable
        type: Variable
        required: true
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          ui: |
            the dependent variable. For ANCOVA, these will be continuous.
          R: >
            the dependent variable from `data`, variable must be numeric (not
            necessary when providing a formula, see examples)
      - name: factors
        title: Fixed Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        default: null
        description:
          ui: |
            the categorical explanatory (or independent) variables.
          R: >
            the explanatory factors in `data` (not necessary when providing a
            formula, see examples)
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
          - ordinal
        permitted:
          - numeric
        default: null
        description:
          ui: >
            the continuous explanatory (or independent) variables, also known as
            covariates.
          R: >
            the explanatory covariates (not necessary when providing a formula,
            see examples)
      - name: effectSize
        title: Effect Size
        type: NMXList
        options:
          - name: eta
            title: η²
          - name: partEta
            title: partial η²
          - name: omega
            title: ω²
        default: null
        description:
          ui: |
            provide measures of effect size; η², partial η², or ω².
          R: >
            one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial
            η², and ω² effect sizes, respectively
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          ui: |
            perform an overall model test.
          R: |
            `TRUE` or `FALSE` (default); perform an overall model test
      - name: modelTerms
        title: Model Terms
        type: Terms
        default: null
        description:
          ui: |
            the model terms which make up the model.
          R: >
            a formula describing the terms to go into the model (not necessary
            when providing a formula, see examples)
      - name: ss
        title: Sum of squares
        type: List
        options:
          - title: Type 1
            name: '1'
          - title: Type 2
            name: '2'
          - title: Type 3
            name: '3'
        default: '3'
        description:
          ui: |
            the type of sums of squares to use; Type 1, 2, or 3.
          R: |
            `'1'`, `'2'` or `'3'` (default), the sum of squares to use
      - name: homo
        title: Homogeneity test
        type: Bool
        default: false
        description:
          ui: >
            provide Levene's test for homogeneity of variances. A low p-value
            suggests the groups have unequal variances.
          R: |
            `TRUE` or `FALSE` (default), perform homogeneity tests
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          ui: >
            perform Shapiro-Wilk tests of normality. A low p-value suggests the
            residuals are not normally distributed.
          R: |
            `TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality
      - name: qq
        title: Q-Q Plot
        type: Bool
        default: false
        description:
          ui: >
            provide Q-Q plots of residuals -- a plot of the actual residuals
            against what would be expected if the data were *perfectly* normally
            distributed. Large deviations from the diagonal line suggest the
            residuals are not normally distributed.
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: contrasts
        title: Contrasts
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: type
              type: List
              options:
                - name: none
                  title: None
                - name: deviation
                  title: Deviation
                - name: simple
                  title: Simple
                - name: difference
                  title: Difference
                - name: helmert
                  title: Helmert
                - name: repeated
                  title: Repeated
                - name: polynomial
                  title: Polynomial
        description:
          ui: |
            the contrasts to use.
          R: >
            a list of lists specifying the factor and type of contrast to use,
            one of `'deviation'`, `'simple'`, `'difference'`, `'helmert'`,
            `'repeated'` or `'polynomial'`
      - name: postHoc
        title: Post Hoc Tests
        type: Terms
        default: null
        description:
          ui: |
            provide post-hoc tests.
          R: >
            a formula containing the terms to perform post-hoc tests on (see the
            examples)
      - name: postHocCorr
        title: Correction
        type: NMXList
        options:
          - name: none
            title: No correction
          - name: tukey
            title: Tukey
          - name: scheffe
            title: Scheffe
          - name: bonf
            title: Bonferroni
          - name: holm
            title: Holm
        default:
          - tukey
        description:
          ui: |
            the post-hoc multiple comparisons corrections to use.
          R: >
            one or more of `'none'`, `'tukey'`, `'scheffe'`, `'bonf'`, or
            `'holm'`; provide no, Tukey, Scheffe, Bonferroni, and Holm Post Hoc
            corrections respectively
      - name: postHocES
        title: Effect size
        type: NMXList
        options:
          - name: d
            title: Cohen's d
        default: []
        description:
          ui: |
            provide a Cohen's d measure of effect size for the post-hoc tests.
          R: >
            a possible value of `'d'`; provide cohen's d measure of effect size
            for the post-hoc tests
      - name: postHocEsCi
        title: Confidence Interval
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for the post-hoc effect sizes.
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            post-hoc effect sizes
      - name: postHocEsCiWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width for the post-hoc effect sizes.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals for the post-hoc effect sizes
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          ui: >
            the terms to provide estimated marginal means for. Here you can
            specify multiple terms.
          R: >
            a formula containing the terms to estimate marginal means for (see
            the examples)
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          ui: |
            provide plots of the estimated marginal means.
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmPlotData
        title: Observed scores
        type: Bool
        default: false
        description:
          ui: |
            plot the data along with the marginal means.
          R: >
            `TRUE` or `FALSE` (default), plot the data on top of the marginal
            means
      - name: emmPlotError
        title: Error bars
        type: List
        options:
          - name: none
            title: None
          - name: ci
            title: Confidence interval
          - name: se
            title: Standard error
        default: ci
        description:
          ui: |
            the error bars to plot on the marginal means.
          R: >
            `'none'`, `'ci'` (default), or `'se'`. Use no error bars, use
            confidence intervals, or use standard errors on the marginal mean
            plots, respectively
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          ui: |
            provide a table of the estimated marginal means.
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          ui: >
            weigh each cell equally. (Cells are weighed according to the cell
            frequency by default.)
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the width for the Confidence intervals.
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: residsOV
        title: Residuals
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\nconst events = {\n    update: function(ui) {\n        calcModelTerms(ui, this);\n        filterModelTerms(ui, this);\n        updatePostHocSupplier(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_factors: function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onChange_covariates: function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onChange_modelTerms: function(ui) {\n        filterModelTerms(ui, this);\n        updatePostHocSupplier(ui, this);\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onUpdate_modelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.factors.value(), []);\n        let covariatesList = this.cloneArray(ui.covs.value(), []);\n\n        let combinedList = variableList.concat(covariatesList);\n\n        ui.modelSupplier.setValue(this.valuesToItems(combinedList, FormatDef.variable));\n    },\n\n    onUpdate_postHocSupplier: function(ui) {\n        updatePostHocSupplier(ui, this);\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    onChange_postHocSupplier: function(ui) {\n        let values = this.itemsToValues(ui.postHocSupplier.value());\n        this.checkValue(ui.postHoc, true, values, FormatDef.term);\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    }\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let b1 = context.cloneArray(ui.factors.value(), []);\n    b1 = context.valuesToItems(b1, FormatDef.variable);\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(b1);\n};\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1)) );\n    });\n};\n\nvar calcModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.factors.value(), []);\n    var covariatesList = context.cloneArray(ui.covs.value(), []);\n\n    var combinedList = variableList.concat(covariatesList);\n\n    ui.modelSupplier.setValue(context.valuesToItems(combinedList, FormatDef.variable));\n    //ui.plotsSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n    calcMarginalMeansSupplier(ui, context);\n\n    var diff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    var diff2 = context.findChanges(\"covariatesList\", covariatesList, true, FormatDef.variable);\n    var combinedDiff = context.findChanges(\"combinedList\", combinedList, true, FormatDef.variable);\n\n    var termsList = context.cloneArray(ui.modelTerms.value(), []);\n    var termsChanged = false;\n\n    for (var i = 0; i < combinedDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (FormatDef.term.contains(termsList[j], combinedDiff.removed[i])) {\n                termsList.splice(j, 1);\n                termsChanged = true;\n                j -= 1;\n            }\n        }\n    }\n\n    for (var a = 0; a < diff.added.length; a++) {\n        let item = diff.added[a];\n        var listLength = termsList.length;\n        for (var j = 0; j < listLength; j++) {\n            var newTerm = context.clone(termsList[j]);\n            if (containsCovariate(newTerm, covariatesList) === false) {\n                if (context.listContains(newTerm, item, FormatDef.variable) === false) {\n                    newTerm.push(item)\n                    if (context.listContains(termsList, newTerm , FormatDef.term) === false) {\n                        termsList.push(newTerm);\n                        termsChanged = true;\n                    }\n                }\n            }\n        }\n        if (context.listContains(termsList, [item] , FormatDef.term) === false) {\n            termsList.push([item]);\n            termsChanged = true;\n        }\n    }\n\n    for (var a = 0; a < diff2.added.length; a++) {\n        let item = diff2.added[a];\n        if (context.listContains(termsList, [item] , FormatDef.term) === false) {\n            termsList.push([item]);\n            termsChanged = true;\n        }\n    }\n\n    if (termsChanged)\n        ui.modelTerms.setValue(termsList);\n\n    updateContrasts(ui, variableList, context);\n};\n\nvar updatePostHocSupplier = function(ui, context) {\n    var termsList = context.cloneArray(ui.modelTerms.value(), []);\n    var covariatesList = context.cloneArray(ui.covs.value(), []);\n    var list = [];\n    for (var j = 0; j < termsList.length; j++) {\n        var term = termsList[j];\n        if (containsCovariate(term, covariatesList) === false)\n            list.push(term)\n    }\n    ui.postHocSupplier.setValue(context.valuesToItems(list, FormatDef.term));\n};\n\nvar filterModelTerms = function(ui, context) {\n    var termsList = context.cloneArray(ui.modelTerms.value(), []);\n    var diff = context.findChanges(\"termsList\", termsList, true, FormatDef.term);\n\n    var changed = false;\n    if (diff.removed.length > 0) {\n        var itemsRemoved = false;\n        for (var i = 0; i < diff.removed.length; i++) {\n            var item = diff.removed[i];\n            for (var j = 0; j < termsList.length; j++) {\n                if (FormatDef.term.contains(termsList[j], item)) {\n                    termsList.splice(j, 1);\n                    j -= 1;\n                    itemsRemoved = true;\n                }\n            }\n        }\n\n        if (itemsRemoved)\n            changed = true;\n    }\n\n    if (context.sortArraysByLength(termsList))\n        changed = true;\n\n    if (changed)\n        ui.modelTerms.setValue(termsList);\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.contrasts.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], type: \"none\" });\n        else\n            list3.push(found);\n    }\n\n    ui.contrasts.setValue(list3);\n};\n\nvar containsCovariate = function(value, covariates) {\n    for (var i = 0; i < covariates.length; i++) {\n        if (FormatDef.term.contains(value, covariates[i]))\n            return true;\n    }\n\n    return false;\n};\n\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"title\":\"Dependent Variable\",\"type\":\"Variable\",\"required\":true,\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the dependent variable. For ANCOVA, these will be continuous.\\n\",\"R\":\"the dependent variable from `data`, variable must be numeric (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"factors\",\"title\":\"Fixed Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"ui\":\"the categorical explanatory (or independent) variables.\\n\",\"R\":\"the explanatory factors in `data` (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\",\"ordinal\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"ui\":\"the continuous explanatory (or independent) variables, also known as covariates.\\n\",\"R\":\"the explanatory covariates (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"effectSize\",\"title\":\"Effect Size\",\"type\":\"NMXList\",\"options\":[{\"name\":\"eta\",\"title\":\"η²\"},{\"name\":\"partEta\",\"title\":\"partial η²\"},{\"name\":\"omega\",\"title\":\"ω²\"}],\"default\":null,\"description\":{\"ui\":\"provide measures of effect size; η², partial η², or ω².\\n\",\"R\":\"one or more of `'eta'`, `'partEta'`, or `'omega'`; use η², partial η², and ω² effect sizes, respectively\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform an overall model test.\\n\",\"R\":\"`TRUE` or `FALSE` (default); perform an overall model test\\n\"}},{\"name\":\"modelTerms\",\"title\":\"Model Terms\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"the model terms which make up the model.\\n\",\"R\":\"a formula describing the terms to go into the model (not necessary when providing a formula, see examples)\\n\"}},{\"name\":\"ss\",\"title\":\"Sum of squares\",\"type\":\"List\",\"options\":[{\"title\":\"Type 1\",\"name\":\"1\"},{\"title\":\"Type 2\",\"name\":\"2\"},{\"title\":\"Type 3\",\"name\":\"3\"}],\"default\":\"3\",\"description\":{\"ui\":\"the type of sums of squares to use; Type 1, 2, or 3.\\n\",\"R\":\"`'1'`, `'2'` or `'3'` (default), the sum of squares to use\\n\"}},{\"name\":\"homo\",\"title\":\"Homogeneity test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Levene's test for homogeneity of variances. A low p-value suggests the groups have unequal variances.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform homogeneity tests\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"perform Shapiro-Wilk tests of normality. A low p-value suggests the residuals are not normally distributed.\\n\",\"R\":\"`TRUE` or `FALSE` (default), perform Shapiro-Wilk tests of normality\\n\"}},{\"name\":\"qq\",\"title\":\"Q-Q Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide Q-Q plots of residuals -- a plot of the actual residuals against what would be expected if the data were *perfectly* normally distributed. Large deviations from the diagonal line suggest the residuals are not normally distributed.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"contrasts\",\"title\":\"Contrasts\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"type\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"deviation\",\"title\":\"Deviation\"},{\"name\":\"simple\",\"title\":\"Simple\"},{\"name\":\"difference\",\"title\":\"Difference\"},{\"name\":\"helmert\",\"title\":\"Helmert\"},{\"name\":\"repeated\",\"title\":\"Repeated\"},{\"name\":\"polynomial\",\"title\":\"Polynomial\"}]}]},\"description\":{\"ui\":\"the contrasts to use.\\n\",\"R\":\"a list of lists specifying the factor and type of contrast to use, one of `'deviation'`, `'simple'`, `'difference'`, `'helmert'`, `'repeated'` or `'polynomial'`\\n\"}},{\"name\":\"postHoc\",\"title\":\"Post Hoc Tests\",\"type\":\"Terms\",\"default\":null,\"description\":{\"ui\":\"provide post-hoc tests.\\n\",\"R\":\"a formula containing the terms to perform post-hoc tests on (see the examples)\\n\"}},{\"name\":\"postHocCorr\",\"title\":\"Correction\",\"type\":\"NMXList\",\"options\":[{\"name\":\"none\",\"title\":\"No correction\"},{\"name\":\"tukey\",\"title\":\"Tukey\"},{\"name\":\"scheffe\",\"title\":\"Scheffe\"},{\"name\":\"bonf\",\"title\":\"Bonferroni\"},{\"name\":\"holm\",\"title\":\"Holm\"}],\"default\":[\"tukey\"],\"description\":{\"ui\":\"the post-hoc multiple comparisons corrections to use.\\n\",\"R\":\"one or more of `'none'`, `'tukey'`, `'scheffe'`, `'bonf'`, or `'holm'`; provide no, Tukey, Scheffe, Bonferroni, and Holm Post Hoc corrections respectively\\n\"}},{\"name\":\"postHocES\",\"title\":\"Effect size\",\"type\":\"NMXList\",\"options\":[{\"name\":\"d\",\"title\":\"Cohen's d\"}],\"default\":[],\"description\":{\"ui\":\"provide a Cohen's d measure of effect size for the post-hoc tests.\\n\",\"R\":\"a possible value of `'d'`; provide cohen's d measure of effect size for the post-hoc tests\\n\"}},{\"name\":\"postHocEsCi\",\"title\":\"Confidence Interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for the post-hoc effect sizes.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the post-hoc effect sizes\\n\"}},{\"name\":\"postHocEsCiWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width for the post-hoc effect sizes.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals for the post-hoc effect sizes\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"ui\":\"the terms to provide estimated marginal means for. Here you can specify multiple terms.\\n\",\"R\":\"a formula containing the terms to estimate marginal means for (see the examples)\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide plots of the estimated marginal means.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmPlotData\",\"title\":\"Observed scores\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"plot the data along with the marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), plot the data on top of the marginal means\\n\"}},{\"name\":\"emmPlotError\",\"title\":\"Error bars\",\"type\":\"List\",\"options\":[{\"name\":\"none\",\"title\":\"None\"},{\"name\":\"ci\",\"title\":\"Confidence interval\"},{\"name\":\"se\",\"title\":\"Standard error\"}],\"default\":\"ci\",\"description\":{\"ui\":\"the error bars to plot on the marginal means.\\n\",\"R\":\"`'none'`, `'ci'` (default), or `'se'`. Use no error bars, use confidence intervals, or use standard errors on the marginal mean plots, respectively\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a table of the estimated marginal means.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"weigh each cell equally. (Cells are weighed according to the cell frequency by default.)\\n\",\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the width for the Confidence intervals.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"residsOV\",\"title\":\"Residuals\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./ancova.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"ANCOVA\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\titemDropBehaviour: \"overwrite\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./ancova.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\theight: \"small\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./ancova.events').onChange_covariates }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstyle: \"inline\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Model Fit\",\n\t\t\t\t\tcell: {\"row\":0,\"column\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"modelTest\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Effect Size\",\n\t\t\t\t\tcell: {\"row\":0,\"column\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstyle: \"list-inline\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_eta\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"eta\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_partEta\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"partEta\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"effectSize_omega\",\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\toptionPart: \"omega\",\n\t\t\t\t\t\t\toptionName: \"effectSize\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Components\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./ancova.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"modelTerms\",\n\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\titemDropBehaviour: \"emptyspace\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./ancova.events').onChange_modelTerms }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\tname: \"ss\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Assumption Checks\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"homo\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"norm\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"qq\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Contrasts\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"contrasts\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tshowColumnHeaders: false,\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: null,\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"type\",\n\t\t\t\t\t\t\tlabel: null,\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\ttypeName: 'ComboBox'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Post Hoc Tests\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"postHocSupplier\",\n\t\t\t\t\tpersistentItems: false,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./ancova.events').onChange_postHocSupplier },\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./ancova.events').onUpdate_postHocSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"postHoc\",\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Correction\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_none\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"none\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_tukey\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"tukey\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_scheffe\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"scheffe\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_bonf\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"bonf\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocCorr_holm\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"holm\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocCorr\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Effect Size\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"postHocES_d\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"d\",\n\t\t\t\t\t\t\t\t\toptionName: \"postHocES\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"postHocEsCi\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(postHocES:d)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"postHocEsCiWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(postHocES:d && postHocEsCi)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./ancova.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./ancova.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./ancova.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./ancova.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Confidence interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Plot\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotError\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlotData\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"residsOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./ancova.events\":1}]},{},[2])(2)\n});"
  - title: MANCOVA
    name: mancova
    ns: jmv
    menuGroup: ANOVA
    menuTitle: MANCOVA
    description: >
      Multivariate Analysis of (Co)Variance (MANCOVA) is used to explore the
      relationship between multiple dependent variables, and one or more
      categorical and/or continuous explanatory variables.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: deps
        title: Dependent Variables
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          R: >
            a string naming the dependent variable from `data`, variable must be
            numeric
      - name: factors
        title: Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the factors from `data`
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: a vector of strings naming the covariates from `data`
      - name: multivar
        title: Multivariate Statistics
        type: NMXList
        options:
          - name: pillai
            title: Pillai's Trace
          - name: wilks
            title: Wilks' Lambda
          - name: hotel
            title: Hotelling's Trace
          - name: roy
            title: Roy's Largest Root
        default:
          - pillai
          - wilks
          - hotel
          - roy
        description:
          R: >
            one or more of `'pillai'`, `'wilks'`, `'hotel'`, or `'roy'`; use
            Pillai's Trace, Wilks' Lambda, Hotelling's Trace, and Roy's Largest
            Root multivariate statistics, respectively
      - name: boxM
        title: Box's M test for homogeneity of covariance matrices
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Box's M test
      - name: shapiro
        title: Shapiro-Wilk test for multivariate normality
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Shapiro-Wilk test
      - name: qqPlot
        title: Q-Q plot of multivariate normality
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a Q-Q plot of multivariate
            normality
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"deps\",\"title\":\"Dependent Variables\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"R\":\"a string naming the dependent variable from `data`, variable must be numeric\\n\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the factors from `data`\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the covariates from `data`\"}},{\"name\":\"multivar\",\"title\":\"Multivariate Statistics\",\"type\":\"NMXList\",\"options\":[{\"name\":\"pillai\",\"title\":\"Pillai's Trace\"},{\"name\":\"wilks\",\"title\":\"Wilks' Lambda\"},{\"name\":\"hotel\",\"title\":\"Hotelling's Trace\"},{\"name\":\"roy\",\"title\":\"Roy's Largest Root\"}],\"default\":[\"pillai\",\"wilks\",\"hotel\",\"roy\"],\"description\":{\"R\":\"one or more of `'pillai'`, `'wilks'`, `'hotel'`, or `'roy'`; use Pillai's Trace, Wilks' Lambda, Hotelling's Trace, and Roy's Largest Root multivariate statistics, respectively\\n\"}},{\"name\":\"boxM\",\"title\":\"Box's M test for homogeneity of covariance matrices\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Box's M test\\n\"}},{\"name\":\"shapiro\",\"title\":\"Shapiro-Wilk test for multivariate normality\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Shapiro-Wilk test\\n\"}},{\"name\":\"qqPlot\",\"title\":\"Q-Q plot of multivariate normality\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of multivariate normality\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"MANCOVA\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"deps\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\theight: \"small\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Multivariate Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"multivar_pillai\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"pillai\",\n\t\t\t\t\t\t\t\t\toptionName: \"multivar\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"multivar_wilks\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"wilks\",\n\t\t\t\t\t\t\t\t\toptionName: \"multivar\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"multivar_hotel\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"hotel\",\n\t\t\t\t\t\t\t\t\toptionName: \"multivar\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"multivar_roy\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\toptionPart: \"roy\",\n\t\t\t\t\t\t\t\t\toptionName: \"multivar\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"boxM\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tlabel: \"Box's M test\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"shapiro\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tlabel: \"Shapiro-Wilk test\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"qqPlot\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: One-Way ANOVA (Non-parametric)
    name: anovaNP
    ns: jmv
    menuGroup: ANOVA
    menuSubgroup: Non-Parametric
    menuTitle: One-Way ANOVA
    menuSubtitle: Kruskal-Wallis
    description: >
      The Kruskal-Wallis test is used to explore the relationship between a
      continuous dependent variable, and a categorical explanatory variable. It
      is analagous to ANOVA, but with the advantage of being non-parametric and
      having fewer assumptions. However, it has the limitation that it can only
      test a single explanatory variable at a time.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: deps
        title: Dependent Variables
        type: Variables
        required: true
        suggested:
          - continuous
          - ordinal
        description:
          R: a string naming the dependent variable in `data`
      - name: group
        title: Grouping Variable
        type: Variable
        required: true
        rejectUnusedLevels: true
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: a string naming the grouping or independent variable in `data`
      - name: es
        title: Effect size
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide effect-sizes
      - name: pairs
        title: DSCF pairwise comparisons
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), perform pairwise comparisons
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"deps\",\"title\":\"Dependent Variables\",\"type\":\"Variables\",\"required\":true,\"suggested\":[\"continuous\",\"ordinal\"],\"description\":{\"R\":\"a string naming the dependent variable in `data`\"}},{\"name\":\"group\",\"title\":\"Grouping Variable\",\"type\":\"Variable\",\"required\":true,\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"a string naming the grouping or independent variable in `data`\"}},{\"name\":\"es\",\"title\":\"Effect size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide effect-sizes\\n\"}},{\"name\":\"pairs\",\"title\":\"DSCF pairwise comparisons\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), perform pairwise comparisons\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"One-Way ANOVA (Non-parametric)\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"deps\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"group\",\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tstretchFactor: 1,\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"es\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"pairs\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Repeated Measures ANOVA (Non-parametric)
    name: anovaRMNP
    ns: jmv
    menuGroup: ANOVA
    menuSubgroup: Non-Parametric
    menuTitle: Repeated Measures ANOVA
    menuSubtitle: Friedman
    description: >
      The Friedman test is used to explore the relationship between a continuous
      dependent variable and a categorical explanatory variable, where the
      explanatory variable is 'within subjects' (where multiple measurements are
      from the same subject). It is analagous to Repeated Measures ANOVA, but
      with the advantage of being non-parametric, and not requiring the
      assumptions of normality or homogeneity of variances. However, it has the
      limitation that it can only test a single explanatory variable at a time.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: measures
        title: Measures
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          R: a vector of strings naming the repeated measures variables
      - name: pairs
        title: Pairwise comparisons (Durbin-Conover)
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), perform pairwise comparisons
      - name: desc
        title: Descriptives
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide descriptive statistics
      - name: plots
        title: Descriptive plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a descriptive plot
      - name: plotType
        title: Plot Type
        type: List
        options:
          - name: means
            title: Means
          - name: medians
            title: Medians
        default: means
        description:
          R: >
            `'means'` (default) or `'medians'`, the error bars to use in the
            plot
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"measures\",\"title\":\"Measures\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"R\":\"a vector of strings naming the repeated measures variables\"}},{\"name\":\"pairs\",\"title\":\"Pairwise comparisons (Durbin-Conover)\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), perform pairwise comparisons\\n\"}},{\"name\":\"desc\",\"title\":\"Descriptives\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide descriptive statistics\\n\"}},{\"name\":\"plots\",\"title\":\"Descriptive plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a descriptive plot\\n\"}},{\"name\":\"plotType\",\"title\":\"Plot Type\",\"type\":\"List\",\"options\":[{\"name\":\"means\",\"title\":\"Means\"},{\"name\":\"medians\",\"title\":\"Medians\"}],\"default\":\"means\",\"description\":{\"R\":\"`'means'` (default) or `'medians'`, the error bars to use in the plot\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Repeated Measures ANOVA (Non-parametric)\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tsuggested: [\"continuous\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"measures\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tstretchFactor: 1,\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"pairs\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"desc\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"plots\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"plotType_means\",\n\t\t\t\t\t\t\toptionName: \"plotType\",\n\t\t\t\t\t\t\toptionPart: \"means\",\n\t\t\t\t\t\t\tenable: \"(plots)\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"plotType_medians\",\n\t\t\t\t\t\t\toptionName: \"plotType\",\n\t\t\t\t\t\t\toptionPart: \"medians\",\n\t\t\t\t\t\t\tenable: \"(plots)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Correlation Matrix
    name: corrMatrix
    menuGroup: Regression
    menuTitle: Correlation Matrix
    ns: jmv
    description: |-
      Correlation matrices are a way to examine linear relationships between
      two or more continuous variables.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        takeFromDataIfMissing: true
        suggested:
          - continuous
          - ordinal
        permitted:
          - numeric
        description:
          ui: |
            the variables of interest.
          R: |
            a vector of strings naming the variables to correlate in `data`
      - name: pearson
        title: Pearson
        type: Bool
        default: true
        description:
          ui: |
            provide a Pearson's r for each combination of variables.
          R: |
            `TRUE` (default) or `FALSE`, provide Pearson's R
      - name: spearman
        title: Spearman
        type: Bool
        default: false
        description:
          ui: |
            provide a Spearman's rho for each combination of variables.
          R: |
            `TRUE` or `FALSE` (default), provide Spearman's rho
      - name: kendall
        title: Kendall's tau-b
        type: Bool
        default: false
        description:
          ui: |
            provide a Kendall's tau-b for each combination of variables.
          R: |
            `TRUE` or `FALSE` (default), provide Kendall's tau-b
      - name: sig
        title: Report significance
        type: Bool
        default: true
        description:
          ui: |
            provide a p-value for each correlation co-efficient.
          R: |
            `TRUE` (default) or `FALSE`, provide significance levels
      - name: flag
        title: Flag significant correlations
        type: Bool
        default: false
        description:
          ui: |
            flag significant correlations (p < .05) with symbols.
          R: |
            `TRUE` or `FALSE` (default), flag significant correlations
      - name: 'n'
        title: 'N'
        type: Bool
        default: false
        description:
          ui: |
            provide the number of cases.
          R: |
            `TRUE` or `FALSE` (default), provide the number of cases
      - name: ci
        title: Confidence intervals
        type: Bool
        default: false
        description:
          ui: |
            provide confidence intervals for Pearson's r.
          R: |
            `TRUE` or `FALSE` (default), provide confidence intervals
      - name: ciWidth
        title: Confidence interval width
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          ui: |
            the confidence interval width.
          R: >
            a number between 50 and 99.9 (default: 95), the width of confidence
            intervals to provide
      - name: plots
        title: Correlation matrix
        type: Bool
        default: false
        description:
          ui: |
            provide a correlation matrix plot.
          R: |
            `TRUE` or `FALSE` (default), provide a correlation matrix plot
      - name: plotDens
        title: Densities for variables
        type: Bool
        default: false
        description:
          ui: |
            plot densities along the diagonal of the correlation matrix plot.
          R: >
            `TRUE` or `FALSE` (default), provide densities in the correlation
            matrix plot
      - name: plotStats
        title: Statistics
        type: Bool
        default: false
        description:
          ui: |
            provide correlation co-efficients in the correlation matrix plot.
          R: >
            `TRUE` or `FALSE` (default), provide statistics in the correlation
            matrix plot
      - name: hypothesis
        title: Hypothesis
        type: List
        options:
          - name: corr
            title: Correlated
          - name: pos
            title: Correlated positively
          - name: neg
            title: Correlated negatively
        default: corr
        description:
          ui: |
            the alternative hypothesis. Allows for one-tailed tests.
          R: >
            one of `'corr'` (default), `'pos'`, `'neg'` specifying the
            alernative hypothesis; correlated, correlated positively, correlated
            negatively respectively.
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":true,\"suggested\":[\"continuous\",\"ordinal\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the variables of interest.\\n\",\"R\":\"a vector of strings naming the variables to correlate in `data`\\n\"}},{\"name\":\"pearson\",\"title\":\"Pearson\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide a Pearson's r for each combination of variables.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide Pearson's R\\n\"}},{\"name\":\"spearman\",\"title\":\"Spearman\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a Spearman's rho for each combination of variables.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Spearman's rho\\n\"}},{\"name\":\"kendall\",\"title\":\"Kendall's tau-b\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a Kendall's tau-b for each combination of variables.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Kendall's tau-b\\n\"}},{\"name\":\"sig\",\"title\":\"Report significance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide a p-value for each correlation co-efficient.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide significance levels\\n\"}},{\"name\":\"flag\",\"title\":\"Flag significant correlations\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"flag significant correlations (p < .05) with symbols.\\n\",\"R\":\"`TRUE` or `FALSE` (default), flag significant correlations\\n\"}},{\"name\":\"n\",\"title\":\"N\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide the number of cases.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide the number of cases\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence intervals\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide confidence intervals for Pearson's r.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence interval width\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"ui\":\"the confidence interval width.\\n\",\"R\":\"a number between 50 and 99.9 (default: 95), the width of confidence intervals to provide\\n\"}},{\"name\":\"plots\",\"title\":\"Correlation matrix\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a correlation matrix plot.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide a correlation matrix plot\\n\"}},{\"name\":\"plotDens\",\"title\":\"Densities for variables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"plot densities along the diagonal of the correlation matrix plot.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide densities in the correlation matrix plot\\n\"}},{\"name\":\"plotStats\",\"title\":\"Statistics\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide correlation co-efficients in the correlation matrix plot.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide statistics in the correlation matrix plot\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Hypothesis\",\"type\":\"List\",\"options\":[{\"name\":\"corr\",\"title\":\"Correlated\"},{\"name\":\"pos\",\"title\":\"Correlated positively\"},{\"name\":\"neg\",\"title\":\"Correlated negatively\"}],\"default\":\"corr\",\"description\":{\"ui\":\"the alternative hypothesis. Allows for one-tailed tests.\\n\",\"R\":\"one of `'corr'` (default), `'pos'`, `'neg'` specifying the alernative hypothesis; correlated, correlated positively, correlated negatively respectively.\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Correlation Matrix\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tstretchFactor: 1,\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Correlation Coefficients\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"pearson\",\n\t\t\t\t\t\t\tlabel: \"Pearson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"spearman\",\n\t\t\t\t\t\t\tlabel: \"Spearman\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"kendall\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Additional Options\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"sig\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"flag\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"n\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\tlabel: \"Confidence intervals\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":0,\"row\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_corr\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"corr\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_pos\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"pos\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_neg\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"neg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Plot\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":1,\"row\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"plots\",\n\t\t\t\t\t\t\tlabel: \"Correlation matrix\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"plotDens\",\n\t\t\t\t\t\t\t\t\tenable: \"(plots)\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"plotStats\",\n\t\t\t\t\t\t\t\t\tenable: \"(plots)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Partial Correlation
    name: corrPart
    ns: jmv
    menuGroup: Regression
    menuTitle: Partial Correlation
    description: |-
      Partial correlation matrices are a way to examine linear relationships
      between two or more continuous variables while controlling for other
      variables
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        takeFromDataIfMissing: true
        suggested:
          - continuous
          - ordinal
        permitted:
          - numeric
        description:
          ui: |
            the variables of interest.
          R: |
            a vector of strings naming the variables to correlate in `data`
      - name: controls
        title: Control variables
        type: Variables
        takeFromDataIfMissing: false
        suggested:
          - continuous
          - ordinal
        permitted:
          - numeric
        description:
          ui: |
            the control variables of interest.
          R: |
            a vector of strings naming the control variables in `data`
      - name: pearson
        title: Pearson
        type: Bool
        default: true
        description:
          ui: |
            provide a Pearson's r for each combination of variables.
          R: |
            `TRUE` (default) or `FALSE`, provide Pearson's R
      - name: spearman
        title: Spearman
        type: Bool
        default: false
        description:
          ui: |
            provide a Spearman's rho for each combination of variables.
          R: |
            `TRUE` or `FALSE` (default), provide Spearman's rho
      - name: kendall
        title: Kendall's tau-b
        type: Bool
        default: false
        description:
          ui: |
            provide a Kendall's tau-b for each combination of variables.
          R: |
            `TRUE` or `FALSE` (default), provide Kendall's tau-b
      - name: type
        title: Correlation type
        type: List
        options:
          - name: part
            title: Partial
          - name: semi
            title: Semipartial
        default: part
        description:
          ui: |
            the type of correlation to calculate
          R: >
            one of `'part'` (default) or `'semi'` specifying the type of partial
            correlation to calculate; partial or semipartial correlation.
      - name: sig
        title: Report significance
        type: Bool
        default: true
        description:
          ui: |
            provide a p-value for each correlation co-efficient.
          R: |
            `TRUE` (default) or `FALSE`, provide significance levels
      - name: flag
        title: Flag significant correlations
        type: Bool
        default: false
        description:
          ui: |
            flag significant correlations (p < .05) with symbols.
          R: |
            `TRUE` or `FALSE` (default), flag significant correlations
      - name: 'n'
        title: 'N'
        type: Bool
        default: false
        description:
          ui: |
            provide the number of cases.
          R: |
            `TRUE` or `FALSE` (default), provide the number of cases
      - name: hypothesis
        title: Hypothesis
        type: List
        options:
          - name: corr
            title: Correlated
          - name: pos
            title: Correlated positively
          - name: neg
            title: Correlated negatively
        default: corr
        description:
          ui: |
            the alternative hypothesis. Allows for one-tailed tests.
          R: >
            one of `'corr'` (default), `'pos'`, `'neg'` specifying the
            alernative hypothesis; correlated, correlated positively, correlated
            negatively respectively.
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":true,\"suggested\":[\"continuous\",\"ordinal\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the variables of interest.\\n\",\"R\":\"a vector of strings naming the variables to correlate in `data`\\n\"}},{\"name\":\"controls\",\"title\":\"Control variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":false,\"suggested\":[\"continuous\",\"ordinal\"],\"permitted\":[\"numeric\"],\"description\":{\"ui\":\"the control variables of interest.\\n\",\"R\":\"a vector of strings naming the control variables in `data`\\n\"}},{\"name\":\"pearson\",\"title\":\"Pearson\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide a Pearson's r for each combination of variables.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide Pearson's R\\n\"}},{\"name\":\"spearman\",\"title\":\"Spearman\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a Spearman's rho for each combination of variables.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Spearman's rho\\n\"}},{\"name\":\"kendall\",\"title\":\"Kendall's tau-b\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide a Kendall's tau-b for each combination of variables.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide Kendall's tau-b\\n\"}},{\"name\":\"type\",\"title\":\"Correlation type\",\"type\":\"List\",\"options\":[{\"name\":\"part\",\"title\":\"Partial\"},{\"name\":\"semi\",\"title\":\"Semipartial\"}],\"default\":\"part\",\"description\":{\"ui\":\"the type of correlation to calculate\\n\",\"R\":\"one of `'part'` (default) or `'semi'` specifying the type of partial correlation to calculate; partial or semipartial correlation.\\n\"}},{\"name\":\"sig\",\"title\":\"Report significance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"ui\":\"provide a p-value for each correlation co-efficient.\\n\",\"R\":\"`TRUE` (default) or `FALSE`, provide significance levels\\n\"}},{\"name\":\"flag\",\"title\":\"Flag significant correlations\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"flag significant correlations (p < .05) with symbols.\\n\",\"R\":\"`TRUE` or `FALSE` (default), flag significant correlations\\n\"}},{\"name\":\"n\",\"title\":\"N\",\"type\":\"Bool\",\"default\":false,\"description\":{\"ui\":\"provide the number of cases.\\n\",\"R\":\"`TRUE` or `FALSE` (default), provide the number of cases\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Hypothesis\",\"type\":\"List\",\"options\":[{\"name\":\"corr\",\"title\":\"Correlated\"},{\"name\":\"pos\",\"title\":\"Correlated positively\"},{\"name\":\"neg\",\"title\":\"Correlated negatively\"}],\"default\":\"corr\",\"description\":{\"ui\":\"the alternative hypothesis. Allows for one-tailed tests.\\n\",\"R\":\"one of `'corr'` (default), `'pos'`, `'neg'` specifying the alernative hypothesis; correlated, correlated positively, correlated negatively respectively.\\n\"}}];\n\nconst view = function() {\n    \n    this.handlers = { }\n\n    View.extend({\n        jus: \"3.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Partial Correlation\",\n    jus: \"3.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Variables\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Control Variables\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"controls\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Correlation Coefficients\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"pearson\",\n\t\t\t\t\t\t\tlabel: \"Pearson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"spearman\",\n\t\t\t\t\t\t\tlabel: \"Spearman\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"kendall\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":0,\"row\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_corr\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"corr\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_pos\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"pos\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"hypothesis_neg\",\n\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\toptionPart: \"neg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Correlation Type\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"type_part\",\n\t\t\t\t\t\t\toptionName: \"type\",\n\t\t\t\t\t\t\toptionPart: \"part\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"type_semi\",\n\t\t\t\t\t\t\toptionName: \"type\",\n\t\t\t\t\t\t\toptionPart: \"semi\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Additional Options\",\n\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\tcell: {\"column\":1,\"row\":1},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"sig\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"flag\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"n\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Linear Regression
    name: linReg
    ns: jmv
    menuGroup: Regression
    menuTitle: Linear Regression
    description: >
      Linear regression is used to explore the relationship between a continuous
      dependent variable, and one or more continuous and/or categorical
      explanatory variables. Other statistical methods, such as ANOVA and
      ANCOVA, are in reality just forms of linear regression.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        type: Variable
        title: Dependent Variable
        suggested:
          - continuous
        permitted:
          - numeric
        description:
          R: |
            the dependent variable from `data`, variable must be numeric
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: the covariates from `data`
      - name: factors
        title: Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: the fixed factors from `data`
      - name: blocks
        title: Blocks
        type: Array
        default:
          - []
        template:
          type: Terms
        description:
          R: >
            a list containing vectors of strings that name the predictors that
            are added to the model. The elements are added to the model
            according to their order in the list
      - name: refLevels
        title: Reference Levels
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: ref
              type: Level
        description:
          R: >
            a list of lists specifying reference levels of the dependent
            variable and all the factors
      - name: intercept
        title: Intercept
        type: List
        options:
          - refLevel
          - grandMean
        default: refLevel
        description:
          R: >
            `'refLevel'` (default) or `'grandMean'`, coding of the intercept.
            Either creates contrast so that the intercept represents the
            reference level or the grand mean
      - name: r
        title: R
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the statistical measure `R` for
            the models
      - name: r2
        title: R²
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the statistical measure
            `R-squared` for the models
      - name: r2Adj
        title: Adjusted R²
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the statistical measure
            `adjusted R-squared` for the models
      - name: aic
        title: AIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Aikaike's Information Criterion
            (AIC) for the models
      - name: bic
        title: BIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Bayesian Information Criterion
            (BIC) for the models
      - name: rmse
        title: RMSE
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide RMSE for the models
      - name: modelTest
        title: F test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the model comparison between
            the models and the NULL model
      - name: anova
        title: ANOVA test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the omnibus ANOVA test for the
            predictors
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficients
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: stdEst
        title: Standardized estimate
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a standardized estimate for the
            model coefficients
      - name: ciStdEst
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient standardized estimates
      - name: ciWidthStdEst
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: norm
        title: Normality test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), perform a Shapiro-Wilk test on the
            residuals
      - name: qqPlot
        title: Q-Q plot of residuals
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a Q-Q plot of residuals
      - name: resPlots
        title: Residual plots
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide residual plots where the
            dependent variable and each covariate is plotted against the
            standardized residuals.
      - name: durbin
        title: Autocorrelation test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide results of the Durbin- Watson
            test for autocorrelation
      - name: collin
        title: Collinearity statistics
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide VIF and tolerence collinearity
            statistics
      - name: cooks
        title: Cook's distance
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide summary statistics for the
            Cook's distance
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          R: >
            a formula containing the terms to estimate marginal means for,
            supports up to three variables per term
      - name: ciEmm
        title: Confidence interval
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide a confidence interval for the
            estimated marginal means
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
      - name: predictOV
        title: Predicted values
        type: Output
      - name: residsOV
        title: Residuals
        type: Output
      - name: cooksOV
        title: Cook's distance
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nconst events = {\n\n    update: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        calcBlocks(ui, this);\n        filterBlocks(ui, this);\n\n        calcModelTerms(ui, this);\n        updateLevelControls(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_covs: function(ui) {\n        calcBlocks(ui, this);\n    },\n\n    onChange_dep:  function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onChange_factors: function(ui) {\n        calcBlocks(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onChange_blocks: function(ui) {\n        checkForNullBlocks(ui, this);\n    },\n\n    onChange_block: function(ui) {\n        filterBlocks(ui, this);\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_refLevels: function(ui) {\n        updateLevelControls(ui, this);\n    },\n\n    onEvent_test_listItemsChanged: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        let blocks = this.cloneArray(ui.blocks.value(), []);\n        this.workspace[\"blocks\"] = blocks;\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onUpdate_modelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.covs.value(), []);\n        variableList = variableList.concat(this.cloneArray(ui.factors.value(), []));\n        ui.modelSupplier.setValue(this.valuesToItems(variableList, FormatDef.variable));\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    }\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    let variableList = [];\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex]) {\n            for (let term of blocks[blockIndex])\n                variableList = [...new Set([...variableList, ...term])];\n        }\n    }\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n    context.checkValue(ui.emMeans, 2, variableList, FormatDef.variable);\n};\n\nvar calcModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.factors.value(), []);\n\n    updateContrasts(ui, variableList, context);\n};\n\nvar updateLevelControls = function(ui, context) {\n    let dlist = ui.refLevels.value();\n    let list = ui.refLevels.applyToItems(0, (item, index, column) => {\n        if (column === 1)\n            item.setPropertyValue('variable', dlist[index].var );\n    });\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.refLevels.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], ref: null });\n        else\n            list3.push(found);\n    }\n\n    ui.refLevels.setValue(list3);\n};\n\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1)) );\n    });\n};\n\n\nlet calcBlocks = function(ui, context) {\n    let variableList = context.cloneArray(ui.covs.value(), []);\n    variableList = variableList.concat(context.cloneArray(ui.factors.value(), []));\n\n    ui.modelSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n\n    let varsDiff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    let termsList = context.cloneArray(ui.blocks.value(), []);\n\n    var termsChanged = false;\n    for (var i = 0; i < varsDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (termsList[j] === null)\n                termsList[j] = [];\n\n            for (var k = 0; k < termsList[j].length; k++) {\n                if (FormatDef.term.contains(termsList[j][k], varsDiff.removed[i])) {\n                    termsList[j].splice(k, 1);\n                    termsChanged = true;\n                    k -= 1;\n                }\n            }\n        }\n    }\n\n    let selectedRows = ui.blocks.getSelectedRowIndices();\n    if (selectedRows.length > 0) {\n        if (termsList[selectedRows[selectedRows.length - 1]] === null)\n            termsList[selectedRows[selectedRows.length - 1]]  = [];\n        for (let i = 0; i < varsDiff.added.length; i++)\n            termsList[selectedRows[selectedRows.length - 1]].push([varsDiff.added[i]]);\n        //termsList[selectedRows[selectedRows.length - 1]] = context.getCombinations(varsDiff.added, termsList[selectedRows[selectedRows.length - 1]]);\n        termsChanged = termsChanged || varsDiff.added.length > 0;\n    }\n\n\n    if (termsChanged)\n        ui.blocks.setValue(termsList);\n};\n\nlet inOtherBlock = function(blocks, value, blockIndex) {\n    for (let b = 0; b < blocks.length; b++) {\n        if (b === blockIndex)\n            continue;\n\n        let block = blocks[b];\n        for (let i = 0; i < block.length; i++) {\n            if (FormatDef.term.isEqual(block[i], value))\n                return true;\n        }\n    }\n    return false;\n};\n\nlet checkForNullBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n    }\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\nlet filterBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n\n    let prevBlocks = context.workspace[\"blocks\"];\n\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            //Remove common terms\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.removed.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.removed.length; i++) {\n                    let item = termsDiff.removed[i];\n                    for (let j = 0; j < termsList.length; j++) {\n                        if (FormatDef.term.contains(termsList[j], item)) {\n                            termsList.splice(j, 1);\n                            j -= 1;\n                            itemsRemoved = true;\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n            /////////////////////\n        }\n\n        //Sort terms\n        if (context.sortArraysByLength(termsList))\n            changed = true;\n        ////////////\n    }\n\n    //remove terms that have been added that clash with existing terms\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.added.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.added.length; i++) {\n                    let item = termsDiff.added[i];\n                    if (inOtherBlock(blocks, item, blockIndex)) {\n                        for (let j = 0; j < termsList.length; j++) {\n                            if (FormatDef.term.isEqual(termsList[j], item)) {\n                                termsList.splice(j, 1);\n                                j -= 1;\n                                itemsRemoved = true;\n                            }\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n        }\n    }\n    /////////////////////////////////////////////////////////////////\n\n\n\n    context.workspace[\"blocks\"] = blocks;\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"type\":\"Variable\",\"title\":\"Dependent Variable\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"description\":{\"R\":\"the dependent variable from `data`, variable must be numeric\\n\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"the covariates from `data`\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"the fixed factors from `data`\"}},{\"name\":\"blocks\",\"title\":\"Blocks\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Terms\"},\"description\":{\"R\":\"a list containing vectors of strings that name the predictors that are added to the model. The elements are added to the model according to their order in the list\\n\"}},{\"name\":\"refLevels\",\"title\":\"Reference Levels\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"ref\",\"type\":\"Level\"}]},\"description\":{\"R\":\"a list of lists specifying reference levels of the dependent variable and all the factors\\n\"}},{\"name\":\"intercept\",\"title\":\"Intercept\",\"type\":\"List\",\"options\":[\"refLevel\",\"grandMean\"],\"default\":\"refLevel\",\"description\":{\"R\":\"`'refLevel'` (default) or `'grandMean'`, coding of the intercept. Either creates contrast so that the intercept represents the reference level or the grand mean\\n\"}},{\"name\":\"r\",\"title\":\"R\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the statistical measure `R` for the models\\n\"}},{\"name\":\"r2\",\"title\":\"R²\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the statistical measure `R-squared` for the models\\n\"}},{\"name\":\"r2Adj\",\"title\":\"Adjusted R²\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the statistical measure `adjusted R-squared` for the models\\n\"}},{\"name\":\"aic\",\"title\":\"AIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Aikaike's Information Criterion (AIC) for the models\\n\"}},{\"name\":\"bic\",\"title\":\"BIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian Information Criterion (BIC) for the models\\n\"}},{\"name\":\"rmse\",\"title\":\"RMSE\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide RMSE for the models\\n\"}},{\"name\":\"modelTest\",\"title\":\"F test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the model comparison between the models and the NULL model\\n\"}},{\"name\":\"anova\",\"title\":\"ANOVA test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the omnibus ANOVA test for the predictors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficients\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"stdEst\",\"title\":\"Standardized estimate\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a standardized estimate for the model coefficients\\n\"}},{\"name\":\"ciStdEst\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient standardized estimates\\n\"}},{\"name\":\"ciWidthStdEst\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"norm\",\"title\":\"Normality test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), perform a Shapiro-Wilk test on the residuals\\n\"}},{\"name\":\"qqPlot\",\"title\":\"Q-Q plot of residuals\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a Q-Q plot of residuals\\n\"}},{\"name\":\"resPlots\",\"title\":\"Residual plots\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide residual plots where the dependent variable and each covariate is plotted against the standardized residuals.\\n\"}},{\"name\":\"durbin\",\"title\":\"Autocorrelation test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide results of the Durbin- Watson test for autocorrelation\\n\"}},{\"name\":\"collin\",\"title\":\"Collinearity statistics\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide VIF and tolerence collinearity statistics\\n\"}},{\"name\":\"cooks\",\"title\":\"Cook's distance\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide summary statistics for the Cook's distance\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"R\":\"a formula containing the terms to estimate marginal means for, supports up to three variables per term\\n\"}},{\"name\":\"ciEmm\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide a confidence interval for the estimated marginal means\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}},{\"name\":\"predictOV\",\"title\":\"Predicted values\",\"type\":\"Output\"},{\"name\":\"residsOV\",\"title\":\"Residuals\",\"type\":\"Output\"},{\"name\":\"cooksOV\",\"title\":\"Cook's distance\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./linreg.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Linear Regression\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_dep }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Covariates\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_covs }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Builder\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Predictors\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./linreg.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"blocks\",\n\t\t\t\t\t\t\t\t\theight: \"normal\",\n\t\t\t\t\t\t\t\t\taddButton: \"Add New Block\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_blocks },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./linreg.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./linreg.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Block 1\",\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\",\n\t\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_block }\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reference Levels\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"refLevels\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_refLevels }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: \"Variable\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ref\",\n\t\t\t\t\t\t\tlabel: \"Reference Level\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LevelSelector,\n\t\t\t\t\t\t\t\ttypeName: 'LevelSelector',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Intercept\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"intercept_refLevel\",\n\t\t\t\t\t\t\toptionName: \"intercept\",\n\t\t\t\t\t\t\toptionPart: \"refLevel\",\n\t\t\t\t\t\t\tlabel: \"Reference level (dummy coding)\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\tname: \"intercept_grandMean\",\n\t\t\t\t\t\t\toptionName: \"intercept\",\n\t\t\t\t\t\t\toptionPart: \"grandMean\",\n\t\t\t\t\t\t\tlabel: \"Grand mean (simple coding)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Assumption Checks\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"durbin\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"collin\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"norm\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"qqPlot\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"resPlots\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Data Summary\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"cooks\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"r\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"r2\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"r2Adj\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"rmse\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Overall Model Test\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Coefficients\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Omnibus Test\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"anova\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Estimate\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Standardized Estimate\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"stdEst\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciStdEst\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(stdEst)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthStdEst\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciStdEst)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./linreg.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./linreg.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./linreg.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./linreg.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciEmm\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciEmm)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"predictOV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"residsOV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"cooksOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./linreg.events\":1}]},{},[2])(2)\n});"
  - title: Binomial Logistic Regression
    name: logRegBin
    ns: jmv
    menuGroup: Regression
    menuSubgroup: Logistic Regression
    menuTitle: 2 Outcomes
    menuSubtitle: Binomial
    description: Binomial Logistic Regression
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        type: Variable
        title: Dependent Variable
        suggested:
          - nominal
        permitted:
          - factor
        description:
          R: >
            a string naming the dependent variable from `data`, variable must be
            a factor
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: a vector of strings naming the covariates from `data`
      - name: factors
        title: Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the fixed factors from `data`
      - name: blocks
        title: Blocks
        type: Array
        default:
          - []
        template:
          type: Terms
        description:
          R: >
            a list containing vectors of strings that name the predictors that
            are added to the model. The elements are added to the model
            according to their order in the list
      - name: refLevels
        title: Reference Levels
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: ref
              type: Level
        description:
          R: >
            a list of lists specifying reference levels of the dependent
            variable and all the factors
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the model comparison between
            the models and the NULL model
      - name: dev
        title: Deviance
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the deviance (or
            -2LogLikelihood) for the models
      - name: aic
        title: AIC
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion
            (AIC) for the models
      - name: bic
        title: BIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Bayesian Information Criterion
            (BIC) for the models
      - name: pseudoR2
        title: Pseudo R²
        type: NMXList
        options:
          - name: r2mf
            title: McFadden's R²
          - name: r2cs
            title: Cox & Snell's R²
          - name: r2n
            title: Nagelkerke's R²
        default:
          - r2mf
        description:
          R: >
            one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox &
            Snell, and Nagelkerke pseudo-R², respectively
      - name: omni
        title: Likelihood ratio tests
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the omnibus likelihood ratio
            tests for the predictors
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient estimates
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: OR
        title: Odds ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the exponential of the log-odds
            ratio estimate, or the odds ratio estimate
      - name: ciOR
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient odds ratio estimates
      - name: ciWidthOR
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          R: >
            a list of lists specifying the variables for which the estimated
            marginal means need to be calculate. Supports up to three variables
            per term.
      - name: ciEmm
        title: Confidence interval
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide a confidence interval for the
            estimated marginal means
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
      - name: class
        title: Classification table
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a predicted classification
            table (or confusion matrix)
      - name: acc
        title: Accuracy
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the predicted accuracy of
            outcomes grouped by the cut-off value
      - name: spec
        title: Specificity
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the predicted specificity of
            outcomes grouped by the cut-off value
      - name: sens
        title: Sensitivity
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the predicted sensitivity of
            outcomes grouped by the cut-off value
      - name: auc
        title: AUC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the rea under the ROC curve
            (AUC)
      - name: rocPlot
        title: ROC curve
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a ROC curve plot
      - name: cutOff
        title: Cut-off value
        type: Number
        min: 0
        max: 1
        default: 0.5
        description:
          R: |
            `TRUE` or `FALSE` (default), set a cut-off used for the predictions
      - name: cutOffPlot
        title: Cut-off plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a cut-off plot
      - name: collin
        title: Collinearity statistics
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide VIF and tolerence collinearity
            statistics
      - name: boxTidwell
        title: Box-Tidwell test
        type: Bool
        default: false
        hidden: true
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Box-Tidwell test for linearity
            of the logit
      - name: cooks
        title: Cook's distance
        type: Bool
        default: false
        hidden: true
        description:
          R: >
            `TRUE` or `FALSE` (default), provide summary statistics for the
            Cook's distance
      - name: predictOV
        title: Predicted values
        type: Output
      - name: residsOV
        title: Residuals
        type: Output
      - name: cooksOV
        title: Cook's distance
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nconst events = {\n\n    update: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        calcBlocks(ui, this);\n        filterBlocks(ui, this);\n\n        calcModelTerms(ui, this);\n        updateLevelControls(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_covs: function(ui) {\n        calcBlocks(ui, this);\n    },\n\n    onChange_dep:  function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onUpdate_modelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.covs.value(), []);\n        variableList = variableList.concat(this.cloneArray(ui.factors.value(), []));\n        ui.modelSupplier.setValue(this.valuesToItems(variableList, FormatDef.variable));\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    onChange_factors: function(ui) {\n        calcBlocks(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onChange_blocks: function(ui) {\n        checkForNullBlocks(ui, this);\n    },\n\n    onChange_block: function(ui) {\n        filterBlocks(ui, this);\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_refLevels: function(ui) {\n        updateLevelControls(ui, this);\n    },\n\n    onEvent_test_listItemsChanged: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        let blocks = this.cloneArray(ui.blocks.value(), []);\n        this.workspace[\"blocks\"] = blocks;\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    }\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    let variableList = [];\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        for (let term of blocks[blockIndex])\n            variableList = [...new Set([...variableList, ...term])];\n    }\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n};\n\nvar calcModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.factors.value(), []);\n    let depVar = ui.dep.value();\n    if (depVar)\n        variableList.unshift(depVar);\n\n    updateContrasts(ui, variableList, context);\n};\n\nvar updateLevelControls = function(ui, context) {\n    let dlist = ui.refLevels.value();\n    let list = ui.refLevels.applyToItems(0, (item, index, column) => {\n        if (column === 1)\n            item.setPropertyValue('variable', dlist[index].var );\n    });\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.refLevels.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], ref: null });\n        else\n            list3.push(found);\n    }\n\n    ui.refLevels.setValue(list3);\n};\n\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1) ));\n    });\n};\n\n\nlet calcBlocks = function(ui, context) {\n    let variableList = context.cloneArray(ui.covs.value(), []);\n    variableList = variableList.concat(context.cloneArray(ui.factors.value(), []));\n\n    ui.modelSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n\n    let varsDiff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    let termsList = context.cloneArray(ui.blocks.value(), []);\n\n    var termsChanged = false;\n    for (var i = 0; i < varsDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (termsList[j] === null)\n                termsList[j] = [];\n\n            for (var k = 0; k < termsList[j].length; k++) {\n                if (FormatDef.term.contains(termsList[j][k], varsDiff.removed[i])) {\n                    termsList[j].splice(k, 1);\n                    termsChanged = true;\n                    k -= 1;\n                }\n            }\n        }\n    }\n\n    let selectedRows = ui.blocks.getSelectedRowIndices();\n    if (selectedRows.length > 0) {\n        if (termsList[selectedRows[selectedRows.length - 1]] === null)\n            termsList[selectedRows[selectedRows.length - 1]]  = [];\n        for (let i = 0; i < varsDiff.added.length; i++)\n            termsList[selectedRows[selectedRows.length - 1]].push([varsDiff.added[i]]);\n        //termsList[selectedRows[selectedRows.length - 1]] = context.getCombinations(varsDiff.added, termsList[selectedRows[selectedRows.length - 1]]);\n        termsChanged = termsChanged || varsDiff.added.length > 0;\n    }\n\n\n    if (termsChanged)\n        ui.blocks.setValue(termsList);\n};\n\nlet inOtherBlock = function(blocks, value, blockIndex) {\n    for (let b = 0; b < blocks.length; b++) {\n        if (b === blockIndex)\n            continue;\n\n        let block = blocks[b];\n        for (let i = 0; i < block.length; i++) {\n            if (FormatDef.term.isEqual(block[i], value))\n                return true;\n        }\n    }\n    return false;\n};\n\nlet checkForNullBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n    }\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\nlet filterBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n\n    let prevBlocks = context.workspace[\"blocks\"];\n\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            //Remove common terms\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.removed.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.removed.length; i++) {\n                    let item = termsDiff.removed[i];\n                    for (let j = 0; j < termsList.length; j++) {\n                        if (FormatDef.term.contains(termsList[j], item)) {\n                            termsList.splice(j, 1);\n                            j -= 1;\n                            itemsRemoved = true;\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n            /////////////////////\n        }\n\n        //Sort terms\n        if (context.sortArraysByLength(termsList))\n            changed = true;\n        ////////////\n    }\n\n    //remove terms that have been added that clash with existing terms\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.added.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.added.length; i++) {\n                    let item = termsDiff.added[i];\n                    if (inOtherBlock(blocks, item, blockIndex)) {\n                        for (let j = 0; j < termsList.length; j++) {\n                            if (FormatDef.term.isEqual(termsList[j], item)) {\n                                termsList.splice(j, 1);\n                                j -= 1;\n                                itemsRemoved = true;\n                            }\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n        }\n    }\n    /////////////////////////////////////////////////////////////////\n\n\n\n    context.workspace[\"blocks\"] = blocks;\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"type\":\"Variable\",\"title\":\"Dependent Variable\",\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"a string naming the dependent variable from `data`, variable must be a factor\\n\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the covariates from `data`\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the fixed factors from `data`\"}},{\"name\":\"blocks\",\"title\":\"Blocks\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Terms\"},\"description\":{\"R\":\"a list containing vectors of strings that name the predictors that are added to the model. The elements are added to the model according to their order in the list\\n\"}},{\"name\":\"refLevels\",\"title\":\"Reference Levels\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"ref\",\"type\":\"Level\"}]},\"description\":{\"R\":\"a list of lists specifying reference levels of the dependent variable and all the factors\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the model comparison between the models and the NULL model\\n\"}},{\"name\":\"dev\",\"title\":\"Deviance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the deviance (or -2LogLikelihood) for the models\\n\"}},{\"name\":\"aic\",\"title\":\"AIC\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion (AIC) for the models\\n\"}},{\"name\":\"bic\",\"title\":\"BIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian Information Criterion (BIC) for the models\\n\"}},{\"name\":\"pseudoR2\",\"title\":\"Pseudo R²\",\"type\":\"NMXList\",\"options\":[{\"name\":\"r2mf\",\"title\":\"McFadden's R²\"},{\"name\":\"r2cs\",\"title\":\"Cox & Snell's R²\"},{\"name\":\"r2n\",\"title\":\"Nagelkerke's R²\"}],\"default\":[\"r2mf\"],\"description\":{\"R\":\"one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox & Snell, and Nagelkerke pseudo-R², respectively\\n\"}},{\"name\":\"omni\",\"title\":\"Likelihood ratio tests\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the omnibus likelihood ratio tests for the predictors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient estimates\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"OR\",\"title\":\"Odds ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the exponential of the log-odds ratio estimate, or the odds ratio estimate\\n\"}},{\"name\":\"ciOR\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient odds ratio estimates\\n\"}},{\"name\":\"ciWidthOR\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"R\":\"a list of lists specifying the variables for which the estimated marginal means need to be calculate. Supports up to three variables per term.\\n\"}},{\"name\":\"ciEmm\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide a confidence interval for the estimated marginal means\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}},{\"name\":\"class\",\"title\":\"Classification table\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a predicted classification table (or confusion matrix)\\n\"}},{\"name\":\"acc\",\"title\":\"Accuracy\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the predicted accuracy of outcomes grouped by the cut-off value\\n\"}},{\"name\":\"spec\",\"title\":\"Specificity\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the predicted specificity of outcomes grouped by the cut-off value\\n\"}},{\"name\":\"sens\",\"title\":\"Sensitivity\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the predicted sensitivity of outcomes grouped by the cut-off value\\n\"}},{\"name\":\"auc\",\"title\":\"AUC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the rea under the ROC curve (AUC)\\n\"}},{\"name\":\"rocPlot\",\"title\":\"ROC curve\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a ROC curve plot\\n\"}},{\"name\":\"cutOff\",\"title\":\"Cut-off value\",\"type\":\"Number\",\"min\":0,\"max\":1,\"default\":0.5,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), set a cut-off used for the predictions\\n\"}},{\"name\":\"cutOffPlot\",\"title\":\"Cut-off plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a cut-off plot\\n\"}},{\"name\":\"collin\",\"title\":\"Collinearity statistics\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide VIF and tolerence collinearity statistics\\n\"}},{\"name\":\"boxTidwell\",\"title\":\"Box-Tidwell test\",\"type\":\"Bool\",\"default\":false,\"hidden\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Box-Tidwell test for linearity of the logit\\n\"}},{\"name\":\"cooks\",\"title\":\"Cook's distance\",\"type\":\"Bool\",\"default\":false,\"hidden\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide summary statistics for the Cook's distance\\n\"}},{\"name\":\"predictOV\",\"title\":\"Predicted values\",\"type\":\"Output\"},{\"name\":\"residsOV\",\"title\":\"Residuals\",\"type\":\"Output\"},{\"name\":\"cooksOV\",\"title\":\"Cook's distance\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./logregbin.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Binomial Logistic Regression\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_dep }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Covariates\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_covs }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Builder\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Predictors\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./logregbin.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"blocks\",\n\t\t\t\t\t\t\t\t\theight: \"normal\",\n\t\t\t\t\t\t\t\t\taddButton: \"Add New Block\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_blocks },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./logregbin.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./logregbin.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Block 1\",\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\",\n\t\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_block }\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reference Levels\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"refLevels\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_refLevels }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: \"Variable\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ref\",\n\t\t\t\t\t\t\tlabel: \"Reference Level\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LevelSelector,\n\t\t\t\t\t\t\t\ttypeName: 'LevelSelector',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Assumption Checks\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"collin\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dev\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Pseudo R²\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2mf\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2mf\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2cs\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2cs\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2n\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2n\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tname: \"pseudoR2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Coefficients\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Omnibus Tests\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"omni\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Estimate (Log Odds Ratio)\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Odds Ratio\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"OR\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciOR\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(OR)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthOR\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciOR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./logregbin.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./logregbin.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./logregbin.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciEmm\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciEmm)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Prediction\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Cut-Off\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"cutOffPlot\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"cutOff\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Predictive Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"class\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"acc\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"spec\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"sens\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":2,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"ROC\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"rocPlot\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"auc\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"predictOV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"residsOV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"cooksOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./logregbin.events\":1}]},{},[2])(2)\n});"
  - title: Multinomial Logistic Regression
    name: logRegMulti
    ns: jmv
    menuGroup: Regression
    menuSubgroup: Logistic Regression
    menuTitle: N Outcomes
    menuSubtitle: Multinomial
    description: Multinomial Logistic Regression
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        type: Variable
        title: Dependent Variable
        suggested:
          - nominal
        permitted:
          - factor
        description:
          R: >
            a string naming the dependent variable from `data`, variable must be
            a factor
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: a vector of strings naming the covariates from `data`
      - name: factors
        title: Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the fixed factors from `data`
      - name: blocks
        title: Blocks
        type: Array
        default:
          - []
        template:
          type: Terms
        description:
          R: >
            a list containing vectors of strings that name the predictors that
            are added to the model. The elements are added to the model
            according to their order in the list
      - name: refLevels
        title: Reference Levels
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: ref
              type: Level
        description:
          R: >
            a list of lists specifying reference levels of the dependent
            variable and all the factors
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the model comparison between
            the models and the NULL model
      - name: dev
        title: Deviance
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the deviance (or
            -2LogLikelihood) for the models
      - name: aic
        title: AIC
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion
            (AIC) for the models
      - name: bic
        title: BIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Bayesian Information Criterion
            (BIC) for the models
      - name: pseudoR2
        title: Pseudo R²
        type: NMXList
        options:
          - name: r2mf
            title: McFadden's R²
          - name: r2cs
            title: Cox & Snell's R²
          - name: r2n
            title: Nagelkerke's R²
        default:
          - r2mf
        description:
          R: >
            one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox &
            Snell, and Nagelkerke pseudo-R², respectively
      - name: omni
        title: Likelihood ratio tests
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the omnibus likelihood ratio
            tests for the predictors
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient estimates
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: OR
        title: Odds ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the exponential of the log-odds
            ratio estimate, or the odds ratio estimate
      - name: ciOR
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient odds ratio estimates
      - name: ciWidthOR
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          R: >
            a list of lists specifying the variables for which the estimated
            marginal means need to be calculate. Supports up to three variables
            per term.
      - name: ciEmm
        title: Confidence interval
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide a confidence interval for the
            estimated marginal means
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nconst events = {\n\n    update: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        calcBlocks(ui, this);\n        filterBlocks(ui, this);\n\n        calcModelTerms(ui, this);\n        updateLevelControls(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_covs: function(ui) {\n        calcBlocks(ui, this);\n    },\n\n    onChange_dep:  function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onUpdate_modelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.covs.value(), []);\n        variableList = variableList.concat(this.cloneArray(ui.factors.value(), []));\n        ui.modelSupplier.setValue(this.valuesToItems(variableList, FormatDef.variable));\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    onChange_factors: function(ui) {\n        calcBlocks(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onChange_blocks: function(ui) {\n        checkForNullBlocks(ui, this);\n    },\n\n    onChange_block: function(ui) {\n        filterBlocks(ui, this);\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_refLevels: function(ui) {\n        updateLevelControls(ui, this);\n    },\n\n    onEvent_test_listItemsChanged: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        let blocks = this.cloneArray(ui.blocks.value(), []);\n        this.workspace[\"blocks\"] = blocks;\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    }\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    let variableList = [];\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        for (let term of blocks[blockIndex])\n            variableList = [...new Set([...variableList, ...term])];\n    }\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n};\n\nvar calcModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.factors.value(), []);\n    let depVar = ui.dep.value();\n    if (depVar)\n        variableList.unshift(depVar);\n\n    updateContrasts(ui, variableList, context);\n};\n\nvar updateLevelControls = function(ui, context) {\n    let dlist = ui.refLevels.value();\n    let list = ui.refLevels.applyToItems(0, (item, index, column) => {\n        if (column === 1)\n            item.setPropertyValue('variable', dlist[index].var );\n    });\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.refLevels.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], ref: null });\n        else\n            list3.push(found);\n    }\n\n    ui.refLevels.setValue(list3);\n};\n\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1) ));\n    });\n};\n\n\nlet calcBlocks = function(ui, context) {\n    let variableList = context.cloneArray(ui.covs.value(), []);\n    variableList = variableList.concat(context.cloneArray(ui.factors.value(), []));\n\n    ui.modelSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n\n    let varsDiff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    let termsList = context.cloneArray(ui.blocks.value(), []);\n\n    var termsChanged = false;\n    for (var i = 0; i < varsDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (termsList[j] === null)\n                termsList[j] = [];\n\n            for (var k = 0; k < termsList[j].length; k++) {\n                if (FormatDef.term.contains(termsList[j][k], varsDiff.removed[i])) {\n                    termsList[j].splice(k, 1);\n                    termsChanged = true;\n                    k -= 1;\n                }\n            }\n        }\n    }\n\n    let selectedRows = ui.blocks.getSelectedRowIndices();\n    if (selectedRows.length > 0) {\n        if (termsList[selectedRows[selectedRows.length - 1]] === null)\n            termsList[selectedRows[selectedRows.length - 1]]  = [];\n        for (let i = 0; i < varsDiff.added.length; i++)\n            termsList[selectedRows[selectedRows.length - 1]].push([varsDiff.added[i]]);\n        //termsList[selectedRows[selectedRows.length - 1]] = context.getCombinations(varsDiff.added, termsList[selectedRows[selectedRows.length - 1]]);\n        termsChanged = termsChanged || varsDiff.added.length > 0;\n    }\n\n\n    if (termsChanged)\n        ui.blocks.setValue(termsList);\n};\n\nlet inOtherBlock = function(blocks, value, blockIndex) {\n    for (let b = 0; b < blocks.length; b++) {\n        if (b === blockIndex)\n            continue;\n\n        let block = blocks[b];\n        for (let i = 0; i < block.length; i++) {\n            if (FormatDef.term.isEqual(block[i], value))\n                return true;\n        }\n    }\n    return false;\n};\n\nlet checkForNullBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n    }\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\nlet filterBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n\n    let prevBlocks = context.workspace[\"blocks\"];\n\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            //Remove common terms\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.removed.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.removed.length; i++) {\n                    let item = termsDiff.removed[i];\n                    for (let j = 0; j < termsList.length; j++) {\n                        if (FormatDef.term.contains(termsList[j], item)) {\n                            termsList.splice(j, 1);\n                            j -= 1;\n                            itemsRemoved = true;\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n            /////////////////////\n        }\n\n        //Sort terms\n        if (context.sortArraysByLength(termsList))\n            changed = true;\n        ////////////\n    }\n\n    //remove terms that have been added that clash with existing terms\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.added.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.added.length; i++) {\n                    let item = termsDiff.added[i];\n                    if (inOtherBlock(blocks, item, blockIndex)) {\n                        for (let j = 0; j < termsList.length; j++) {\n                            if (FormatDef.term.isEqual(termsList[j], item)) {\n                                termsList.splice(j, 1);\n                                j -= 1;\n                                itemsRemoved = true;\n                            }\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n        }\n    }\n    /////////////////////////////////////////////////////////////////\n\n\n\n    context.workspace[\"blocks\"] = blocks;\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"type\":\"Variable\",\"title\":\"Dependent Variable\",\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"a string naming the dependent variable from `data`, variable must be a factor\\n\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the covariates from `data`\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the fixed factors from `data`\"}},{\"name\":\"blocks\",\"title\":\"Blocks\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Terms\"},\"description\":{\"R\":\"a list containing vectors of strings that name the predictors that are added to the model. The elements are added to the model according to their order in the list\\n\"}},{\"name\":\"refLevels\",\"title\":\"Reference Levels\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"ref\",\"type\":\"Level\"}]},\"description\":{\"R\":\"a list of lists specifying reference levels of the dependent variable and all the factors\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the model comparison between the models and the NULL model\\n\"}},{\"name\":\"dev\",\"title\":\"Deviance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the deviance (or -2LogLikelihood) for the models\\n\"}},{\"name\":\"aic\",\"title\":\"AIC\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion (AIC) for the models\\n\"}},{\"name\":\"bic\",\"title\":\"BIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian Information Criterion (BIC) for the models\\n\"}},{\"name\":\"pseudoR2\",\"title\":\"Pseudo R²\",\"type\":\"NMXList\",\"options\":[{\"name\":\"r2mf\",\"title\":\"McFadden's R²\"},{\"name\":\"r2cs\",\"title\":\"Cox & Snell's R²\"},{\"name\":\"r2n\",\"title\":\"Nagelkerke's R²\"}],\"default\":[\"r2mf\"],\"description\":{\"R\":\"one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox & Snell, and Nagelkerke pseudo-R², respectively\\n\"}},{\"name\":\"omni\",\"title\":\"Likelihood ratio tests\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the omnibus likelihood ratio tests for the predictors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient estimates\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"OR\",\"title\":\"Odds ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the exponential of the log-odds ratio estimate, or the odds ratio estimate\\n\"}},{\"name\":\"ciOR\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient odds ratio estimates\\n\"}},{\"name\":\"ciWidthOR\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"R\":\"a list of lists specifying the variables for which the estimated marginal means need to be calculate. Supports up to three variables per term.\\n\"}},{\"name\":\"ciEmm\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide a confidence interval for the estimated marginal means\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./logregbin.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Multinomial Logistic Regression\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_dep }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Covariates\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_covs }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Builder\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Predictors\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./logregbin.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"blocks\",\n\t\t\t\t\t\t\t\t\theight: \"normal\",\n\t\t\t\t\t\t\t\t\taddButton: \"Add New Block\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_blocks },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./logregbin.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./logregbin.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Block 1\",\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\",\n\t\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_block }\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reference Levels\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"refLevels\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_refLevels }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: \"Variable\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ref\",\n\t\t\t\t\t\t\tlabel: \"Reference Level\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LevelSelector,\n\t\t\t\t\t\t\t\ttypeName: 'LevelSelector',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dev\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Pseudo R²\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2mf\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2mf\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2cs\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2cs\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2n\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2n\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tname: \"pseudoR2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Coefficients\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Omnibus Tests\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"omni\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Estimate (Log Odds Ratio)\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Odds Ratio\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"OR\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciOR\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(OR)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthOR\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciOR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregbin.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./logregbin.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./logregbin.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./logregbin.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciEmm\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciEmm)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./logregbin.events\":1}]},{},[2])(2)\n});"
  - title: Ordinal Logistic Regression
    name: logRegOrd
    ns: jmv
    menuGroup: Regression
    menuSubgroup: Logistic Regression
    menuTitle: Ordinal Outcomes
    description: Ordinal Logistic Regression
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: dep
        type: Variable
        title: Dependent Variable
        suggested:
          - ordinal
        permitted:
          - factor
        description:
          R: >
            a string naming the dependent variable from `data`, variable must be
            a factor
      - name: covs
        title: Covariates
        type: Variables
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: a vector of strings naming the covariates from `data`
      - name: factors
        title: Factors
        type: Variables
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the fixed factors from `data`
      - name: blocks
        title: Blocks
        type: Array
        default:
          - []
        template:
          type: Terms
        description:
          R: >
            a list containing vectors of strings that name the predictors that
            are added to the model. The elements are added to the model
            according to their order in the list
      - name: refLevels
        title: Reference Levels
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: ref
              type: Level
        description:
          R: >
            a list of lists specifying reference levels of the dependent
            variable and all the factors
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the model comparison between
            the models and the NULL model
      - name: dev
        title: Deviance
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the deviance (or
            -2LogLikelihood) for the models
      - name: aic
        title: AIC
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion
            (AIC) for the models
      - name: bic
        title: BIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Bayesian Information Criterion
            (BIC) for the models
      - name: pseudoR2
        title: Pseudo R²
        type: NMXList
        options:
          - name: r2mf
            title: McFadden's R²
          - name: r2cs
            title: Cox & Snell's R²
          - name: r2n
            title: Nagelkerke's R²
        default:
          - r2mf
        description:
          R: >
            one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox &
            Snell, and Nagelkerke pseudo-R², respectively
      - name: omni
        title: Likelihood ratio tests
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the omnibus likelihood ratio
            tests for the predictors
      - name: thres
        title: Model thresholds
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the thresholds that are used as
            cut-off scores for the levels of the dependent variable
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient estimates
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: OR
        title: Odds ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the exponential of the log-odds
            ratio estimate, or the odds ratio estimate
      - name: ciOR
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient odds ratio estimates
      - name: ciWidthOR
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nconst events = {\r\n\r\n    update: function(ui) {\r\n        updateModelLabels(ui.blocks, _('Block {0}'));\r\n        calcBlocks(ui, this);\r\n        filterBlocks(ui, this);\r\n\r\n        calcModelTerms(ui, this);\r\n        updateLevelControls(ui, this);\r\n    },\r\n\r\n    onChange_covs: function(ui) {\r\n        calcBlocks(ui, this);\r\n    },\r\n\r\n    onChange_dep:  function(ui) {\r\n        calcModelTerms(ui, this);\r\n    },\r\n\r\n    onChange_factors: function(ui) {\r\n        calcBlocks(ui, this);\r\n        calcModelTerms(ui, this);\r\n    },\r\n\r\n    onChange_blocks: function(ui) {\r\n        checkForNullBlocks(ui, this);\r\n    },\r\n\r\n    onChange_block: function(ui) {\r\n        filterBlocks(ui, this);\r\n    },\r\n\r\n    onChange_refLevels: function(ui) {\r\n        updateLevelControls(ui, this);\r\n    },\r\n\r\n    onEvent_test_listItemsChanged: function(ui) {\r\n        updateModelLabels(ui.blocks, _('Block {0}'));\r\n        let blocks = this.cloneArray(ui.blocks.value(), []);\r\n        this.workspace[\"blocks\"] = blocks;\r\n    },\r\n\r\n    onUpdate_modelSupplier: function(ui) {\r\n        let variableList = this.cloneArray(ui.covs.value(), []);\r\n        variableList = variableList.concat(this.cloneArray(ui.factors.value(), []));\r\n        ui.modelSupplier.setValue(this.valuesToItems(variableList, FormatDef.variable));\r\n    }\r\n};\r\n\r\nvar calcModelTerms = function(ui, context) {\r\n    var variableList = context.cloneArray(ui.factors.value(), []);\r\n\r\n    updateContrasts(ui, variableList, context);\r\n};\r\n\r\nvar updateLevelControls = function(ui, context) {\r\n    let dlist = ui.refLevels.value();\r\n    let list = ui.refLevels.applyToItems(0, (item, index, column) => {\r\n        if (column === 1)\r\n            item.setPropertyValue('variable', dlist[index].var );\r\n    });\r\n};\r\n\r\nvar updateContrasts = function(ui, variableList, context) {\r\n    var currentList = context.cloneArray(ui.refLevels.value(), []);\r\n\r\n    var list3 = [];\r\n    for (let i = 0; i < variableList.length; i++) {\r\n        let found = null;\r\n        for (let j = 0; j < currentList.length; j++) {\r\n            if (currentList[j].var === variableList[i]) {\r\n                found = currentList[j];\r\n                break;\r\n            }\r\n        }\r\n        if (found === null)\r\n            list3.push({ var: variableList[i], ref: null });\r\n        else\r\n            list3.push(found);\r\n    }\r\n\r\n    ui.refLevels.setValue(list3);\r\n};\r\n\r\n\r\nlet updateModelLabels = function(list, blockName) {\r\n    list.applyToItems(0, (item, index) => {\r\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1) ));\r\n    });\r\n};\r\n\r\n\r\nlet calcBlocks = function(ui, context) {\r\n    let variableList = context.cloneArray(ui.covs.value(), []);\r\n    variableList = variableList.concat(context.cloneArray(ui.factors.value(), []));\r\n\r\n    ui.modelSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\r\n\r\n\r\n    let varsDiff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\r\n    let termsList = context.cloneArray(ui.blocks.value(), []);\r\n\r\n    var termsChanged = false;\r\n    for (var i = 0; i < varsDiff.removed.length; i++) {\r\n        for (var j = 0; j < termsList.length; j++) {\r\n            if (termsList[j] === null)\r\n                termsList[j] = [];\r\n\r\n            for (var k = 0; k < termsList[j].length; k++) {\r\n                if (FormatDef.term.contains(termsList[j][k], varsDiff.removed[i])) {\r\n                    termsList[j].splice(k, 1);\r\n                    termsChanged = true;\r\n                    k -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let selectedRows = ui.blocks.getSelectedRowIndices();\r\n    if (selectedRows.length > 0) {\r\n        if (termsList[selectedRows[selectedRows.length - 1]] === null)\r\n            termsList[selectedRows[selectedRows.length - 1]]  = [];\r\n        for (let i = 0; i < varsDiff.added.length; i++)\r\n            termsList[selectedRows[selectedRows.length - 1]].push([varsDiff.added[i]]);\r\n        //termsList[selectedRows[selectedRows.length - 1]] = context.getCombinations(varsDiff.added, termsList[selectedRows[selectedRows.length - 1]]);\r\n        termsChanged = termsChanged || varsDiff.added.length > 0;\r\n    }\r\n\r\n\r\n    if (termsChanged)\r\n        ui.blocks.setValue(termsList);\r\n};\r\n\r\nlet inOtherBlock = function(blocks, value, blockIndex) {\r\n    for (let b = 0; b < blocks.length; b++) {\r\n        if (b === blockIndex)\r\n            continue;\r\n\r\n        let block = blocks[b];\r\n        for (let i = 0; i < block.length; i++) {\r\n            if (FormatDef.term.isEqual(block[i], value))\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nlet checkForNullBlocks = function(ui, context) {\r\n    let changed = false;\r\n    let blocks = context.cloneArray(ui.blocks.value(), []);\r\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\r\n        if (blocks[blockIndex] === null) {\r\n            changed = true;\r\n            blocks[blockIndex] = [];\r\n        }\r\n    }\r\n\r\n    if (changed)\r\n        ui.blocks.setValue(blocks);\r\n};\r\n\r\nlet filterBlocks = function(ui, context) {\r\n    let changed = false;\r\n    let blocks = context.cloneArray(ui.blocks.value(), []);\r\n\r\n    let prevBlocks = context.workspace[\"blocks\"];\r\n\r\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\r\n        if (blocks[blockIndex] === null) {\r\n            changed = true;\r\n            blocks[blockIndex] = [];\r\n        }\r\n\r\n        let termsList = blocks[blockIndex];\r\n\r\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\r\n            //Remove common terms\r\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\r\n\r\n            if (termsDiff.removed.length > 0 && termsList !== null) {\r\n                let itemsRemoved = false;\r\n                for (let i = 0; i < termsDiff.removed.length; i++) {\r\n                    let item = termsDiff.removed[i];\r\n                    for (let j = 0; j < termsList.length; j++) {\r\n                        if (FormatDef.term.contains(termsList[j], item)) {\r\n                            termsList.splice(j, 1);\r\n                            j -= 1;\r\n                            itemsRemoved = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (itemsRemoved)\r\n                    changed = true;\r\n            }\r\n            /////////////////////\r\n        }\r\n\r\n        //Sort terms\r\n        if (context.sortArraysByLength(termsList))\r\n            changed = true;\r\n        ////////////\r\n    }\r\n\r\n    //remove terms that have been added that clash with existing terms\r\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\r\n        let termsList = blocks[blockIndex];\r\n\r\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\r\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\r\n\r\n            if (termsDiff.added.length > 0 && termsList !== null) {\r\n                let itemsRemoved = false;\r\n                for (let i = 0; i < termsDiff.added.length; i++) {\r\n                    let item = termsDiff.added[i];\r\n                    if (inOtherBlock(blocks, item, blockIndex)) {\r\n                        for (let j = 0; j < termsList.length; j++) {\r\n                            if (FormatDef.term.isEqual(termsList[j], item)) {\r\n                                termsList.splice(j, 1);\r\n                                j -= 1;\r\n                                itemsRemoved = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (itemsRemoved)\r\n                    changed = true;\r\n            }\r\n        }\r\n    }\r\n    /////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    context.workspace[\"blocks\"] = blocks;\r\n\r\n    if (changed)\r\n        ui.blocks.setValue(blocks);\r\n};\r\n\r\n\r\nmodule.exports = events;\r\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"dep\",\"type\":\"Variable\",\"title\":\"Dependent Variable\",\"suggested\":[\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"a string naming the dependent variable from `data`, variable must be a factor\\n\"}},{\"name\":\"covs\",\"title\":\"Covariates\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the covariates from `data`\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the fixed factors from `data`\"}},{\"name\":\"blocks\",\"title\":\"Blocks\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Terms\"},\"description\":{\"R\":\"a list containing vectors of strings that name the predictors that are added to the model. The elements are added to the model according to their order in the list\\n\"}},{\"name\":\"refLevels\",\"title\":\"Reference Levels\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"ref\",\"type\":\"Level\"}]},\"description\":{\"R\":\"a list of lists specifying reference levels of the dependent variable and all the factors\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the model comparison between the models and the NULL model\\n\"}},{\"name\":\"dev\",\"title\":\"Deviance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the deviance (or -2LogLikelihood) for the models\\n\"}},{\"name\":\"aic\",\"title\":\"AIC\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion (AIC) for the models\\n\"}},{\"name\":\"bic\",\"title\":\"BIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian Information Criterion (BIC) for the models\\n\"}},{\"name\":\"pseudoR2\",\"title\":\"Pseudo R²\",\"type\":\"NMXList\",\"options\":[{\"name\":\"r2mf\",\"title\":\"McFadden's R²\"},{\"name\":\"r2cs\",\"title\":\"Cox & Snell's R²\"},{\"name\":\"r2n\",\"title\":\"Nagelkerke's R²\"}],\"default\":[\"r2mf\"],\"description\":{\"R\":\"one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox & Snell, and Nagelkerke pseudo-R², respectively\\n\"}},{\"name\":\"omni\",\"title\":\"Likelihood ratio tests\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the omnibus likelihood ratio tests for the predictors\\n\"}},{\"name\":\"thres\",\"title\":\"Model thresholds\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the thresholds that are used as cut-off scores for the levels of the dependent variable\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient estimates\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"OR\",\"title\":\"Odds ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the exponential of the log-odds ratio estimate, or the odds ratio estimate\\n\"}},{\"name\":\"ciOR\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient odds ratio estimates\\n\"}},{\"name\":\"ciWidthOR\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./logregord.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Ordinal Logistic Regression\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"dep\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_dep }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Covariates\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"covs\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_covs }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Builder\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Predictors\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./logregord.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"blocks\",\n\t\t\t\t\t\t\t\t\theight: \"normal\",\n\t\t\t\t\t\t\t\t\taddButton: \"Add New Block\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_blocks },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./logregord.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./logregord.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Block 1\",\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\",\n\t\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_block }\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reference Levels\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"refLevels\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./logregord.events').onChange_refLevels }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: \"Variable\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ref\",\n\t\t\t\t\t\t\tlabel: \"Reference Level\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LevelSelector,\n\t\t\t\t\t\t\t\ttypeName: 'LevelSelector',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dev\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Pseudo R²\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2mf\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2mf\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2cs\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2cs\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2n\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2n\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tname: \"pseudoR2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Coefficients\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Omnibus Tests\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"omni\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Thresholds\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"thres\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Estimate (Log Odds Ratio)\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Odds Ratio\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"OR\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciOR\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(OR)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthOR\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciOR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./logregord.events\":1}]},{},[2])(2)\n});"
  - title: Proportion Test (2 Outcomes)
    name: propTest2
    ns: jmv
    menuGroup: Frequencies
    menuSubgroup: One Sample Proportion Tests
    menuTitle: 2 Outcomes
    menuSubtitle: Binomial test
    description: >
      The Binomial test is used to test the Null hypothesis that the proportion
      of observations match some expected value. If the p-value is low, this
      suggests that the Null hypothesis is false, and that the true proportion
      must be some other value.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: a vector of strings naming the variables of interest in `data`
      - name: areCounts
        title: Values are counts
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), the variables are counts
      - name: testValue
        title: Test value
        type: Number
        default: 0.5
        description:
          R: |
            a number (default: 0.5), the value for the null hypothesis
      - name: hypothesis
        title: Hypothesis
        type: List
        options:
          - notequal
          - greater
          - less
        default: notequal
        description:
          R: >
            `'notequal'` (default), `'greater'` or `'less'`, the alternative
            hypothesis
      - name: ci
        title: Confidence intervals
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide confidence intervals
      - name: ciWidth
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95), the confidence interval
            width
      - name: bf
        title: Bayes factor
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Bayes factors
      - name: priorA
        title: beta 'a' parameter
        type: Number
        min: 0.01
        default: 1
        description:
          R: |
            a number (default: 1), the beta prior 'a' parameter
      - name: priorB
        title: beta 'b' parameter
        type: Number
        min: 0.01
        default: 1
        description:
          R: |
            a number (default: 1), the beta prior 'b' parameter
      - name: ciBayes
        title: Credible intervals
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Bayesian credible intervals
      - name: ciBayesWidth
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95), the credible interval
            width
      - name: postPlots
        title: Posterior plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide posterior plots
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"a vector of strings naming the variables of interest in `data`\"}},{\"name\":\"areCounts\",\"title\":\"Values are counts\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), the variables are counts\\n\"}},{\"name\":\"testValue\",\"title\":\"Test value\",\"type\":\"Number\",\"default\":0.5,\"description\":{\"R\":\"a number (default: 0.5), the value for the null hypothesis\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Hypothesis\",\"type\":\"List\",\"options\":[\"notequal\",\"greater\",\"less\"],\"default\":\"notequal\",\"description\":{\"R\":\"`'notequal'` (default), `'greater'` or `'less'`, the alternative hypothesis\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence intervals\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals\\n\"}},{\"name\":\"ciWidth\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95), the confidence interval width\\n\"}},{\"name\":\"bf\",\"title\":\"Bayes factor\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayes factors\\n\"}},{\"name\":\"priorA\",\"title\":\"beta 'a' parameter\",\"type\":\"Number\",\"min\":0.01,\"default\":1,\"description\":{\"R\":\"a number (default: 1), the beta prior 'a' parameter\\n\"}},{\"name\":\"priorB\",\"title\":\"beta 'b' parameter\",\"type\":\"Number\",\"min\":0.01,\"default\":1,\"description\":{\"R\":\"a number (default: 1), the beta prior 'b' parameter\\n\"}},{\"name\":\"ciBayes\",\"title\":\"Credible intervals\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian credible intervals\\n\"}},{\"name\":\"ciBayesWidth\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95), the credible interval width\\n\"}},{\"name\":\"postPlots\",\"title\":\"Posterior plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide posterior plots\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Proportion Test (2 Outcomes)\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\",\"nominal\",\"ordinal\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"areCounts\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"testValue\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_notequal\",\n\t\t\t\t\t\t\t\t\tlabel: \"≠ Test value\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"notequal\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_greater\",\n\t\t\t\t\t\t\t\t\tlabel: \"> Test value\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"greater\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"hypothesis_less\",\n\t\t\t\t\t\t\t\t\tlabel: \"< Test value\",\n\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\toptionPart: \"less\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Bayesian Statistics\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Prior\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tname: \"priorA\",\n\t\t\t\t\t\t\t\t\tlabel: \"a parameter\",\n\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tname: \"priorB\",\n\t\t\t\t\t\t\t\t\tlabel: \"b parameter\",\n\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Plots\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"postPlots\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"bf\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"ciBayes\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciBayesWidth\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciBayes)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Proportion Test (N Outcomes)
    name: propTestN
    ns: jmv
    menuGroup: Frequencies
    menuSubgroup: One Sample Proportion Tests
    menuTitle: N Outcomes
    menuSubtitle: χ² Goodness of fit
    description: >
      The χ² Goodness of fit test (not to be confused with the χ² test of
      independence), tests the Null hypothesis that the proportions of
      observations match some expected proportions. If the p-value is low, this
      suggests that the Null hypothesis is false, and that the true proportions
      are different to those tested.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: var
        title: Variable
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: >
            the variable of interest in `data` (not necessary when using a
            formula, see the examples)
      - name: counts
        title: Counts (optional)
        type: Variable
        default: null
        permitted:
          - numeric
        description:
          R: |
            the counts in `data`
      - name: expected
        title: Expected counts
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), whether expected counts should be
            displayed
      - name: ratio
        title: Expected Proportions
        type: Array
        template:
          type: Number
          min: 0
          default: 1
        default: null
        description:
          R: |
            a vector of numbers: the expected proportions
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\nconst events = {\n    update: function(ui) {\n        this._updatingRatios = 0;\n        this._refreshing = true;\n        updateRatios(ui, this);\n    },\n\n    onChange_var: function(ui) {\n        updateRatios(ui, this);\n    },\n\n    onChange_ratio: function(ui) {\n        updateRatios(ui, this);\n    },\n\n    onRemoteDataChanged: function(ui, data) {\n        if (data.dataType !== \"columns\" || data.levelChanged === false)\n            return;\n\n        updateRatios(ui, this);\n    }\n};\n\nconst updateRatios = function(ui, context) {\n\n    if (context._updatingRatios > 0)\n        return;\n\n    context._updatingRatios += 1;\n    let columnName = ui.var.value();\n    let oldRatios = context.cloneArray(ui.ratio.value(), []);\n    let promise = context.requestData(\"column\", { columnName: columnName, properties: [\"levels\"] })\n    promise.then(rData => {\n        let data = [];\n        if (rData.columnFound) {\n            let levels = rData.levels;\n            \n            let totalRatio = levels.length;\n            for (let i = 0; i < oldRatios.length; i++)\n                totalRatio += oldRatios[i].ratio - 1;\n\n            for (let i = 0; i < levels.length; i++) {\n                let ratio = 1;\n                if (i < oldRatios.length)\n                    ratio = oldRatios[i].ratio;\n\n                let prop = parseFloat(Math.round((ratio / totalRatio) * 1000) / 1000).toFixed(3);\n\n                data.push({ level: levels[i].label, ratio: ratio, proportion: prop });\n            }\n        }\n\n        ui.ratio.setValue(data);\n        context._updatingRatios -= 1;\n    });\n};\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"var\",\"title\":\"Variable\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variable of interest in `data` (not necessary when using a formula, see the examples)\\n\"}},{\"name\":\"counts\",\"title\":\"Counts (optional)\",\"type\":\"Variable\",\"default\":null,\"permitted\":[\"numeric\"],\"description\":{\"R\":\"the counts in `data`\\n\"}},{\"name\":\"expected\",\"title\":\"Expected counts\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), whether expected counts should be displayed\\n\"}},{\"name\":\"ratio\",\"title\":\"Expected Proportions\",\"type\":\"Array\",\"template\":{\"type\":\"Number\",\"min\":0,\"default\":1},\"default\":null,\"description\":{\"R\":\"a vector of numbers: the expected proportions\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./proptestn.events').update,\n\n\tremoteDataChanged: require('./proptestn.events').onRemoteDataChanged\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Proportion Test (N Outcomes)\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./proptestn.events').onChange_var }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"counts\",\n\t\t\t\t\t\t\tmaxItemCount: 1,\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\tname: \"expected\",\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Expected Proportions\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"ratio\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./proptestn.events').onChange_ratio }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"level\",\n\t\t\t\t\t\t\tlabel: \"Level\",\n\t\t\t\t\t\t\theaderAlign: \"left\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tisVirtual: true,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\ttypeName: 'Label'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ratio\",\n\t\t\t\t\t\t\tlabel: \"Ratio\",\n\t\t\t\t\t\t\tmaxWidth: 50,\n\t\t\t\t\t\t\tstretchFactor: 0.25,\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"proportion\",\n\t\t\t\t\t\t\tlabel: \"Proportion\",\n\t\t\t\t\t\t\tmaxWidth: 100,\n\t\t\t\t\t\t\theaderAlign: \"right\",\n\t\t\t\t\t\t\tisVirtual: true,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\thorizontalAlignment: \"right\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./proptestn.events\":1}]},{},[2])(2)\n});"
  - title: Contingency Tables
    name: contTables
    ns: jmv
    menuGroup: Frequencies
    menuSubgroup: Contingency Tables
    menuTitle: Independent Samples
    menuSubtitle: χ² test of association
    description: >
      The χ² test of association (not to be confused with the χ² goodness of
      fit) is used to test whether two categorical variables are independent or
      associated. If the p-value is low, it suggests the variables are not
      independent, and that there is a relationship between the two variables.
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: rows
        title: Rows
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: >
            the variable to use as the rows in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: cols
        title: Columns
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: >
            the variable to use as the columns in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: counts
        title: Counts (optional)
        type: Variable
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: >
            the variable to use as the counts in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: layers
        title: Layers
        type: Variables
        default: null
        permitted:
          - factor
        description:
          R: >
            the variables to use to split the contingency table (not necessary
            when providing a formula, see the examples)
      - name: chiSq
        title: χ²
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide χ²
      - name: chiSqCorr
        title: χ² continuity correction
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide χ² with continuity correction
      - name: zProp
        title: z test for difference in 2 proportions
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a z test for differences
            between two proportions
      - name: likeRat
        title: Likelihood ratio
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the likelihood ratio
      - name: fisher
        title: Fisher's exact test
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Fisher's exact test
      - name: contCoef
        title: Contingency coefficient
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the contingency coefficient
      - name: phiCra
        title: Phi and Cramer's V
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Phi and Cramer's V
      - name: diffProp
        title: Difference in proportions
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the differences in proportions
            (only available for 2x2 tables)
      - name: logOdds
        title: Log odds ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the log odds ratio (only
            available for 2x2 tables)
      - name: odds
        title: Odds ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the odds ratio (only available
            for 2x2 tables)
      - name: relRisk
        title: Relative risk
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the relative risk (only
            available for 2x2 tables)
      - name: ci
        title: Confidence intervals
        type: Bool
        default: true
        description:
          R: >
            `TRUE` or `FALSE` (default), provide confidence intervals for the
            comparative measures
      - name: ciWidth
        title: Interval
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95), width of the confidence
            intervals to provide
      - name: compare
        title: Compare
        type: List
        options:
          - title: rows
            name: rows
          - title: columns
            name: columns
        default: rows
        description:
          R: >
            `columns` or `rows` (default), compare columns/rows in difference of
            proportions or relative risks (2x2 tables)
      - name: hypothesis
        title: Alternative hypothesis
        type: List
        options:
          - name: different
            title: Group 1 ≠ Group 2
          - name: oneGreater
            title: Group 1 > Group 2
          - name: twoGreater
            title: Group 1 < Group 2
        default: different
        description:
          ui: |
            the alternative hypothesis.
          R: >
            `'different'` (default), `'oneGreater'` or `'twoGreater'`, the
            alternative hypothesis; group 1 different to group 2, group 1
            greater than group 2, and group 2 greater than group 1 respectively
      - name: gamma
        title: Gamma
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide gamma
      - name: taub
        title: Kendall's tau-b
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Kendall's tau-b
      - name: mh
        title: Mantel-Haenszel
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide Mantel-Haenszel test for trend
      - name: obs
        title: Observed counts
        type: Bool
        default: true
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the observed counts
      - name: exp
        title: Expected counts
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the expected counts
      - name: pcRow
        title: Row
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide row percentages
      - name: pcCol
        title: Column
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide column percentages
      - name: pcTot
        title: Total
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide total percentages
      - name: barplot
        title: Bar Plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show barplots
      - name: yaxis
        title: Y-axis
        type: List
        options:
          - name: ycounts
            title: Counts
          - name: ypc
            title: Percentages
        default: ycounts
        description:
          R: >
            ycounts (default) or ypc. Use respectively `counts` or `percentages`
            for the bar plot y-axis
      - name: yaxisPc
        title: ''
        type: List
        options:
          - name: total_pc
            title: of total
          - name: column_pc
            title: within column
          - name: row_pc
            title: within rows
        default: total_pc
        description:
          R: >
            total_pc (default), column_pc, or row_pc. Use respectively
            percentages `of total`, `within columns`, or `within rows` for the
            bar plot y-axis.
      - name: xaxis
        title: X-axis
        type: List
        options:
          - name: xrows
            title: Rows
          - name: xcols
            title: Columns
        default: xrows
        description:
          R: |
            rows (default), or columns in bar plot X axis
      - name: bartype
        title: Bar Type
        type: List
        options:
          - name: dodge
            title: Side by side
          - name: stack
            title: Stacked
        default: dodge
        description:
          R: |
            stack or side by side (default), barplot type
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"rows\",\"title\":\"Rows\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variable to use as the rows in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"cols\",\"title\":\"Columns\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variable to use as the columns in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"counts\",\"title\":\"Counts (optional)\",\"type\":\"Variable\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"the variable to use as the counts in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"layers\",\"title\":\"Layers\",\"type\":\"Variables\",\"default\":null,\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variables to use to split the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"chiSq\",\"title\":\"χ²\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide χ²\\n\"}},{\"name\":\"chiSqCorr\",\"title\":\"χ² continuity correction\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide χ² with continuity correction\\n\"}},{\"name\":\"zProp\",\"title\":\"z test for difference in 2 proportions\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a z test for differences between two proportions\\n\"}},{\"name\":\"likeRat\",\"title\":\"Likelihood ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the likelihood ratio\\n\"}},{\"name\":\"fisher\",\"title\":\"Fisher's exact test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Fisher's exact test\\n\"}},{\"name\":\"contCoef\",\"title\":\"Contingency coefficient\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the contingency coefficient\\n\"}},{\"name\":\"phiCra\",\"title\":\"Phi and Cramer's V\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Phi and Cramer's V\\n\"}},{\"name\":\"diffProp\",\"title\":\"Difference in proportions\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the differences in proportions (only available for 2x2 tables)\\n\"}},{\"name\":\"logOdds\",\"title\":\"Log odds ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the log odds ratio (only available for 2x2 tables)\\n\"}},{\"name\":\"odds\",\"title\":\"Odds ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the odds ratio (only available for 2x2 tables)\\n\"}},{\"name\":\"relRisk\",\"title\":\"Relative risk\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the relative risk (only available for 2x2 tables)\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence intervals\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide confidence intervals for the comparative measures\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Interval\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95), width of the confidence intervals to provide\\n\"}},{\"name\":\"compare\",\"title\":\"Compare\",\"type\":\"List\",\"options\":[{\"title\":\"rows\",\"name\":\"rows\"},{\"title\":\"columns\",\"name\":\"columns\"}],\"default\":\"rows\",\"description\":{\"R\":\"`columns` or `rows` (default), compare columns/rows in difference of proportions or relative risks (2x2 tables)\\n\"}},{\"name\":\"hypothesis\",\"title\":\"Alternative hypothesis\",\"type\":\"List\",\"options\":[{\"name\":\"different\",\"title\":\"Group 1 ≠ Group 2\"},{\"name\":\"oneGreater\",\"title\":\"Group 1 > Group 2\"},{\"name\":\"twoGreater\",\"title\":\"Group 1 < Group 2\"}],\"default\":\"different\",\"description\":{\"ui\":\"the alternative hypothesis.\\n\",\"R\":\"`'different'` (default), `'oneGreater'` or `'twoGreater'`, the alternative hypothesis; group 1 different to group 2, group 1 greater than group 2, and group 2 greater than group 1 respectively\\n\"}},{\"name\":\"gamma\",\"title\":\"Gamma\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide gamma\\n\"}},{\"name\":\"taub\",\"title\":\"Kendall's tau-b\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Kendall's tau-b\\n\"}},{\"name\":\"mh\",\"title\":\"Mantel-Haenszel\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Mantel-Haenszel test for trend\\n\"}},{\"name\":\"obs\",\"title\":\"Observed counts\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the observed counts\\n\"}},{\"name\":\"exp\",\"title\":\"Expected counts\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the expected counts\\n\"}},{\"name\":\"pcRow\",\"title\":\"Row\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide row percentages\\n\"}},{\"name\":\"pcCol\",\"title\":\"Column\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide column percentages\\n\"}},{\"name\":\"pcTot\",\"title\":\"Total\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide total percentages\\n\"}},{\"name\":\"barplot\",\"title\":\"Bar Plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show barplots\\n\"}},{\"name\":\"yaxis\",\"title\":\"Y-axis\",\"type\":\"List\",\"options\":[{\"name\":\"ycounts\",\"title\":\"Counts\"},{\"name\":\"ypc\",\"title\":\"Percentages\"}],\"default\":\"ycounts\",\"description\":{\"R\":\"ycounts (default) or ypc. Use respectively `counts` or `percentages` for the bar plot y-axis\\n\"}},{\"name\":\"yaxisPc\",\"title\":\"\",\"type\":\"List\",\"options\":[{\"name\":\"total_pc\",\"title\":\"of total\"},{\"name\":\"column_pc\",\"title\":\"within column\"},{\"name\":\"row_pc\",\"title\":\"within rows\"}],\"default\":\"total_pc\",\"description\":{\"R\":\"total_pc (default), column_pc, or row_pc. Use respectively percentages `of total`, `within columns`, or `within rows` for the bar plot y-axis.\\n\"}},{\"name\":\"xaxis\",\"title\":\"X-axis\",\"type\":\"List\",\"options\":[{\"name\":\"xrows\",\"title\":\"Rows\"},{\"name\":\"xcols\",\"title\":\"Columns\"}],\"default\":\"xrows\",\"description\":{\"R\":\"rows (default), or columns in bar plot X axis\\n\"}},{\"name\":\"bartype\",\"title\":\"Bar Type\",\"type\":\"List\",\"options\":[{\"name\":\"dodge\",\"title\":\"Side by side\"},{\"name\":\"stack\",\"title\":\"Stacked\"}],\"default\":\"dodge\",\"description\":{\"R\":\"stack or side by side (default), barplot type\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Contingency Tables\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tname: \"variablesupplier\",\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"rows\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"cols\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"counts\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"layers\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tstretchFactor: 1,\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\t\t\ttypeName: 'CollapseBox',\n\t\t\t\t\tlabel: \"Statistics\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcollapsed: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Tests\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcell: {\"row\":0,\"column\":0},\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"chiSq\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"chiSqCorr\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"likeRat\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"fisher\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"zProp\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Hypothesis\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"hypothesis_different\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"different\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Group 1 ≠ Group 2\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"hypothesis_oneGreater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"oneGreater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Group 1 > Group 2\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"hypothesis_twoGreater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"hypothesis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"twoGreater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Group 1 < Group 2\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Comparative Measures (2x2 only)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"odds\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"logOdds\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"relRisk\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"diffProp\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"compare\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Nominal\",\n\t\t\t\t\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":1},\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"contCoef\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"phiCra\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Ordinal\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":1},\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"gamma\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"taub\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"mh\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\t\t\ttypeName: 'CollapseBox',\n\t\t\t\t\tlabel: \"Cells\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcollapsed: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Counts\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"obs\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"exp\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Percentages\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"pcRow\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"pcCol\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"pcTot\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\t\t\ttypeName: 'CollapseBox',\n\t\t\t\t\tlabel: \"Plots\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcollapsed: true,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Plots\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"barplot\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Bar Type\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"dodge\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"bartype\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"dodge\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"stack\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"bartype\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"stack\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Y-Axis\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ycounts\",\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"yaxis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"ycounts\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ypc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"yaxis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"ypc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: \"inline\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tverticalAlignment: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"yaxisPc\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ypc)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"X-Axis\",\n\t\t\t\t\t\t\t\t\t\t\tfitToGrid: true,\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"xrows\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"xaxis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"xrows\"\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"xcols\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionName: \"xaxis\",\n\t\t\t\t\t\t\t\t\t\t\t\t\toptionPart: \"xcols\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Paired Samples Contingency Tables
    name: contTablesPaired
    ns: jmv
    menuGroup: Frequencies
    menuSubgroup: Contingency Tables
    menuTitle: Paired Samples
    menuSubtitle: McNemar test
    description: McNemar test
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: rows
        title: Rows
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: >
            the variable to use as the rows in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: cols
        title: Columns
        type: Variable
        suggested:
          - nominal
          - ordinal
        permitted:
          - factor
        description:
          R: >
            the variable to use as the columns in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: counts
        title: Counts (optional)
        type: Variable
        suggested:
          - continuous
        permitted:
          - numeric
        default: null
        description:
          R: >
            the variable to use as the counts in the contingency table (not
            necessary when providing a formula, see the examples)
      - name: chiSq
        title: χ²
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide χ²
      - name: chiSqCorr
        title: χ² continuity correction
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide χ² with continuity correction
      - name: exact
        title: Log odds ratio exact
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide an exact log odds ratio
            (requires exact2x2 to be installed)
      - name: pcRow
        title: Row
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide row percentages
      - name: pcCol
        title: Column
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide column percentages
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"rows\",\"title\":\"Rows\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variable to use as the rows in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"cols\",\"title\":\"Columns\",\"type\":\"Variable\",\"suggested\":[\"nominal\",\"ordinal\"],\"permitted\":[\"factor\"],\"description\":{\"R\":\"the variable to use as the columns in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"counts\",\"title\":\"Counts (optional)\",\"type\":\"Variable\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"],\"default\":null,\"description\":{\"R\":\"the variable to use as the counts in the contingency table (not necessary when providing a formula, see the examples)\\n\"}},{\"name\":\"chiSq\",\"title\":\"χ²\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide χ²\\n\"}},{\"name\":\"chiSqCorr\",\"title\":\"χ² continuity correction\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide χ² with continuity correction\\n\"}},{\"name\":\"exact\",\"title\":\"Log odds ratio exact\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide an exact log odds ratio (requires exact2x2 to be installed)\\n\"}},{\"name\":\"pcRow\",\"title\":\"Row\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide row percentages\\n\"}},{\"name\":\"pcCol\",\"title\":\"Column\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide column percentages\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Paired Samples Contingency Tables\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"rows\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"cols\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"counts\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"chiSq\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"chiSqCorr\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\tname: \"exact\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tcell: {\"row\":1,\"column\":1},\n\t\t\tstretchFactor: 1,\n\t\t\tmargin: \"large\",\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\tlabel: \"Percentages\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"pcRow\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\tname: \"pcCol\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Log-Linear Regression
    name: logLinear
    ns: jmv
    menuGroup: Frequencies
    menuTitle: Log-Linear Regression
    description: Log-Linear Regression
    menuSubgroup: ''
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: factors
        title: Factors
        type: Variables
        rejectUnusedLevels: true
        suggested:
          - nominal
        permitted:
          - factor
        default: null
        description:
          R: a vector of strings naming the factors from `data`
      - name: counts
        title: Counts (optional)
        type: Variable
        default: null
        permitted:
          - numeric
        description:
          R: >
            a string naming a variable in `data` containing counts, or NULL if
            each row represents a single observation
      - name: blocks
        title: Blocks
        type: Array
        default:
          - []
        template:
          type: Terms
        description:
          R: >
            a list containing vectors of strings that name the predictors that
            are added to the model. The elements are added to the model
            according to their order in the list
      - name: refLevels
        title: Reference Levels
        type: Array
        items: (factors)
        default: null
        template:
          type: Group
          elements:
            - name: var
              type: Variable
              content: $key
            - name: ref
              type: Level
        description:
          R: >
            a list of lists specifying reference levels of the dependent
            variable and all the factors
      - name: modelTest
        title: Overall model test
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the model comparison between
            the models and the NULL model
      - name: dev
        title: Deviance
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide the deviance (or
            -2LogLikelihood) for the models
      - name: aic
        title: AIC
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion
            (AIC) for the models
      - name: bic
        title: BIC
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide Bayesian Information Criterion
            (BIC) for the models
      - name: pseudoR2
        title: Pseudo R²
        type: NMXList
        options:
          - name: r2mf
            title: McFadden's R²
          - name: r2cs
            title: Cox & Snell's R²
          - name: r2n
            title: Nagelkerke's R²
        default:
          - r2mf
        description:
          R: >
            one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox &
            Snell, and Nagelkerke pseudo-R², respectively
      - name: omni
        title: Likelihood ratio tests
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the omnibus likelihood ratio
            tests for the predictors
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient estimates
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: RR
        title: Rate ratio
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the exponential of the log-rate
            ratio estimate, or the rate ratio estimate
      - name: ciRR
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model coefficient rate ratio estimates
      - name: ciWidthRR
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width
      - name: emMeans
        title: Marginal Means
        type: Array
        default:
          - []
        template:
          type: Variables
        description:
          R: >
            a list of lists specifying the variables for which the estimated
            marginal means need to be calculate. Supports up to three variables
            per term.
      - name: ciEmm
        title: Confidence interval
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide a confidence interval for the
            estimated marginal means
      - name: ciWidthEmm
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width for the estimated marginal means
      - name: emmPlots
        title: Marginal means plots
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide estimated marginal means plots
      - name: emmTables
        title: Marginal means tables
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide estimated marginal means tables
      - name: emmWeights
        title: Equal cell weights
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, weigh each cell equally or weigh them
            according to the cell frequency
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\nconst events = {\n\n    update: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        calcBlocks(ui, this);\n        filterBlocks(ui, this);\n\n        calcModelTerms(ui, this);\n        updateLevelControls(ui, this);\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    },\n\n    onChange_factors: function(ui) {\n        calcBlocks(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onChange_blocks: function(ui) {\n        checkForNullBlocks(ui, this);\n    },\n\n    onChange_block: function(ui) {\n        filterBlocks(ui, this);\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onUpdate_modelSupplier: function(ui) {\n        let variableList = this.cloneArray(ui.factors.value(), []);\n        ui.modelSupplier.setValue(this.valuesToItems(variableList, FormatDef.variable));\n    },\n\n    onUpdate_emMeansSupplier: function(ui) {\n        calcMarginalMeansSupplier(ui, this);\n    },\n\n    onChange_emMeansSupplier: function(ui) {\n        let values = this.itemsToValues(ui.emMeansSupplier.value());\n        this.checkValue(ui.emMeans, 2, values, FormatDef.variable);\n    },\n\n    onChange_refLevels: function(ui) {\n        updateLevelControls(ui, this);\n    },\n\n    onEvent_test_listItemsChanged: function(ui) {\n        updateModelLabels(ui.blocks, _('Block {0}'));\n        let blocks = this.cloneArray(ui.blocks.value(), []);\n        this.workspace[\"blocks\"] = blocks;\n    },\n\n    onEvent_emMeans_listItemsChanged: function(ui) {\n        updateModelLabels(ui.emMeans, _('Term {0}'));\n    }\n};\n\nlet calcMarginalMeansSupplier = function(ui, context) {\n\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    let variableList = [];\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        for (let term of blocks[blockIndex])\n            variableList = [...new Set([...variableList, ...term])];\n    }\n\n    if (ui.emMeansSupplier)\n        ui.emMeansSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n};\n\nvar calcModelTerms = function(ui, context) {\n    var variableList = context.cloneArray(ui.factors.value(), []);\n\n    updateContrasts(ui, variableList, context);\n};\n\nvar updateLevelControls = function(ui, context) {\n    let dlist = ui.refLevels.value();\n    let list = ui.refLevels.applyToItems(0, (item, index, column) => {\n        if (column === 1)\n            item.setPropertyValue('variable', dlist[index].var );\n    });\n};\n\nvar updateContrasts = function(ui, variableList, context) {\n    var currentList = context.cloneArray(ui.refLevels.value(), []);\n\n    var list3 = [];\n    for (let i = 0; i < variableList.length; i++) {\n        let found = null;\n        for (let j = 0; j < currentList.length; j++) {\n            if (currentList[j].var === variableList[i]) {\n                found = currentList[j];\n                break;\n            }\n        }\n        if (found === null)\n            list3.push({ var: variableList[i], ref: null });\n        else\n            list3.push(found);\n    }\n\n    ui.refLevels.setValue(list3);\n};\n\n\nlet updateModelLabels = function(list, blockName) {\n    list.applyToItems(0, (item, index) => {\n        item.controls[0].setPropertyValue(\"label\", blockName.replace('{0}', (index + 1)) );\n    });\n};\n\n\nlet calcBlocks = function(ui, context) {\n    let variableList = context.cloneArray(ui.factors.value(), []);\n\n    ui.modelSupplier.setValue(context.valuesToItems(variableList, FormatDef.variable));\n\n\n    let varsDiff = context.findChanges(\"variableList\", variableList, true, FormatDef.variable);\n    let termsList = context.cloneArray(ui.blocks.value(), []);\n\n    var termsChanged = false;\n    for (var i = 0; i < varsDiff.removed.length; i++) {\n        for (var j = 0; j < termsList.length; j++) {\n            if (termsList[j] === null)\n                termsList[j] = [];\n\n            for (var k = 0; k < termsList[j].length; k++) {\n                if (FormatDef.term.contains(termsList[j][k], varsDiff.removed[i])) {\n                    termsList[j].splice(k, 1);\n                    termsChanged = true;\n                    k -= 1;\n                }\n            }\n        }\n    }\n\n    let selectedRows = ui.blocks.getSelectedRowIndices();\n    if (selectedRows.length > 0) {\n        if (termsList[selectedRows[selectedRows.length - 1]] === null)\n            termsList[selectedRows[selectedRows.length - 1]]  = [];\n        //for (let i = 0; i < varsDiff.added.length; i++)\n        //    termsList[selectedRows[selectedRows.length - 1]].push([varsDiff.added[i]]);\n        termsList[selectedRows[selectedRows.length - 1]] = context.getCombinations(varsDiff.added, termsList[selectedRows[selectedRows.length - 1]]);\n        termsChanged = termsChanged || varsDiff.added.length > 0;\n    }\n\n\n    if (termsChanged)\n        ui.blocks.setValue(termsList);\n};\n\nlet inOtherBlock = function(blocks, value, blockIndex) {\n    for (let b = 0; b < blocks.length; b++) {\n        if (b === blockIndex)\n            continue;\n\n        let block = blocks[b];\n        for (let i = 0; i < block.length; i++) {\n            if (FormatDef.term.isEqual(block[i], value))\n                return true;\n        }\n    }\n    return false;\n};\n\nlet checkForNullBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n    }\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\nlet filterBlocks = function(ui, context) {\n    let changed = false;\n    let blocks = context.cloneArray(ui.blocks.value(), []);\n\n    let prevBlocks = context.workspace[\"blocks\"];\n\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        if (blocks[blockIndex] === null) {\n            changed = true;\n            blocks[blockIndex] = [];\n        }\n\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            //Remove common terms\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.removed.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.removed.length; i++) {\n                    let item = termsDiff.removed[i];\n                    for (let j = 0; j < termsList.length; j++) {\n                        if (FormatDef.term.contains(termsList[j], item)) {\n                            termsList.splice(j, 1);\n                            j -= 1;\n                            itemsRemoved = true;\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n            /////////////////////\n        }\n\n        //Sort terms\n        if (context.sortArraysByLength(termsList))\n            changed = true;\n        ////////////\n    }\n\n    //remove terms that have been added that clash with existing terms\n    for (let blockIndex = 0; blockIndex < blocks.length; blockIndex++)  {\n        let termsList = blocks[blockIndex];\n\n        if (prevBlocks !== undefined && prevBlocks.length === blocks.length) {\n            let termsDiff = context.findDifferences(prevBlocks[blockIndex], termsList, FormatDef.term);\n\n            if (termsDiff.added.length > 0 && termsList !== null) {\n                let itemsRemoved = false;\n                for (let i = 0; i < termsDiff.added.length; i++) {\n                    let item = termsDiff.added[i];\n                    if (inOtherBlock(blocks, item, blockIndex)) {\n                        for (let j = 0; j < termsList.length; j++) {\n                            if (FormatDef.term.isEqual(termsList[j], item)) {\n                                termsList.splice(j, 1);\n                                j -= 1;\n                                itemsRemoved = true;\n                            }\n                        }\n                    }\n                }\n\n                if (itemsRemoved)\n                    changed = true;\n            }\n        }\n    }\n    /////////////////////////////////////////////////////////////////\n\n\n\n    context.workspace[\"blocks\"] = blocks;\n\n    if (changed)\n        ui.blocks.setValue(blocks);\n};\n\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Variables\",\"rejectUnusedLevels\":true,\"suggested\":[\"nominal\"],\"permitted\":[\"factor\"],\"default\":null,\"description\":{\"R\":\"a vector of strings naming the factors from `data`\"}},{\"name\":\"counts\",\"title\":\"Counts (optional)\",\"type\":\"Variable\",\"default\":null,\"permitted\":[\"numeric\"],\"description\":{\"R\":\"a string naming a variable in `data` containing counts, or NULL if each row represents a single observation\\n\"}},{\"name\":\"blocks\",\"title\":\"Blocks\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Terms\"},\"description\":{\"R\":\"a list containing vectors of strings that name the predictors that are added to the model. The elements are added to the model according to their order in the list\\n\"}},{\"name\":\"refLevels\",\"title\":\"Reference Levels\",\"type\":\"Array\",\"items\":\"(factors)\",\"default\":null,\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"var\",\"type\":\"Variable\",\"content\":\"$key\"},{\"name\":\"ref\",\"type\":\"Level\"}]},\"description\":{\"R\":\"a list of lists specifying reference levels of the dependent variable and all the factors\\n\"}},{\"name\":\"modelTest\",\"title\":\"Overall model test\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the model comparison between the models and the NULL model\\n\"}},{\"name\":\"dev\",\"title\":\"Deviance\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide the deviance (or -2LogLikelihood) for the models\\n\"}},{\"name\":\"aic\",\"title\":\"AIC\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide Aikaike's Information Criterion (AIC) for the models\\n\"}},{\"name\":\"bic\",\"title\":\"BIC\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide Bayesian Information Criterion (BIC) for the models\\n\"}},{\"name\":\"pseudoR2\",\"title\":\"Pseudo R²\",\"type\":\"NMXList\",\"options\":[{\"name\":\"r2mf\",\"title\":\"McFadden's R²\"},{\"name\":\"r2cs\",\"title\":\"Cox & Snell's R²\"},{\"name\":\"r2n\",\"title\":\"Nagelkerke's R²\"}],\"default\":[\"r2mf\"],\"description\":{\"R\":\"one or more of `'r2mf'`, `'r2cs'`, or `'r2n'`; use McFadden's, Cox & Snell, and Nagelkerke pseudo-R², respectively\\n\"}},{\"name\":\"omni\",\"title\":\"Likelihood ratio tests\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the omnibus likelihood ratio tests for the predictors\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient estimates\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"RR\",\"title\":\"Rate ratio\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the exponential of the log-rate ratio estimate, or the rate ratio estimate\\n\"}},{\"name\":\"ciRR\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model coefficient rate ratio estimates\\n\"}},{\"name\":\"ciWidthRR\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width\\n\"}},{\"name\":\"emMeans\",\"title\":\"Marginal Means\",\"type\":\"Array\",\"default\":[[]],\"template\":{\"type\":\"Variables\"},\"description\":{\"R\":\"a list of lists specifying the variables for which the estimated marginal means need to be calculate. Supports up to three variables per term.\\n\"}},{\"name\":\"ciEmm\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide a confidence interval for the estimated marginal means\\n\"}},{\"name\":\"ciWidthEmm\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width for the estimated marginal means\\n\"}},{\"name\":\"emmPlots\",\"title\":\"Marginal means plots\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimated marginal means plots\\n\"}},{\"name\":\"emmTables\",\"title\":\"Marginal means tables\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimated marginal means tables\\n\"}},{\"name\":\"emmWeights\",\"title\":\"Equal cell weights\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, weigh each cell equally or weigh them according to the cell frequency\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./loglinear.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Log-Linear Regression\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./loglinear.events').onChange_factors }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Counts (optional)\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"counts\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tmaxItemCount: 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Builder\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tname: \"modelSupplier\",\n\t\t\t\t\tlabel: \"Predictors\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tformat: FormatDef.term,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./loglinear.events').onUpdate_modelSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\ttransferAction: \"interactions\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\tname: \"blocks\",\n\t\t\t\t\t\t\t\t\theight: \"normal\",\n\t\t\t\t\t\t\t\t\taddButton: \"Add New Block\",\n\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t{ execute: require('./loglinear.events').onChange_blocks },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./loglinear.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./loglinear.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Block 1\",\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\",\n\t\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./loglinear.events').onChange_block }\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TermLabel,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TermLabel'\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reference Levels\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\tname: \"refLevels\",\n\t\t\t\t\tshowColumnHeaders: true,\n\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\theight: \"large\",\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./loglinear.events').onChange_refLevels }\n\t\t\t\t\t],\n\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"var\",\n\t\t\t\t\t\t\tlabel: \"Variable\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tmaxWidth: 300,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"ref\",\n\t\t\t\t\t\t\tlabel: \"Reference Level\",\n\t\t\t\t\t\t\tselectable: false,\n\t\t\t\t\t\t\tstretchFactor: 0.5,\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LevelSelector,\n\t\t\t\t\t\t\t\ttypeName: 'LevelSelector',\n\t\t\t\t\t\t\t\tlabel: \"\"\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"dev\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"bic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Pseudo R²\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2mf\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2mf\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2cs\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2cs\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"pseudoR2_r2n\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"pseudoR2\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"r2n\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tname: \"pseudoR2\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Coefficients\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Omnibus Tests\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"omni\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Estimate (Log Rate Ratio)\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Rate Ratio\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"RR\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciRR\",\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(RR)\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthRR\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciRR)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimated Marginal Means\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\t\t\tname: \"emMeansSupplier\",\n\t\t\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./loglinear.events').onChange_emMeansSupplier },\n\t\t\t\t\t\t\t\t{ onEvent: 'update', execute: require('./loglinear.events').onUpdate_emMeansSupplier }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emMeans\",\n\t\t\t\t\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\t\t\t\t\taddButton: \"Add New Term\",\n\t\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./loglinear.events').onEvent_emMeans_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./loglinear.events').onEvent_emMeans_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tselectable: true,\n\t\t\t\t\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\t\t\t\t\ttargetArea: true,\n\t\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Term 1\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxItemCount: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"General Options\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmWeights\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciEmm\",\n\t\t\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidthEmm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\t\t\tenable: \"(ciEmm)\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Output\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmPlots\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"emmTables\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./loglinear.events\":1}]},{},[2])(2)\n});"
  - title: Reliability Analysis
    name: reliability
    ns: jmv
    menuGroup: Factor
    menuSubgroup: Scale Analysis
    menuTitle: Reliability Analysis
    description: Reliability Analysis
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Items
        type: Variables
        suggested:
          - ordinal
          - continuous
        permitted:
          - numeric
        rejectInf: false
        takeFromDataIfMissing: true
        description:
          R: a vector of strings naming the variables of interest in `data`
      - name: alphaScale
        title: Cronbach's α
        type: Bool
        default: true
        description:
          R: |
            `TRUE` (default) or `FALSE`, provide Cronbach's α
      - name: omegaScale
        title: McDonald's ω
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide McDonald's ω
      - name: meanScale
        title: Mean
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the mean
      - name: sdScale
        title: Standard deviation
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide the standard deviation
      - name: corPlot
        title: Correlation Heatmap
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a correlation plot
      - name: alphaItems
        title: Cronbach's α (if item is dropped)
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide what the Cronbach's α would be
            if the item was dropped
      - name: omegaItems
        title: McDonald's ω (if item is dropped)
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide what the McDonald's ω would be
            if the item was dropped
      - name: meanItems
        title: Mean
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide item means
      - name: sdItems
        title: Standard deviation
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide item standard deviations
      - name: itemRestCor
        title: Item-rest correlation
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide item-rest correlations
      - name: revItems
        title: Reverse Scaled Items
        type: Variables
        default: null
        description:
          R: >
            a vector containing strings naming the varibales that are reverse
            scaled
      - name: meanScoreOV
        title: Mean score
        type: Output
      - name: sumScoreOV
        title: Sum score
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\nconst events = {\n    onChange_vars: function(ui) {\n        ui.revItemsSupplier.setValue(this.valuesToItems(ui.vars.value(), FormatDef.variable));\n    },\n\n    onChange_revItemsSupplier: function(ui) {\n        let values = this.itemsToValues(ui.revItemsSupplier.value());\n        this.checkValue(ui.revItems, true, values, FormatDef.variable);\n    },\n\n    onUpdate_revItemsSupplier: function(ui) {\n        ui.revItemsSupplier.setValue(this.valuesToItems(ui.vars.value(), FormatDef.variable));\n    }\n};\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Items\",\"type\":\"Variables\",\"suggested\":[\"ordinal\",\"continuous\"],\"permitted\":[\"numeric\"],\"rejectInf\":false,\"takeFromDataIfMissing\":true,\"description\":{\"R\":\"a vector of strings naming the variables of interest in `data`\"}},{\"name\":\"alphaScale\",\"title\":\"Cronbach's α\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide Cronbach's α\\n\"}},{\"name\":\"omegaScale\",\"title\":\"McDonald's ω\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide McDonald's ω\\n\"}},{\"name\":\"meanScale\",\"title\":\"Mean\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the mean\\n\"}},{\"name\":\"sdScale\",\"title\":\"Standard deviation\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the standard deviation\\n\"}},{\"name\":\"corPlot\",\"title\":\"Correlation Heatmap\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a correlation plot\\n\"}},{\"name\":\"alphaItems\",\"title\":\"Cronbach's α (if item is dropped)\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide what the Cronbach's α would be if the item was dropped\\n\"}},{\"name\":\"omegaItems\",\"title\":\"McDonald's ω (if item is dropped)\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide what the McDonald's ω would be if the item was dropped\\n\"}},{\"name\":\"meanItems\",\"title\":\"Mean\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide item means\\n\"}},{\"name\":\"sdItems\",\"title\":\"Standard deviation\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide item standard deviations\\n\"}},{\"name\":\"itemRestCor\",\"title\":\"Item-rest correlation\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide item-rest correlations\\n\"}},{\"name\":\"revItems\",\"title\":\"Reverse Scaled Items\",\"type\":\"Variables\",\"default\":null,\"description\":{\"R\":\"a vector containing strings naming the varibales that are reverse scaled\\n\"}},{\"name\":\"meanScoreOV\",\"title\":\"Mean score\",\"type\":\"Output\"},{\"name\":\"sumScoreOV\",\"title\":\"Sum score\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Reliability Analysis\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ execute: require('./reliability.events').onChange_vars }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Scale Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"alphaScale\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"omegaScale\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"meanScale\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sdScale\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Options\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"corPlot\",\n\t\t\t\t\t\t\t\t\tlabel: \"Correlation heatmap\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Item Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"alphaItems\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"omegaItems\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"meanItems\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sdItems\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"itemRestCor\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Reverse Scaled Items\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.Supplier,\n\t\t\t\t\ttypeName: 'Supplier',\n\t\t\t\t\tformat: FormatDef.variable,\n\t\t\t\t\tname: \"revItemsSupplier\",\n\t\t\t\t\tlabel: \"Normal Scaled Items\",\n\t\t\t\t\tpersistentItems: false,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./reliability.events').onChange_revItemsSupplier },\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./reliability.events').onUpdate_revItemsSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\tlabel: \"Reverse Scaled Items\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\tname: \"revItems\",\n\t\t\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"meanScoreOV\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"sumScoreOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./reliability.events\":1}]},{},[2])(2)\n});"
  - title: Principal Component Analysis
    name: pca
    ns: jmv
    menuGroup: Factor
    menuSubgroup: Data Reduction
    menuTitle: Principal Component Analysis
    description: Principal Component Analysis
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        takeFromDataIfMissing: true
        suggested:
          - ordinal
          - continuous
        permitted:
          - numeric
        rejectInf: false
        description:
          R: a vector of strings naming the variables of interest in `data`
      - name: nFactorMethod
        title: Number of components
        type: List
        options:
          - parallel
          - eigen
          - fixed
        default: parallel
        description:
          R: >
            `'parallel'` (default), `'eigen'` or `'fixed'`, the way to determine
            the number of factors
      - name: nFactors
        title: ''
        type: Integer
        min: 1
        default: 1
        description:
          R: |
            an integer (default: 1), the number of components in the model
      - name: minEigen
        title: Minimum value
        type: Number
        default: 1
        description:
          R: >
            a number (default: 1), the minimal eigenvalue for a component to be
            included in the model
      - name: rotation
        title: Rotation
        type: List
        options:
          - title: None
            name: none
          - title: Varimax
            name: varimax
          - title: Quartimax
            name: quartimax
          - title: Promax
            name: promax
          - title: Oblimin
            name: oblimin
          - title: Simplimax
            name: simplimax
        default: varimax
        description:
          R: >
            `'none'`, `'varimax'` (default), `'quartimax'`, `'promax'`,
            `'oblimin'`, or `'simplimax'`, the rotation to use in estimation
      - name: hideLoadings
        title: Hide loadings below
        type: Number
        default: 0.3
        description:
          R: |
            a number (default: 0.3), hide loadings below this value
      - name: sortLoadings
        title: Sort loadings by size
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), sort the factor loadings by size
      - name: screePlot
        title: Scree plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show scree plot
      - name: eigen
        title: Initial eigenvalues
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show eigenvalue table
      - name: factorCor
        title: Component correlations
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show inter-factor correlations
      - name: factorSummary
        title: Component summary
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show factor summary
      - name: kmo
        title: KMO measure of sampling adequacy
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), show Kaiser-Meyer-Olkin (KMO) measure
            of sampling adequacy (MSA) results
      - name: bartlett
        title: Bartlett's test of sphericity
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), show Bartlett's test of sphericity
            results
      - name: factorScoresOV
        title: Component scores
        type: Output
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":true,\"suggested\":[\"ordinal\",\"continuous\"],\"permitted\":[\"numeric\"],\"rejectInf\":false,\"description\":{\"R\":\"a vector of strings naming the variables of interest in `data`\"}},{\"name\":\"nFactorMethod\",\"title\":\"Number of components\",\"type\":\"List\",\"options\":[\"parallel\",\"eigen\",\"fixed\"],\"default\":\"parallel\",\"description\":{\"R\":\"`'parallel'` (default), `'eigen'` or `'fixed'`, the way to determine the number of factors\\n\"}},{\"name\":\"nFactors\",\"title\":\"\",\"type\":\"Integer\",\"min\":1,\"default\":1,\"description\":{\"R\":\"an integer (default: 1), the number of components in the model\\n\"}},{\"name\":\"minEigen\",\"title\":\"Minimum value\",\"type\":\"Number\",\"default\":1,\"description\":{\"R\":\"a number (default: 1), the minimal eigenvalue for a component to be included in the model\\n\"}},{\"name\":\"rotation\",\"title\":\"Rotation\",\"type\":\"List\",\"options\":[{\"title\":\"None\",\"name\":\"none\"},{\"title\":\"Varimax\",\"name\":\"varimax\"},{\"title\":\"Quartimax\",\"name\":\"quartimax\"},{\"title\":\"Promax\",\"name\":\"promax\"},{\"title\":\"Oblimin\",\"name\":\"oblimin\"},{\"title\":\"Simplimax\",\"name\":\"simplimax\"}],\"default\":\"varimax\",\"description\":{\"R\":\"`'none'`, `'varimax'` (default), `'quartimax'`, `'promax'`, `'oblimin'`, or `'simplimax'`, the rotation to use in estimation\\n\"}},{\"name\":\"hideLoadings\",\"title\":\"Hide loadings below\",\"type\":\"Number\",\"default\":0.3,\"description\":{\"R\":\"a number (default: 0.3), hide loadings below this value\\n\"}},{\"name\":\"sortLoadings\",\"title\":\"Sort loadings by size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), sort the factor loadings by size\\n\"}},{\"name\":\"screePlot\",\"title\":\"Scree plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show scree plot\\n\"}},{\"name\":\"eigen\",\"title\":\"Initial eigenvalues\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show eigenvalue table\\n\"}},{\"name\":\"factorCor\",\"title\":\"Component correlations\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show inter-factor correlations\\n\"}},{\"name\":\"factorSummary\",\"title\":\"Component summary\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show factor summary\\n\"}},{\"name\":\"kmo\",\"title\":\"KMO measure of sampling adequacy\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show Kaiser-Meyer-Olkin (KMO) measure of sampling adequacy (MSA) results\\n\"}},{\"name\":\"bartlett\",\"title\":\"Bartlett's test of sphericity\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show Bartlett's test of sphericity results\\n\"}},{\"name\":\"factorScoresOV\",\"title\":\"Component scores\",\"type\":\"Output\"}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Principal Component Analysis\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Method\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"rotation\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Number of Components\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_parallel\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"parallel\",\n\t\t\t\t\t\t\t\t\tlabel: \"Based on parallel analysis\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_eigen\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"eigen\",\n\t\t\t\t\t\t\t\t\tlabel: \"Based on eigenvalue\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"minEigen\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Eigenvalues greater than\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(nFactorMethod_eigen)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_fixed\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"fixed\",\n\t\t\t\t\t\t\t\t\tlabel: \"Fixed number\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"nFactors\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"component(s)\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(nFactorMethod_fixed)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"bartlett\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"kmo\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Factor Loadings\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"hideLoadings\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sortLoadings\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Output\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"factorSummary\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"factorCor\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"eigen\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"screePlot\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"factorScoresOV\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Exploratory Factor Analysis
    name: efa
    ns: jmv
    menuGroup: Factor
    menuSubgroup: Data Reduction
    menuTitle: Exploratory Factor Analysis
    description: Exploratory Factor Analysis
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: vars
        title: Variables
        type: Variables
        takeFromDataIfMissing: true
        suggested:
          - ordinal
          - continuous
        permitted:
          - numeric
        rejectInf: false
        description:
          R: a vector of strings naming the variables of interest in `data`
      - name: nFactorMethod
        title: Number of factors
        type: List
        options:
          - name: parallel
            title: Based on parallel analysis
          - name: eigen
            title: Based on eigenvalue
          - name: fixed
            title: Fixed number
        default: parallel
        description:
          R: >
            `'parallel'` (default), `'eigen'` or `'fixed'`, the way to determine
            the number of factors
      - name: nFactors
        title: ''
        type: Integer
        min: 1
        default: 1
        description:
          R: |
            an integer (default: 1), the number of factors in the model
      - name: minEigen
        title: Minimum value
        type: Number
        default: 0
        description:
          R: >
            a number (default: 0), the minimal eigenvalue for a factor to be
            included in the model
      - name: extraction
        title: Extraction
        type: List
        options:
          - title: Minimum residuals
            name: minres
          - title: Maximum likelihood
            name: ml
          - title: Principal axis
            name: pa
        default: minres
        description:
          R: >
            `'minres'` (default), `'ml'`, or `'pa'` use respectively 'minimum
            residual', 'maximum likelihood', or 'prinicipal axis' as the factor
            extraction method
      - name: rotation
        title: Rotation
        type: List
        options:
          - title: None
            name: none
          - title: Varimax
            name: varimax
          - title: Quartimax
            name: quartimax
          - title: Promax
            name: promax
          - title: Oblimin
            name: oblimin
          - title: Simplimax
            name: simplimax
        default: oblimin
        description:
          R: >
            `'none'`, `'varimax'`, `'quartimax'`, `'promax'`, `'oblimin'`
            (default), or `'simplimax'`, the rotation to use in estimation
      - name: hideLoadings
        title: Hide loadings below
        type: Number
        default: 0.3
        description:
          R: |
            a number (default: 0.3), hide factor loadings below this value
      - name: sortLoadings
        title: Sort loadings by size
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), sort the factor loadings by size
      - name: screePlot
        title: Scree plot
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show scree plot
      - name: eigen
        title: Initial eigenvalues
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show eigenvalue table
      - name: factorCor
        title: Factor correlations
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show inter-factor correlations
      - name: factorSummary
        title: Factor summary
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show factor summary
      - name: modelFit
        title: Model fit measures
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), show model fit measures and test
      - name: kmo
        title: KMO measure of sampling adequacy
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), show Kaiser-Meyer-Olkin (KMO) measure
            of sampling adequacy (MSA) results
      - name: bartlett
        title: Bartlett's test of sphericity
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), show Bartlett's test of sphericity
            results
      - name: factorScoresOV
        title: Factor scores
        type: Output
      - name: factorScoreMethod
        title: Estimation method
        type: List
        options:
          - title: Thurstone
            name: Thurstone
          - title: Bartlett
            name: Bartlett
          - title: ten Berge
            name: tenBerge
          - title: Anderson & Rubin
            name: Anderson
          - title: Harman
            name: Harman
        default: Thurstone
        description:
          R: >
            `'Thurstone'` (default), `'Bartlett'`, `'tenBerge'`, `'Anderson'`,
            or `'Harman'` use respectively 'Thurstone', 'Bartlett', 'ten Berge',
            'Anderson & Rubin', or 'Harman' method for estimating factor scores
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"vars\",\"title\":\"Variables\",\"type\":\"Variables\",\"takeFromDataIfMissing\":true,\"suggested\":[\"ordinal\",\"continuous\"],\"permitted\":[\"numeric\"],\"rejectInf\":false,\"description\":{\"R\":\"a vector of strings naming the variables of interest in `data`\"}},{\"name\":\"nFactorMethod\",\"title\":\"Number of factors\",\"type\":\"List\",\"options\":[{\"name\":\"parallel\",\"title\":\"Based on parallel analysis\"},{\"name\":\"eigen\",\"title\":\"Based on eigenvalue\"},{\"name\":\"fixed\",\"title\":\"Fixed number\"}],\"default\":\"parallel\",\"description\":{\"R\":\"`'parallel'` (default), `'eigen'` or `'fixed'`, the way to determine the number of factors\\n\"}},{\"name\":\"nFactors\",\"title\":\"\",\"type\":\"Integer\",\"min\":1,\"default\":1,\"description\":{\"R\":\"an integer (default: 1), the number of factors in the model\\n\"}},{\"name\":\"minEigen\",\"title\":\"Minimum value\",\"type\":\"Number\",\"default\":0,\"description\":{\"R\":\"a number (default: 0), the minimal eigenvalue for a factor to be included in the model\\n\"}},{\"name\":\"extraction\",\"title\":\"Extraction\",\"type\":\"List\",\"options\":[{\"title\":\"Minimum residuals\",\"name\":\"minres\"},{\"title\":\"Maximum likelihood\",\"name\":\"ml\"},{\"title\":\"Principal axis\",\"name\":\"pa\"}],\"default\":\"minres\",\"description\":{\"R\":\"`'minres'` (default), `'ml'`, or `'pa'` use respectively 'minimum residual', 'maximum likelihood', or 'prinicipal axis' as the factor extraction method\\n\"}},{\"name\":\"rotation\",\"title\":\"Rotation\",\"type\":\"List\",\"options\":[{\"title\":\"None\",\"name\":\"none\"},{\"title\":\"Varimax\",\"name\":\"varimax\"},{\"title\":\"Quartimax\",\"name\":\"quartimax\"},{\"title\":\"Promax\",\"name\":\"promax\"},{\"title\":\"Oblimin\",\"name\":\"oblimin\"},{\"title\":\"Simplimax\",\"name\":\"simplimax\"}],\"default\":\"oblimin\",\"description\":{\"R\":\"`'none'`, `'varimax'`, `'quartimax'`, `'promax'`, `'oblimin'` (default), or `'simplimax'`, the rotation to use in estimation\\n\"}},{\"name\":\"hideLoadings\",\"title\":\"Hide loadings below\",\"type\":\"Number\",\"default\":0.3,\"description\":{\"R\":\"a number (default: 0.3), hide factor loadings below this value\\n\"}},{\"name\":\"sortLoadings\",\"title\":\"Sort loadings by size\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), sort the factor loadings by size\\n\"}},{\"name\":\"screePlot\",\"title\":\"Scree plot\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show scree plot\\n\"}},{\"name\":\"eigen\",\"title\":\"Initial eigenvalues\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show eigenvalue table\\n\"}},{\"name\":\"factorCor\",\"title\":\"Factor correlations\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show inter-factor correlations\\n\"}},{\"name\":\"factorSummary\",\"title\":\"Factor summary\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show factor summary\\n\"}},{\"name\":\"modelFit\",\"title\":\"Model fit measures\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show model fit measures and test\\n\"}},{\"name\":\"kmo\",\"title\":\"KMO measure of sampling adequacy\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show Kaiser-Meyer-Olkin (KMO) measure of sampling adequacy (MSA) results\\n\"}},{\"name\":\"bartlett\",\"title\":\"Bartlett's test of sphericity\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), show Bartlett's test of sphericity results\\n\"}},{\"name\":\"factorScoresOV\",\"title\":\"Factor scores\",\"type\":\"Output\"},{\"name\":\"factorScoreMethod\",\"title\":\"Estimation method\",\"type\":\"List\",\"options\":[{\"title\":\"Thurstone\",\"name\":\"Thurstone\"},{\"title\":\"Bartlett\",\"name\":\"Bartlett\"},{\"title\":\"ten Berge\",\"name\":\"tenBerge\"},{\"title\":\"Anderson & Rubin\",\"name\":\"Anderson\"},{\"title\":\"Harman\",\"name\":\"Harman\"}],\"default\":\"Thurstone\",\"description\":{\"R\":\"`'Thurstone'` (default), `'Bartlett'`, `'tenBerge'`, `'Anderson'`, or `'Harman'` use respectively 'Thurstone', 'Bartlett', 'ten Berge', 'Anderson & Rubin', or 'Harman' method for estimating factor scores\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Exploratory Factor Analysis\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tpersistentItems: false,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\tname: \"vars\",\n\t\t\t\t\t\t\tisTarget: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\ttypeName: 'LayoutBox',\n\t\t\tmargin: \"large\",\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Method\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"extraction\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"rotation\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Number of Factors\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_parallel\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"parallel\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_eigen\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"eigen\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"minEigen\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Eigenvalues greater than\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(nFactorMethod_eigen)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"nFactorMethod_fixed\",\n\t\t\t\t\t\t\t\t\toptionName: \"nFactorMethod\",\n\t\t\t\t\t\t\t\t\toptionPart: \"fixed\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"nFactors\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"factor(s)\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(nFactorMethod_fixed)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Assumption Checks\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"bartlett\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"kmo\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Factor Loadings\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"hideLoadings\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\tformat: FormatDef.number\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"sortLoadings\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Additional Output\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"factorSummary\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"factorCor\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"modelFit\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"eigen\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"screePlot\",\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Save\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Output,\n\t\t\t\t\t\t\ttypeName: 'Output',\n\t\t\t\t\t\t\tname: \"factorScoresOV\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.ComboBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'ComboBox',\n\t\t\t\t\t\t\t\t\tname: \"factorScoreMethod\",\n\t\t\t\t\t\t\t\t\tenable: \"(factorScoresOV)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
  - title: Confirmatory Factor Analysis
    name: cfa
    ns: jmv
    menuGroup: Factor
    menuSubgroup: Data Reduction
    menuTitle: Confirmatory Factor Analysis
    description: Confirmatory Factor Analysis
    options:
      - name: data
        type: Data
        description:
          R: the data as a data frame
      - name: factors
        title: Factors
        type: Array
        default:
          - label: Factor 1
            vars: []
        template:
          type: Group
          elements:
            - name: label
              type: String
            - name: vars
              type: Variables
              suggested:
                - continuous
              permitted:
                - numeric
        description:
          R: >
            a list containing named lists that define the `label` of the factor
            and the `vars` that belong to that factor
      - name: resCov
        title: Residual Covariances
        type: Pairs
        description:
          R: >
            a list of lists specifying the residual covariances that need to be
            estimated
      - name: miss
        title: Missing Values Method
        type: List
        options:
          - listwise
          - fiml
        default: fiml
        description:
          R: >
            `'listwise'` or `'fiml'`, how to handle missing values; `'listwise'`
            excludes a row from all analyses if one of its entries is missing,
            `'fiml'` uses a full information maximum likelihood method to
            estimate the model.
      - name: constrain
        title: Constraints
        type: List
        options:
          - facVar
          - facInd
        default: facVar
        description:
          R: >
            `'facVar'` or `'facInd'`, how to contrain the model; `'facVar'`
            fixes the factor variances to one, `'facInd'` fixes each factor to
            the scale of its first indicator.
      - name: estTest
        title: Test statistics
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide 'Z' and 'p' values for the
            model estimates
      - name: ci
        title: Confidence interval
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a confidence interval for the
            model estimates
      - name: ciWidth
        title: Confidence level
        type: Number
        min: 50
        max: 99.9
        default: 95
        description:
          R: >
            a number between 50 and 99.9 (default: 95) specifying the confidence
            interval width that is used as `'ci'`
      - name: stdEst
        title: Standardized estimate
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide a standardized estimate for the
            model estimates
      - name: factCovEst
        title: Factor covariances
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide estimates for the factor
            (co)variances
      - name: factInterceptEst
        title: Factor intercepts
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide estimates for the factor
            intercepts
      - name: resCovEst
        title: Residual covariances
        type: Bool
        default: false
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide estimates for the residual
            (co)variances
      - name: resInterceptEst
        title: Residual intercepts
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide estimates for the residual
            intercepts
      - name: fitMeasures
        title: Fit Measures
        type: NMXList
        options:
          - name: cfi
            title: CFI
          - name: tli
            title: TLI
          - name: srmr
            title: SRMR
          - name: rmsea
            title: RMSEA
          - name: aic
            title: AIC
          - name: bic
            title: BIC
        default:
          - cfi
          - tli
          - rmsea
        description:
          R: >
            one or more of `'cfi'`, `'tli'`, `'srmr'`, `'rmsea'`, `'aic'`, or
            `'bic'`; use CFI, TLI, SRMR, RMSEA + 90% confidence interval,
            adjusted AIC, and BIC model fit measures, respectively
      - name: modelTest
        title: χ² test
        type: Bool
        default: true
        description:
          R: >
            `TRUE` (default) or `FALSE`, provide a chi-square test for exact fit
            that compares the model with the perfect fitting model
      - name: pathDiagram
        title: Path diagram
        type: Bool
        default: false
        description:
          R: |
            `TRUE` or `FALSE` (default), provide a path diagram of the model
      - name: corRes
        title: Residuals observed correlation matrix
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide the residuals for the observed
            correlation matrix (i.e., the difference between the expected
            correlation matrix and the observed correlation matrix)
      - name: hlCorRes
        title: Highlight values above
        type: Number
        default: 0.1
        description:
          R: >
            a number (default: 0.1), highlight values in the `'corRes'` table
            above this value
      - name: mi
        title: Modification indices
        type: Bool
        default: false
        description:
          R: >
            `TRUE` or `FALSE` (default), provide modification indices for the
            parameters not included in the model
      - name: hlMI
        title: Highlight values above
        type: Number
        default: 3
        description:
          R: >
            a number (default: 3), highlight values in the `'modIndices'` tables
            above this value
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\nconst events = {\n\n    update: function(ui) {\n        updateModelLabels(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onEvent_test_listItemsAdded: function(ui, data) {\n        updateModelLabels(ui, this);\n        calcModelTerms(ui, this);\n        setTimeout(() => {\n            data.item.controls[0].$input.focus();\n        }, 0);\n    },\n\n    onEvent_test_listItemsChanged: function(ui) {\n        updateModelLabels(ui, this);\n        calcModelTerms(ui, this);\n    },\n\n    onChange_resCovSupplier: function(ui) {\n        let values = this.itemsToValues(ui.resCovSupplier.value());\n        this.checkPairsValue(ui.resCov, values);\n    },\n\n    onUpdate_resCovSupplier: function(ui) {\n        calcModelTerms(ui, this);\n    },\n\n    onEvent_factorNameChange : function(ui) {\n        updateModelLabels(ui, this);\n    }\n};\n\nconst updateModelLabels = function(ui, context) {\n    let list = ui.factors.applyToItems(0, (item, index) => {\n        let value = item.controls[0].value();\n        if ( ! value || value.trim() === '')\n            item.controls[0].setValue(_('Factor {0}').replace('{0}', (index + 1)) );\n    });\n};\n\nconst calcModelTerms = function(ui, context) {\n\n    let factorList = context.cloneArray(ui.factors.value(), []);\n\n    let variables = [];\n    for (let i = 0 ; i < factorList.length; i++) {\n        let vars = factorList[i].vars;\n        if (vars) {\n            for (let y = 0; y < vars.length; y++) {\n                let variable = vars[y];\n                if (variable) {\n                    let found = false;\n                    for (let j = 0; j < variables.length; j++) {\n                        if (variables[j] === variable) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found == false)\n                        variables.push(variable);\n                }\n            }\n        }\n    }\n\n    ui.resCovSupplier.setValue(context.valuesToItems(variables, FormatDef.variable));\n};\n\nmodule.exports = events;\n\n},{}],2:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [{\"name\":\"data\",\"type\":\"Data\",\"description\":{\"R\":\"the data as a data frame\"}},{\"name\":\"factors\",\"title\":\"Factors\",\"type\":\"Array\",\"default\":[{\"label\":\"Factor 1\",\"vars\":[]}],\"template\":{\"type\":\"Group\",\"elements\":[{\"name\":\"label\",\"type\":\"String\"},{\"name\":\"vars\",\"type\":\"Variables\",\"suggested\":[\"continuous\"],\"permitted\":[\"numeric\"]}]},\"description\":{\"R\":\"a list containing named lists that define the `label` of the factor and the `vars` that belong to that factor\\n\"}},{\"name\":\"resCov\",\"title\":\"Residual Covariances\",\"type\":\"Pairs\",\"description\":{\"R\":\"a list of lists specifying the residual covariances that need to be estimated\\n\"}},{\"name\":\"miss\",\"title\":\"Missing Values Method\",\"type\":\"List\",\"options\":[\"listwise\",\"fiml\"],\"default\":\"fiml\",\"description\":{\"R\":\"`'listwise'` or `'fiml'`, how to handle missing values; `'listwise'` excludes a row from all analyses if one of its entries is missing, `'fiml'` uses a full information maximum likelihood method to estimate the model.\\n\"}},{\"name\":\"constrain\",\"title\":\"Constraints\",\"type\":\"List\",\"options\":[\"facVar\",\"facInd\"],\"default\":\"facVar\",\"description\":{\"R\":\"`'facVar'` or `'facInd'`, how to contrain the model; `'facVar'` fixes the factor variances to one, `'facInd'` fixes each factor to the scale of its first indicator.\\n\"}},{\"name\":\"estTest\",\"title\":\"Test statistics\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide 'Z' and 'p' values for the model estimates\\n\"}},{\"name\":\"ci\",\"title\":\"Confidence interval\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a confidence interval for the model estimates\\n\"}},{\"name\":\"ciWidth\",\"title\":\"Confidence level\",\"type\":\"Number\",\"min\":50,\"max\":99.9,\"default\":95,\"description\":{\"R\":\"a number between 50 and 99.9 (default: 95) specifying the confidence interval width that is used as `'ci'`\\n\"}},{\"name\":\"stdEst\",\"title\":\"Standardized estimate\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a standardized estimate for the model estimates\\n\"}},{\"name\":\"factCovEst\",\"title\":\"Factor covariances\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimates for the factor (co)variances\\n\"}},{\"name\":\"factInterceptEst\",\"title\":\"Factor intercepts\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimates for the factor intercepts\\n\"}},{\"name\":\"resCovEst\",\"title\":\"Residual covariances\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide estimates for the residual (co)variances\\n\"}},{\"name\":\"resInterceptEst\",\"title\":\"Residual intercepts\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide estimates for the residual intercepts\\n\"}},{\"name\":\"fitMeasures\",\"title\":\"Fit Measures\",\"type\":\"NMXList\",\"options\":[{\"name\":\"cfi\",\"title\":\"CFI\"},{\"name\":\"tli\",\"title\":\"TLI\"},{\"name\":\"srmr\",\"title\":\"SRMR\"},{\"name\":\"rmsea\",\"title\":\"RMSEA\"},{\"name\":\"aic\",\"title\":\"AIC\"},{\"name\":\"bic\",\"title\":\"BIC\"}],\"default\":[\"cfi\",\"tli\",\"rmsea\"],\"description\":{\"R\":\"one or more of `'cfi'`, `'tli'`, `'srmr'`, `'rmsea'`, `'aic'`, or `'bic'`; use CFI, TLI, SRMR, RMSEA + 90% confidence interval, adjusted AIC, and BIC model fit measures, respectively\\n\"}},{\"name\":\"modelTest\",\"title\":\"χ² test\",\"type\":\"Bool\",\"default\":true,\"description\":{\"R\":\"`TRUE` (default) or `FALSE`, provide a chi-square test for exact fit that compares the model with the perfect fitting model\\n\"}},{\"name\":\"pathDiagram\",\"title\":\"Path diagram\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide a path diagram of the model\\n\"}},{\"name\":\"corRes\",\"title\":\"Residuals observed correlation matrix\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide the residuals for the observed correlation matrix (i.e., the difference between the expected correlation matrix and the observed correlation matrix)\\n\"}},{\"name\":\"hlCorRes\",\"title\":\"Highlight values above\",\"type\":\"Number\",\"default\":0.1,\"description\":{\"R\":\"a number (default: 0.1), highlight values in the `'corRes'` table above this value\\n\"}},{\"name\":\"mi\",\"title\":\"Modification indices\",\"type\":\"Bool\",\"default\":false,\"description\":{\"R\":\"`TRUE` or `FALSE` (default), provide modification indices for the parameters not included in the model\\n\"}},{\"name\":\"hlMI\",\"title\":\"Highlight values above\",\"type\":\"Number\",\"default\":3,\"description\":{\"R\":\"a number (default: 3), highlight values in the `'modIndices'` tables above this value\\n\"}}];\n\nconst view = function() {\n    \n    \n\n    View.extend({\n        jus: \"2.0\",\n\n        events: [\n\n\t],\n\n\tupdate: require('./cfa.events').update\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Confirmatory Factor Analysis\",\n    jus: \"2.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\t\t{\n\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\ttypeName: 'VariableSupplier',\n\t\t\tpersistentItems: true,\n\t\t\tstretchFactor: 1,\n\t\t\tsuggested: [\"continuous\",\"ordinal\"],\n\t\t\tpermitted: [\"numeric\"],\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\tlabel: \"Factors\",\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.ListBox,\n\t\t\t\t\t\t\ttypeName: 'ListBox',\n\t\t\t\t\t\t\tname: \"factors\",\n\t\t\t\t\t\t\theight: \"large\",\n\t\t\t\t\t\t\taddButton: \"Add New Factor\",\n\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./cfa.events').onEvent_test_listItemsAdded },\n\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./cfa.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttemplateName: \"linreg-block-template\",\n\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\t\tmargin: \"normal\",\n\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t{ execute: require('./cfa.events').onEvent_factorNameChange }\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tvalueKey: [\"label\"],\n\t\t\t\t\t\t\t\t\t\tborderless: true,\n\t\t\t\t\t\t\t\t\t\tname: \"blockName\",\n\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\tmargin: \"normal\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\t\tvalueFilter: \"unique\",\n\t\t\t\t\t\t\t\t\t\tevents: [\n\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemAdded', execute: require('./cfa.events').onEvent_test_listItemsChanged },\n\t\t\t\t\t\t\t\t\t\t\t{ onEvent: 'listItemRemoved', execute: require('./cfa.events').onEvent_test_listItemsChanged }\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\tvalueKey: [\"vars\"],\n\t\t\t\t\t\t\t\t\t\tname: \"blockList\",\n\t\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\t\theight: \"auto\",\n\t\t\t\t\t\t\t\t\t\tghostText: \"drag variables here\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Residual Covariances\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.VariableSupplier,\n\t\t\t\t\ttypeName: 'VariableSupplier',\n\t\t\t\t\tname: \"resCovSupplier\",\n\t\t\t\t\tpopulate: \"manual\",\n\t\t\t\t\tpersistentItems: true,\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tevents: [\n\t\t\t\t\t\t{ execute: require('./cfa.events').onChange_resCovSupplier },\n\t\t\t\t\t\t{ onEvent: 'update', execute: require('./cfa.events').onUpdate_resCovSupplier }\n\t\t\t\t\t],\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.TargetLayoutBox,\n\t\t\t\t\t\t\ttypeName: 'TargetLayoutBox',\n\t\t\t\t\t\t\tlabel: \"Residual Covariances\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariablesListBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'VariablesListBox',\n\t\t\t\t\t\t\t\t\tname: \"resCov\",\n\t\t\t\t\t\t\t\t\tfullRowSelect: true,\n\t\t\t\t\t\t\t\t\tisTarget: true,\n\t\t\t\t\t\t\t\t\tcolumns: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"i1\",\n\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"i2\",\n\t\t\t\t\t\t\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\t\t\t\t\t\t\ttemplate:\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.VariableLabel,\n\t\t\t\t\t\t\t\t\t\t\t\ttypeName: 'VariableLabel'\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Options\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Missing Values Method\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_fiml\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"fiml\",\n\t\t\t\t\t\t\t\t\tlabel: \"Full information maximum likelihood\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"miss_listwise\",\n\t\t\t\t\t\t\t\t\toptionName: \"miss\",\n\t\t\t\t\t\t\t\t\toptionPart: \"listwise\",\n\t\t\t\t\t\t\t\t\tlabel: \"Exclude cases listwise\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Constraints\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"constrain_facVar\",\n\t\t\t\t\t\t\t\t\toptionName: \"constrain\",\n\t\t\t\t\t\t\t\t\toptionPart: \"facVar\",\n\t\t\t\t\t\t\t\t\tlabel: \"Factor variances = 1\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.RadioButton,\n\t\t\t\t\t\t\t\t\ttypeName: 'RadioButton',\n\t\t\t\t\t\t\t\t\tname: \"constrain_facInd\",\n\t\t\t\t\t\t\t\t\toptionName: \"constrain\",\n\t\t\t\t\t\t\t\t\toptionPart: \"facInd\",\n\t\t\t\t\t\t\t\t\tlabel: \"Scale factor = scale first indicator\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Estimates\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Results\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"factCovEst\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"factInterceptEst\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"resCovEst\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"resInterceptEst\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Statistics\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"estTest\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"ci\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"ciWidth\",\n\t\t\t\t\t\t\t\t\t\t\tlabel: \"Interval\",\n\t\t\t\t\t\t\t\t\t\t\tsuffix: \"%\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(ci)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"stdEst\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Model Fit\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Test for Exact Fit\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"modelTest\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\t\t\tlabel: \"Fit Measures\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_cfi\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"cfi\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_tli\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"tli\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_srmr\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"srmr\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_rmsea\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"rmsea\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_aic\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"aic\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tname: \"fitMeasures_bic\",\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\t\t\toptionName: \"fitMeasures\",\n\t\t\t\t\t\t\t\t\t\t\toptionPart: \"bic\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tname: \"fitMeasures\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype: DefaultControls.CollapseBox,\n\t\t\ttypeName: 'CollapseBox',\n\t\t\tlabel: \"Additional Output\",\n\t\t\tcollapsed: true,\n\t\t\tstretchFactor: 1,\n\t\t\tcontrols: [\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":0,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Post-Hoc Model Performance\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"corRes\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"hlCorRes\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(corRes)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"mi\",\n\t\t\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: DefaultControls.TextBox,\n\t\t\t\t\t\t\t\t\t\t\ttypeName: 'TextBox',\n\t\t\t\t\t\t\t\t\t\t\tname: \"hlMI\",\n\t\t\t\t\t\t\t\t\t\t\tformat: FormatDef.number,\n\t\t\t\t\t\t\t\t\t\t\tenable: \"(mi)\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: DefaultControls.LayoutBox,\n\t\t\t\t\ttypeName: 'LayoutBox',\n\t\t\t\t\tmargin: \"large\",\n\t\t\t\t\tstretchFactor: 1,\n\t\t\t\t\tcell: {\"column\":1,\"row\":0},\n\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: DefaultControls.Label,\n\t\t\t\t\t\t\ttypeName: 'Label',\n\t\t\t\t\t\t\tlabel: \"Plots\",\n\t\t\t\t\t\t\tcontrols: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: DefaultControls.CheckBox,\n\t\t\t\t\t\t\t\t\ttypeName: 'CheckBox',\n\t\t\t\t\t\t\t\t\tname: \"pathDiagram\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{\"./cfa.events\":1}]},{},[2])(2)\n});"
  - title: Results
    name: empty
    ns: jmv
    menuGroup: dev
    menuTitle: Results
    hidden: true
    options: []
    uijs: "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.module = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n\n// This file is an automatically generated and should not be edited\n\n'use strict';\n\nconst options = [];\n\nconst view = function() {\n    \n    this.handlers = { }\n\n    View.extend({\n        jus: \"3.0\",\n\n        events: [\n\n\t]\n\n    }).call(this);\n}\n\nview.layout = ui.extend({\n\n    label: \"Results\",\n    jus: \"3.0\",\n    type: \"root\",\n    stage: 0, //0 - release, 1 - development, 2 - proposed\n    controls: [\n\n\t]\n});\n\nmodule.exports = { view : view, options: options };\n\n},{}]},{},[1])(1)\n});"
datasets:
  - name: 'Big 5 (Dolan, Oort, Stoel & Wicherts, 2009)'
    path: 'Big 5 (Dolan, Oort, Stoel & Wicherts, 2009).csv'
    description: A nice correlation data set
  - name: Tooth Growth
    path: Tooth Growth.csv
    description: An uninspiring ANOVA data set
  - name: 'Bugs (Ryan, Wilde & Crist, 2013)'
    path: 'Bugs (Ryan, Wilde & Crist, 2013).csv'
    description: A repeated measures ANOVA data set
  - name: Anderson's Iris Data
    path: iris.csv
    description: The 'iris' data set from R
usesNative: true
minApp: 1.0.8
languages:
  - en
  - es
  - fr
  - it
  - ja
  - ko
  - ml
  - pt
  - tr
  - zh-cn
rVersion: 4.1.2

...
